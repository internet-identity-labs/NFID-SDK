{"version":3,"file":"static/js/202.82d7f97d.chunk.js","mappings":"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","sources":["features/embed/components/buy.tsx"],"sourcesContent":["import { chainService } from \"packages/integration-ethereum/src/lib/decoder/chain-service\"\nimport { useMemo } from \"react\"\n\nimport { IWarningAccordionOption } from \"@nfid-frontend/ui\"\n\nimport { ApproverCmpProps } from \"frontend/features/embed/types\"\nimport { calcPrice } from \"frontend/features/embed/util/calcPriceUtil\"\nimport { useExchangeRates } from \"frontend/features/fungable-token/eth/hooks/use-eth-exchange-rate\"\n\nimport { SendTransaction } from \"../ui/send-transaction\"\n\nconst MappedBuy: React.FC<ApproverCmpProps> = ({\n  appMeta,\n  rpcMessage,\n  rpcMessageDecoded,\n  populatedTransaction,\n  disableConfirmButton,\n  onConfirm,\n  onReject,\n}) => {\n  const { rates } = useExchangeRates()\n  const { symbol, currency, chainName } = chainService.getSymbolAndChainName(\n    rpcMessage.options.chainId,\n  )\n  const rate = rates[currency]\n\n  const price = useMemo(() => {\n    return calcPrice(rate, populatedTransaction)\n  }, [rate, populatedTransaction])\n\n  const warnings = useMemo(() => {\n    if (!price) return []\n    let warnings: IWarningAccordionOption[] = []\n\n    if (\n      !rpcMessageDecoded?.data?.meta?.content[0].url &&\n      !rpcMessageDecoded?.data?.meta?.name &&\n      rpcMessageDecoded?.data?.collectionData?.name\n    )\n      warnings.push({\n        title: \"Preview unavailable\",\n        subtitle:\n          \"Unable to estimate asset changes. Please make sure you trust this dapp.\",\n      })\n\n    if (price.isNetworkIsBusyWarning)\n      warnings.push({\n        title: \"Network is busy\",\n        subtitle: (\n          <>\n            Gas prices are high and estimates are less accurate.\n            <span className=\"text-blue-600\"> Adjust the network fee.</span>\n          </>\n        ),\n      })\n\n    return warnings\n  }, [\n    price,\n    rpcMessageDecoded?.data?.collectionData?.name,\n    rpcMessageDecoded?.data?.meta?.content,\n    rpcMessageDecoded?.data?.meta?.name,\n  ])\n\n  const total = useMemo(() => {\n    if (!populatedTransaction) return\n\n    return String(Number(populatedTransaction[0]?.value) / 10 ** 18)\n  }, [populatedTransaction])\n\n  return (\n    <SendTransaction\n      title=\"Buy collectible\"\n      applicationMeta={appMeta}\n      fromAddress={rpcMessage?.params[0].from}\n      toAddress={rpcMessage?.params[0].to}\n      network={chainName}\n      currency={symbol}\n      networkFee={price.fee}\n      totalUSD={price.totalUsd}\n      totalToken={price.total}\n      price={total}\n      onApprove={onConfirm}\n      disableApproveButton={disableConfirmButton}\n      isInsufficientBalance={price.isInsufficientFundsError}\n      warnings={warnings}\n      onCancel={onReject}\n      assets={[\n        {\n          icon: rpcMessageDecoded?.data?.meta?.content[0].url,\n          title: rpcMessageDecoded?.data?.meta?.name,\n          subtitle: rpcMessageDecoded?.data?.collectionData?.name,\n        },\n      ]}\n    />\n  )\n}\n\nexport default MappedBuy\n"],"names":["appMeta","rpcMessage","rpcMessageDecoded","populatedTransaction","disableConfirmButton","onConfirm","onReject","rates","useExchangeRates","symbol","currency","chainName","chainService","options","chainId","rate","price","useMemo","calcPrice","warnings","data","meta","content","url","name","collectionData","push","title","subtitle","isNetworkIsBusyWarning","className","total","String","Number","value","applicationMeta","fromAddress","params","from","toAddress","to","network","networkFee","fee","totalUSD","totalUsd","totalToken","onApprove","disableApproveButton","isInsufficientBalance","isInsufficientFundsError","onCancel","assets","icon"],"sourceRoot":""}