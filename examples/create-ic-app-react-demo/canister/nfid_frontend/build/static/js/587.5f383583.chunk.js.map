{"version":3,"file":"static/js/587.5f383583.chunk.js","mappings":"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","sources":["ui/pages/new-profile/assets/arrow-right.svg","ui/pages/new-profile/assets/actions-icon.svg","ui/pages/new-profile/assets/header.tsx","ui/pages/new-profile/assets/nft/not-present-nft.tsx","ui/utils/use-window-size.ts","ui/pages/new-profile/assets/nft/present-nft.tsx","ui/pages/new-profile/assets/nft/index.tsx","ui/pages/new-profile/assets/transactions.svg","ui/pages/new-profile/assets/index.tsx","apps/identity-manager/profile/assets/use-account-options.tsx","apps/identity-manager/profile/assets/index.tsx","ui/atoms/application-icon/index.tsx","ui/atoms/nft-preview/assets/copy.svg","ui/atoms/nft-preview/assets/transfer.svg","ui/atoms/nft-preview/index.tsx","ui/atoms/util/util.tsx","ui/templates/profile-container/Container.tsx","../../../node_modules/@xstate/react/es/useActor.js"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowRight(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 8,\n    height: 15,\n    viewBox: \"0 0 8 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 1.8457L6.65432 7.50002L1 13.1543\",\n    stroke: \"#9CA3AF\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRight);\nexport default __webpack_public_path__ + \"static/media/arrow-right.1a4af3bbde21462811bc74294f58cb2e.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgActionsIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 16.125V11.3125\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 7.875H12.0092\",\n    stroke: \"black\",\n    strokeWidth: 2.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgActionsIcon);\nexport default __webpack_public_path__ + \"static/media/actions-icon.fc3cf7c84d22e15dd1e51200091ae35a.svg\";\nexport { ForwardRef as ReactComponent };","import { FilterPopover, Image } from \"@nfid-frontend/ui\"\nimport {\n  DropdownSelect,\n  IconCmpFilters,\n  IOption,\n  Tooltip,\n} from \"@nfid-frontend/ui\"\n\nimport { AssetFilter } from \"frontend/ui/connnector/types\"\n\nimport ActionIcon from \"./actions-icon.svg\"\n\ninterface IProfileAssetsHeader {\n  blockchainOptions: IOption[]\n  blockchainFilter: string[]\n  setBlockchainFilter: (value: string[]) => void\n  accountsOptions: IOption[]\n  assetFilter: AssetFilter[]\n  setAssetFilter: (value: AssetFilter[]) => void\n  resetFilters: () => void\n}\n\nexport const ProfileAssetsHeader = ({\n  accountsOptions,\n  assetFilter,\n  setAssetFilter,\n  blockchainFilter,\n  blockchainOptions,\n  setBlockchainFilter,\n  resetFilters,\n}: IProfileAssetsHeader) => {\n  return (\n    <div className=\"flex items-center justify-between w-full\">\n      <p>Your tokens</p>\n      <div className=\"flex items-center\">\n        <div className=\"flex justify-center cursor-pointer\" id=\"asset_filter\">\n          <FilterPopover\n            onReset={() => resetFilters()}\n            trigger={<IconCmpFilters />}\n            align=\"end\"\n          >\n            <DropdownSelect\n              label=\"Blockchain\"\n              options={blockchainOptions}\n              selectedValues={blockchainFilter}\n              setSelectedValues={setBlockchainFilter}\n              id=\"blockchain_filter\"\n            />\n            <DropdownSelect\n              label=\"Account\"\n              options={accountsOptions}\n              selectedValues={assetFilter.map((item) => item?.principal ?? \"\")}\n              setSelectedValues={(values) =>\n                setAssetFilter(values.map((item) => ({ principal: item })))\n              }\n              id=\"account_filter\"\n            />\n          </FilterPopover>\n        </div>\n        <Tooltip\n          tip={\n            <div>\n              Transaction history for the DIP-20\n              <br /> token standard is not supported.\n            </div>\n          }\n        >\n          <div className=\"ml-2 cursor-pointer\">\n            <Image src={ActionIcon} alt=\"ActionIcon\" />\n          </div>\n        </Tooltip>\n      </div>\n    </div>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\nimport { Image } from \"@nfid-frontend/ui\"\n\nimport { NonFungibleToken } from \"frontend/features/non-fungable-token/types\"\nimport { Loader } from \"frontend/ui/atoms/loader\"\nimport ProfileContainer from \"frontend/ui/templates/profile-container/Container\"\n\nimport WithoutNFT from \"./assets/NFTComing.png\"\n\ninterface IProfileNFTNotPresent extends React.HTMLAttributes<HTMLDivElement> {\n  nfts?: NonFungibleToken[]\n}\n\nexport const ProfileNFTNotPresent: React.FC<IProfileNFTNotPresent> = ({\n  nfts,\n}) => {\n  return (\n    <ProfileContainer\n      title=\"Your NFTs\"\n      className={clsx(\"pb-40\", \"sm:pb-[26px] mt-[30px] relative\")}\n    >\n      {typeof nfts === \"undefined\" ? (\n        <div className=\"flex items-center justify-center w-full h-full p-10\">\n          <Loader imageClasses=\"h-20\" isLoading={true} fullscreen={false} />\n        </div>\n      ) : (\n        <>\n          <div className=\"text-neutral-900 text-sm leading-5 max-w-[320px] z-20 relative\">\n            <p>\n              NFTs in the EXT standard you received to your main NFID wallet or\n              any application where you signed in with NFID will be listed here.\n              If you’ve connected your II anchor with NFID, EXT NFTs in those\n              connected wallets will also be available.\n            </p>\n            <p className=\"mt-4\">\n              Email us at{\" \"}\n              <a\n                href=\"mailto:hello@identitylabs.ooo\"\n                className=\"transition-opacity text-blue hover:opacity-50\"\n              >\n                hello@identitylabs.ooo\n              </a>{\" \"}\n              for support.\n            </p>\n          </div>\n          <Image\n            src={WithoutNFT}\n            alt=\"Coming soon\"\n            className={clsx(\n              \"-bottom-32 -right-[80px] w-[110vw]\",\n              \"sm:top-0 sm:-right-[30px] sm:w-2/3\",\n              \"absolute z-10 max-w-none\",\n            )}\n          />\n        </>\n      )}\n    </ProfileContainer>\n  )\n}\n","import { useState, useEffect } from \"react\"\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window\n  return {\n    width,\n    height,\n  }\n}\n\nexport default function useWindowSize() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions(),\n  )\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions())\n    }\n\n    window.addEventListener(\"resize\", handleResize)\n    return () => window.removeEventListener(\"resize\", handleResize)\n  }, [])\n\n  return windowDimensions\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport { ProfileConstants } from \"frontend/apps/identity-manager/profile/routes\"\nimport { UserNonFungibleToken } from \"frontend/features/non-fungable-token/types\"\nimport NFTPreview from \"frontend/ui/atoms/nft-preview\"\nimport ProfileContainer from \"frontend/ui/templates/profile-container/Container\"\nimport useWindowSize from \"frontend/ui/utils/use-window-size\"\n\ninterface IProfileAssetsNFT extends React.HTMLAttributes<HTMLDivElement> {\n  nfts: UserNonFungibleToken[]\n}\n\nexport const ProfileNFTPresent: React.FC<IProfileAssetsNFT> = ({ nfts }) => {\n  const { width } = useWindowSize()\n\n  const visibleLength = React.useMemo(() => {\n    return width < 1536 ? 3 : 4\n  }, [width])\n\n  return (\n    <div>\n      <ProfileContainer\n        title={\n          <>\n            <span>Your latest collectibles</span>\n            <Link\n              className={clsx(\n                \"text-blue text-sm font-bold tracking-[0.01em]\",\n                \"hover:opacity-80 transition-opacity cursor-pointer\",\n                \"flex items-center space-x-1\",\n              )}\n              to={`${ProfileConstants.base}/${ProfileConstants.collectibles}`}\n            >\n              <span>View all</span>\n              <span\n                id={\"nfts-length\"}\n                className={clsx(\n                  \"text-xs font-bold text-white bg-blue-600 rounded-lg\",\n                  \"flex item-center justify-center\",\n                  \"px-2 py-[1px]\",\n                )}\n              >\n                {nfts.length}\n              </span>\n            </Link>\n          </>\n        }\n        className={clsx(\"pb-[26px] mt-[30px] mb-[30px] relative\")}\n        id={\"asset-collection-nft\"}\n      >\n        <div\n          className={clsx(\n            \"grid gap-5 mt-2\",\n            \"grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4\",\n          )}\n          id={\"nft-container\"}\n        >\n          {nfts.slice(0, visibleLength).map((nft) => (\n            <NFTPreview {...nft} key={`nft_${nft.tokenId}_${Math.random()}`} />\n          ))}\n        </div>\n      </ProfileContainer>\n    </div>\n  )\n}\n","import React from \"react\"\n\nimport { UserNonFungibleToken } from \"frontend/features/non-fungable-token/types\"\n\nimport { ProfileNFTNotPresent } from \"./not-present-nft\"\nimport { ProfileNFTPresent } from \"./present-nft\"\n\ninterface IProfileAssetsNFT extends React.HTMLAttributes<HTMLDivElement> {\n  nfts?: UserNonFungibleToken[]\n}\n\nexport const ProfileAssetsNFT: React.FC<IProfileAssetsNFT> = ({ nfts }) => {\n  if (nfts && nfts.length) return <ProfileNFTPresent nfts={nfts} />\n  else return <ProfileNFTNotPresent nfts={nfts} />\n}\n","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgTransactions(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 9V13C16 14.8856 16 15.8284 15.4142 16.4142C14.8284 17 13.8856 17 12 17H4C2.89543 17 2 16.1046 2 15V15C2 13.8954 2.89543 13 4 13H12C13.8856 13 14.8284 13 15.4142 12.4142C16 11.8284 16 10.8856 16 9V5C16 3.11438 16 2.17157 15.4142 1.58579C14.8284 1 13.8856 1 12 1H6C4.11438 1 3.17157 1 2.58579 1.58579C2 2.17157 2 3.11438 2 5V14.7778\",\n    stroke: \"black\",\n    strokeWidth: 1.8\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 6L12 6\",\n    stroke: \"black\",\n    strokeWidth: 1.8,\n    strokeLinecap: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTransactions);\nexport default __webpack_public_path__ + \"static/media/transactions.0b39786c551f058036b58abde52b4457.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from \"clsx\"\nimport React, { useMemo, useState } from \"react\"\nimport { generatePath, useNavigate } from \"react-router-dom\"\n\nimport { Image } from \"@nfid-frontend/ui\"\nimport { blockchains } from \"@nfid/config\"\n\nimport { useAccountOptions } from \"frontend/apps/identity-manager/profile/assets/use-account-options\"\nimport { ProfileConstants } from \"frontend/apps/identity-manager/profile/routes\"\nimport { UserNonFungibleToken } from \"frontend/features/non-fungable-token/types\"\nimport { ApplicationIcon } from \"frontend/ui/atoms/application-icon\"\nimport { Loader } from \"frontend/ui/atoms/loader\"\nimport { AssetFilter } from \"frontend/ui/connnector/types\"\nimport ProfileContainer from \"frontend/ui/templates/profile-container/Container\"\nimport ProfileTemplate from \"frontend/ui/templates/profile-template/Template\"\n\nimport ArrowRight from \"./arrow-right.svg\"\nimport { ProfileAssetsHeader } from \"./header\"\nimport { ProfileAssetsNFT } from \"./nft\"\nimport Icon from \"./transactions.svg\"\n\ntype Token = {\n  toPresentation: (amount?: bigint) => number\n  icon: string\n  title: string\n  currency: string\n  balance?: bigint\n  price?: string\n  blockchain: string\n}\n\ninterface IProfileAssetsPage extends React.HTMLAttributes<HTMLDivElement> {\n  onIconClick: () => void\n  tokens: Token[]\n  nfts?: UserNonFungibleToken[]\n  assetFilter: AssetFilter[]\n  setAssetFilter: (value: AssetFilter[]) => void\n}\n\nconst ProfileAssetsPage: React.FC<IProfileAssetsPage> = ({\n  onIconClick,\n  tokens,\n  nfts,\n  assetFilter,\n  setAssetFilter,\n}) => {\n  const { options } = useAccountOptions()\n  const [blockchainFilter, setBlockchainFilter] = useState<string[]>([])\n  const navigate = useNavigate()\n  const handleNavigateToTokenDetails = React.useCallback(\n    (token: string) => () => {\n      navigate(\n        generatePath(`${ProfileConstants.base}/${ProfileConstants.wallet}`, {\n          token,\n        }),\n      )\n    },\n    [navigate],\n  )\n  console.debug(\"ProfileAssetsPage\", { tokens })\n\n  const filteredTokens = useMemo(() => {\n    return tokens.filter((token) => {\n      if (!blockchainFilter.length) return true\n      return blockchainFilter.includes(token.blockchain)\n    })\n  }, [blockchainFilter, tokens])\n\n  const blockchainOptions = React.useMemo(() => {\n    return blockchains.map((blockchain) => ({\n      label: blockchain,\n      value: blockchain,\n    }))\n  }, [])\n\n  const resetFilters = React.useCallback(() => {\n    setBlockchainFilter([])\n    setAssetFilter([])\n  }, [setAssetFilter])\n\n  return (\n    <ProfileTemplate\n      pageTitle=\"Assets\"\n      icon={Icon}\n      iconTooltip=\"Transactions history\"\n      onIconClick={onIconClick}\n      className=\"overflow-inherit\"\n    >\n      <ProfileContainer\n        title={\n          <ProfileAssetsHeader\n            accountsOptions={options}\n            assetFilter={assetFilter}\n            setAssetFilter={setAssetFilter}\n            blockchainOptions={blockchainOptions}\n            blockchainFilter={blockchainFilter}\n            setBlockchainFilter={setBlockchainFilter}\n            resetFilters={resetFilters}\n          />\n        }\n        showChildrenPadding={false}\n        className=\"sm:pb-0\"\n      >\n        <div className=\"px-5\">\n          <Loader isLoading={!tokens.length} />\n          <table className={clsx(\"text-left w-full hidden sm:table\")}>\n            <thead className={clsx(\"border-b border-black  h-16\")}>\n              <tr className={clsx(\"font-bold text-sm leading-5\")}>\n                <th>Name</th>\n                <th>Blockchain</th>\n                <th>Token balance</th>\n                <th className=\"pr-5 sm:pr-[30px]\">USD balance</th>\n              </tr>\n            </thead>\n            <tbody className=\"h-16 text-sm text-[#0B0E13]\">\n              {filteredTokens.map((token, index) => (\n                <tr\n                  key={`token_${index}`}\n                  id={`token_${token.title.replace(/\\s+/g, \"\")}`}\n                  onClick={handleNavigateToTokenDetails(token.currency)}\n                  className=\"border-b border-gray-200 cursor-pointer last:border-b-0 hover:bg-gray-100\"\n                >\n                  <td className=\"flex items-center h-16\">\n                    <ApplicationIcon\n                      className=\"mr-[18px]\"\n                      icon={token.icon}\n                      appName={token.title}\n                    />\n                    <div>\n                      <p\n                        className=\"text-sm font-bold\"\n                        id={`token_${token.title.replace(/\\s/g, \"\")}_currency`}\n                      >\n                        {token.currency}\n                      </p>\n                      <p className={\"text-[#9CA3AF] text-xs items-left flex\"}>\n                        {token.title}\n                      </p>\n                    </div>\n                  </td>\n                  <td id={`token_${token.title.replace(/\\s/g, \"\")}_blockchain`}>\n                    {token.blockchain}\n                  </td>\n                  <td\n                    className=\"text-sm\"\n                    id={`token_${token.title.replace(/\\s/g, \"\")}_balance`}\n                  >\n                    {token.toPresentation(token.balance)} {token.currency}\n                  </td>\n                  <td\n                    className=\"text-sm\"\n                    id={`token_${token.title.replace(/\\s/g, \"\")}_usd`}\n                  >\n                    {token.price}\n                  </td>\n                  <td>\n                    <Image src={ArrowRight} alt=\"arrow right\" />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <div className=\"px-5 sm:hidden\">\n            {tokens.map((token, index) => (\n              <div\n                key={`token_${index}`}\n                className=\"flex items-center justify-between h-16\"\n                onClick={handleNavigateToTokenDetails(token.currency)}\n              >\n                <div className=\"flex items-center text-[#0B0E13]\">\n                  <Image\n                    src={token.icon}\n                    alt=\"icon\"\n                    className=\"w-6 h-6 mr-[13px]\"\n                  />\n                  <div>\n                    <p className=\"text-sm font-bold leading-5\">{token.title}</p>\n                    <p className=\"text-[#9CA3AF] text-xs items-left flex leading-3\">\n                      {token.currency}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"text-sm leading-5\">\n                    {token.toPresentation(token.balance)} {token.currency}\n                  </div>\n                  <div className=\"text-xs leading-3 text-gray-400\">\n                    {token.price}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </ProfileContainer>\n      <ProfileAssetsNFT nfts={nfts} />\n    </ProfileTemplate>\n  )\n}\n\nexport default ProfileAssetsPage\n","import { useMemo } from \"react\"\n\nimport { IOption } from \"@nfid-frontend/ui\"\nimport { getWalletName } from \"@nfid/integration\"\n\nimport { useApplicationsMeta } from \"frontend/integration/identity-manager/queries\"\nimport { useAllPrincipals } from \"frontend/integration/internet-identity/queries\"\nimport { keepStaticOrder, sortAlphabetic } from \"frontend/ui/utils/sorting\"\n\nexport const useAccountOptions = () => {\n  const { principals } = useAllPrincipals()\n  const { applicationsMeta } = useApplicationsMeta()\n\n  const options = useMemo(() => {\n    if (!applicationsMeta || !principals) return []\n\n    const opt = principals\n      .map(({ account, principal }) => {\n        return {\n          label: getWalletName(\n            applicationsMeta,\n            account.domain,\n            account.accountId,\n          ),\n          value: principal.toString(),\n        } as IOption\n      })\n      .sort(sortAlphabetic(({ label }) => label ?? \"\"))\n\n    return keepStaticOrder<IOption>(\n      ({ label }) => label ?? \"\",\n      [\"NFID\", \"NNS\"],\n    )(opt || [])\n  }, [applicationsMeta, principals])\n\n  return {\n    options,\n  }\n}\n","import React from \"react\"\n\nimport { useAllToken } from \"frontend/features/fungable-token/use-all-token\"\nimport { AssetFilter } from \"frontend/ui/connnector/types\"\nimport ProfileAssetsPage from \"frontend/ui/pages/new-profile/assets\"\nimport { useNFIDNavigate } from \"frontend/ui/utils/use-nfid-navigate\"\n\nimport { ProfileConstants } from \"../routes\"\nimport { useAllNFTs } from \"./hooks\"\n\nconst ProfileAssets = () => {\n  const [assetFilter, setAssetFilter] = React.useState<AssetFilter[]>([])\n  const { navigate } = useNFIDNavigate()\n  const { nfts: nonFungibleTokens } = useAllNFTs(assetFilter)\n  const { token } = useAllToken(assetFilter)\n\n  console.debug(\"ProfileAssets\", { token })\n\n  return (\n    <ProfileAssetsPage\n      onIconClick={() =>\n        navigate(`${ProfileConstants.base}/${ProfileConstants.transactions}`)\n      }\n      tokens={token}\n      nfts={nonFungibleTokens}\n      assetFilter={assetFilter}\n      setAssetFilter={setAssetFilter}\n    />\n  )\n}\n\nexport default ProfileAssets\n","import clsx from \"clsx\"\n\nimport { Image } from \"@nfid-frontend/ui\"\n\ninterface ApplicationIconProps {\n  appName: string\n  icon?: string\n  className?: string\n}\n\nexport const ApplicationIcon: React.FC<ApplicationIconProps> = ({\n  appName,\n  icon,\n  className,\n}) => {\n  return (\n    <div\n      className={clsx(\n        \"bg-white rounded-full w-[40px] h-[40px] text-blue\",\n        \"flex items-center justify-center\",\n        \"text-xl font-medium\",\n        className,\n      )}\n    >\n      {icon ? (\n        <Image\n          className=\"rounded-full w-[26px] h-[26px] object-contain object-center\"\n          src={icon}\n          alt=\"app icon\"\n        />\n      ) : (\n        <div>{appName[0].toUpperCase()}</div>\n      )}\n    </div>\n  )\n}\n","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCopy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_26258_35847)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.0998 7.80078V7.80086L16.1004 15.6022C16.1004 15.6022 16.1004 15.6022 16.1004 15.6022C16.1004 15.8783 15.8765 16.1022 15.6004 16.1022L7.65098 16.1022C7.37483 16.1022 7.15098 15.8783 7.15098 15.6022V15.6021L7.15039 7.80078C7.15039 7.80077 7.15039 7.80075 7.15039 7.80073C7.15042 7.52461 7.37426 7.30078 7.65039 7.30078H15.5998C15.8759 7.30078 16.0998 7.52464 16.0998 7.80078Z\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.05078 11.2502H3.30078C2.90296 11.2502 2.52143 11.0922 2.24012 10.8109C1.95882 10.5296 1.80078 10.148 1.80078 9.75019V3.30078C1.80078 2.90296 1.95882 2.52143 2.24012 2.24012C2.52143 1.95882 2.90296 1.80078 3.30078 1.80078L9.75019 1.80078C10.148 1.80078 10.5296 1.95882 10.8109 2.24012C11.0922 2.52143 11.2502 2.90296 11.2502 3.30078V4.05078\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_26258_35847\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18,\n    height: 18,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.94e49d910f493b736e359de6b37bb776.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgTransfer(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.55571 1.2231L10.1113 1.2231M10.1113 1.2231L10.1113 6.77867M10.1113 1.2231L1.77792 9.55646\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.88886 11.2222L7.88886 16.7778M7.88886 16.7778L13.4444 16.7778M7.88886 16.7778L16.2222 8.44443\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTransfer);\nexport default __webpack_public_path__ + \"static/media/transfer.aa5aafda7bf79e8e9214195fa4a83b20.svg\";\nexport { ForwardRef as ReactComponent };","import { useActor } from \"@xstate/react\"\nimport clsx from \"clsx\"\nimport React, { useCallback, useContext } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { toast } from \"react-toastify\"\nimport { trimConcat } from \"src/ui/atoms/util/util\"\n\nimport { IconCmpDots, Image } from \"@nfid-frontend/ui\"\n\nimport { ProfileConstants } from \"frontend/apps/identity-manager/profile/routes\"\nimport { UserNonFungibleToken } from \"frontend/features/non-fungable-token/types\"\nimport { ProfileContext } from \"frontend/provider\"\nimport useClickOutside from \"frontend/ui/utils/use-click-outside\"\n\nimport copyIcon from \"./assets/copy.svg\"\nimport transferIcon from \"./assets/transfer.svg\"\n\nconst NFTPreview = (props: UserNonFungibleToken) => {\n  const globalServices = useContext(ProfileContext)\n  const [, send] = useActor(globalServices.transferService)\n  const [isTooltipOpen, setIsTooltipOpen] = React.useState(false)\n  const ref = useClickOutside(() => setIsTooltipOpen(false))\n\n  const copyToClipboard = React.useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      e.preventDefault()\n      toast.info(\"NFT URL copied to clipboard\", {\n        toastId: `copied_nft_${props.tokenId}`,\n      })\n      navigator.clipboard.writeText(props.clipboardText ?? \"\")\n    },\n    [props.clipboardText, props.tokenId],\n  )\n\n  const onTransferNFT = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      e.preventDefault()\n\n      send({ type: \"ASSIGN_SELECTED_NFT\", data: props })\n      send({ type: \"CHANGE_TOKEN_TYPE\", data: \"nft\" })\n      send({ type: \"CHANGE_DIRECTION\", data: \"send\" })\n\n      send(\"SHOW\")\n    },\n    [props, send],\n  )\n\n  return (\n    <div\n      className={clsx(\n        \"rounded-md w-full transition-all cursor-pointer overflow-visible p-[1px] relative z-10\",\n        \"bg-gray-50 hover:bg-white hover:shadow-[0_2px_15px_rgba(0,0,0,0.1)] nft\",\n      )}\n    >\n      <Link\n        to={`${ProfileConstants.base}/${ProfileConstants.assets}/${props.tokenId}`}\n        state={{ nft: props }}\n      >\n        <div\n          className={clsx(\n            \"flex items-center justify-center\",\n            \"absolute w-6 h-6 bg-white rounded-full right-2.5 top-[215px] md:top-[270px]\",\n          )}\n        >\n          <Image\n            src={props.blockchainLogo}\n            alt=\"logo\"\n            className={clsx(\n              \"w-2/3\",\n              props.blockchain !== \"Internet Computer\" && \"!w-auto h-2/3\",\n            )}\n          />\n        </div>\n        <Image\n          className={clsx(\n            \"rounded-[5px] w-full h-[245px] md:h-[300px] object-cover\",\n          )}\n          src={props.assetPreview}\n          alt={props.name}\n        />\n        <div className={clsx(`text-sm p-2.5 flex justify-between items-end`)}>\n          <div>\n            <div\n              id={trimConcat(\"nft_token_\", props.name)}\n              className={clsx(`font-bold`)}\n            >\n              {props.name}\n            </div>\n            <div\n              id={trimConcat(\"nft_collection_\", props.collection.name)}\n              className={clsx(`text-secondary truncate w-[190px] mt-1`)}\n            >\n              {props.collection.name}\n            </div>\n          </div>\n          <div className=\"relative w-6\" ref={ref}>\n            <IconCmpDots\n              className={clsx(\n                \"text-secondary cursor-pointer hover:text-black\",\n                \"rotate-90\",\n              )}\n              onClick={(e) => {\n                e.preventDefault()\n                setIsTooltipOpen(!isTooltipOpen)\n              }}\n            />\n            <div\n              className={clsx(\n                \"absolute top-6 right-0 w-[150px]\",\n                \"bg-white rounded-md shadow-md\",\n                \"text-sm\",\n                !isTooltipOpen && \"hidden\",\n              )}\n            >\n              <div\n                onClick={onTransferNFT}\n                className={clsx(\n                  \"pl-[10px] leading-10 hover:bg-gray-100 rounded-md\",\n                  \"flex items-center space-x-2\",\n                )}\n              >\n                <Image src={transferIcon} alt=\"\" />\n                <span>Transfer</span>\n              </div>\n              <div\n                onClick={copyToClipboard}\n                className={clsx(\n                  \"pl-[10px] leading-10 hover:bg-gray-100 rounded-md\",\n                  \"flex items-center space-x-2\",\n                )}\n              >\n                <Image src={copyIcon} alt=\"\" />\n                <span> Copy link</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Link>\n    </div>\n  )\n}\n\nexport default NFTPreview\n","export function trimConcat(y: string, x: string) {\n  return y + x.replace(/\\s|#/g, \"\")\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface IProfileContainer {\n  title?: string | React.ReactNode\n  subTitle?: string | React.ReactNode\n  children?: React.ReactNode\n  className?: string\n  showChildrenPadding?: boolean\n  id?: string\n}\n\nconst ProfileContainer: React.FC<IProfileContainer> = ({\n  title,\n  subTitle,\n  children,\n  className,\n  showChildrenPadding = true,\n  id,\n}) => {\n  return (\n    <div\n      id={id}\n      className={clsx(\n        \"block border border-gray-200 rounded-xl\",\n        \"py-4 sm:py-[26px]\",\n        className,\n      )}\n    >\n      <div className=\"px-5\">\n        {title && (\n          <div className=\"flex items-center justify-between mb-3 text-xl\">\n            {title}\n          </div>\n        )}\n        {subTitle && (\n          <div className=\"flex items-center justify-between mb-4 text-sm leading-5 text-secondary\">\n            {subTitle}\n          </div>\n        )}\n      </div>\n\n      <div className={clsx(showChildrenPadding && \"px-5 sm:px-[30px]\")}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileContainer\n","import { useRef, useCallback } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport useConstant from './useConstant';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nexport function isActorWithState(actorRef) {\n    return 'state' in actorRef;\n}\nfunction isDeferredActor(actorRef) {\n    return 'deferred' in actorRef;\n}\nfunction defaultGetSnapshot(actorRef) {\n    return 'getSnapshot' in actorRef\n        ? actorRef.getSnapshot()\n        : isActorWithState(actorRef)\n            ? actorRef.state\n            : undefined;\n}\nexport function useActor(actorRef, getSnapshot) {\n    if (getSnapshot === void 0) { getSnapshot = defaultGetSnapshot; }\n    var actorRefRef = useRef(actorRef);\n    var deferredEventsRef = useRef([]);\n    var subscribe = useCallback(function (handleStoreChange) {\n        var unsubscribe = actorRef.subscribe(handleStoreChange).unsubscribe;\n        return unsubscribe;\n    }, [actorRef]);\n    var boundGetSnapshot = useCallback(function () { return getSnapshot(actorRef); }, [\n        actorRef,\n        getSnapshot\n    ]);\n    var storeSnapshot = useSyncExternalStore(subscribe, boundGetSnapshot, boundGetSnapshot);\n    var send = useConstant(function () { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var event = args[0];\n        if (process.env.NODE_ENV !== 'production' && args.length > 1) {\n            console.warn(\"Unexpected payload: \".concat(JSON.stringify(args[1]), \". Only a single event object can be sent to actor send() functions.\"));\n        }\n        var currentActorRef = actorRefRef.current;\n        // If the previous actor is a deferred actor,\n        // queue the events so that they can be replayed\n        // on the non-deferred actor.\n        if (isDeferredActor(currentActorRef) && currentActorRef.deferred) {\n            deferredEventsRef.current.push(event);\n        }\n        else {\n            currentActorRef.send(event);\n        }\n    }; });\n    useIsomorphicLayoutEffect(function () {\n        actorRefRef.current = actorRef;\n        // Dequeue deferred events from the previous deferred actorRef\n        while (deferredEventsRef.current.length > 0) {\n            var deferredEvent = deferredEventsRef.current.shift();\n            actorRef.send(deferredEvent);\n        }\n    }, [actorRef]);\n    return [storeSnapshot, send];\n}\n"],"names":["ProfileAssetsHeader","accountsOptions","assetFilter","setAssetFilter","blockchainFilter","blockchainOptions","setBlockchainFilter","resetFilters","className","id","onReset","trigger","align","label","options","selectedValues","setSelectedValues","map","item","principal","values","tip","src","ActionIcon","alt","ProfileNFTNotPresent","nfts","title","clsx","imageClasses","isLoading","fullscreen","href","WithoutNFT","getWindowDimensions","innerWidth","width","innerHeight","height","window","ProfileNFTPresent","windowDimensions","setWindowDimensions","useState","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","visibleLength","React","to","ProfileConstants","length","slice","nft","key","tokenId","Math","random","ProfileAssetsNFT","onIconClick","tokens","principals","useAllPrincipals","applicationsMeta","useApplicationsMeta","useMemo","opt","account","getWalletName","domain","accountId","value","toString","sort","sortAlphabetic","keepStaticOrder","useAccountOptions","navigate","useNavigate","handleNavigateToTokenDetails","token","generatePath","console","debug","filteredTokens","filter","includes","blockchain","blockchains","pageTitle","icon","Icon","iconTooltip","showChildrenPadding","index","replace","onClick","currency","A","appName","toPresentation","balance","price","ArrowRight","useNFIDNavigate","nonFungibleTokens","useAllNFTs","useAllToken","ApplicationIcon","toUpperCase","props","globalServices","useContext","ProfileContext","send","useActor","transferService","isTooltipOpen","setIsTooltipOpen","ref","useClickOutside","copyToClipboard","e","preventDefault","toast","toastId","navigator","clipboard","writeText","clipboardText","onTransferNFT","useCallback","type","data","state","blockchainLogo","assetPreview","name","trimConcat","collection","transferIcon","copyIcon","y","x","subTitle","children","isDeferredActor","actorRef","defaultGetSnapshot","getSnapshot","isActorWithState","undefined","actorRefRef","useRef","deferredEventsRef","subscribe","handleStoreChange","unsubscribe","boundGetSnapshot","storeSnapshot","useSyncExternalStore","args","_i","arguments","event","currentActorRef","current","deferred","push","deferredEvent","shift"],"sourceRoot":""}