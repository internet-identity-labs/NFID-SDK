{"version":3,"file":"static/js/92.63055534.chunk.js","mappings":"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","sources":["integration/lambda/symmetric/index.ts","ui/molecules/list/icons/chevron.tsx","ui/molecules/list/list-item.tsx","ui/pages/new-profile/credentials/index.tsx","apps/identity-manager/profile/credentials.tsx","integration/lambda/util/util.ts","ui/atoms/icons/mobile.tsx","ui/templates/profile-container/Container.tsx"],"sourcesContent":["import { Cbor, QueryFields } from \"@dfinity/agent\"\nimport { IDL } from \"@dfinity/candid\"\nimport { toHexString } from \"@dfinity/candid/lib/cjs/utils/buffer\"\nimport { DelegationIdentity } from \"@dfinity/identity\"\nimport { createDecipheriv } from \"browser-crypto\"\nimport { Buffer } from \"buffer\"\n\nimport { ic } from \"@nfid/integration\"\n\nimport { getTransformedRequest } from \"frontend/integration/lambda/util/util\"\n\nexport async function decryptStringForIdentity(\n  encrypted: string,\n  identity: DelegationIdentity,\n) {\n  let key = await symmetric(identity)\n  return decrypt(encrypted, key)\n}\n\nexport async function symmetric(identity: DelegationIdentity) {\n  try {\n    return await getSymmetricKey(identity)\n  } catch (e) {\n    throw new Error(\"There was an issue getting symmetric key.\" + e)\n  }\n}\n\nexport async function getSymmetricKey(\n  identity: DelegationIdentity,\n): Promise<string> {\n  const url = ic.isLocal ? \"/symmetric\" : AWS_SYMMETRIC\n  const fields: QueryFields = {\n    methodName: \"validate_signature\",\n    arg: IDL.encode([IDL.Opt(IDL.Text)], [[]]),\n  }\n  const request: any = await getTransformedRequest(\n    identity,\n    IDENTITY_MANAGER_CANISTER_ID,\n    fields,\n  )\n\n  let body = Cbor.encode(request.body)\n  let str = toHexString(body)\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ message: str }),\n  })\n\n  if (!response.ok) throw new Error(await response.text())\n\n  const data = await response.json()\n\n  return data.key\n}\n\nfunction decrypt(encrypted: string, key: string) {\n  let secretBuffer = Buffer.from(key, \"hex\")\n  const cipher = createDecipheriv(\"aes-256-ecb\", secretBuffer, \"\")\n  let decryptedString = cipher.update(encrypted, \"hex\", \"utf8\")\n  decryptedString += cipher.final(\"utf8\")\n  return decryptedString\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface ListItemChevronProps extends React.HTMLAttributes<HTMLDivElement> {\n  onClick?: () => void\n}\n\nexport const ListItemChevron: React.FC<ListItemChevronProps> = ({\n  className,\n  onClick,\n}) => {\n  return (\n    <div className={clsx(\"text-black p-1\", className)} onClick={onClick}>\n      <svg\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M8 1.34567L14.6543 7.99999L8 14.6543\"\n          stroke=\"currentColor\"\n          strokeOpacity=\"0.4\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </svg>\n    </div>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\nimport { ListItemChevron } from \"./icons/chevron\"\n\ninterface Props {\n  className?: string\n  onClick?: React.MouseEventHandler<HTMLDivElement>\n  title: JSX.Element | string\n  subtitle?: string | React.ReactNode\n  icon?: React.ReactNode\n  action?: React.ReactNode\n  disabled?: boolean\n  id?: string\n}\n\nexport const ListItem: React.FC<Props> = ({\n  className,\n  title,\n  subtitle,\n  icon,\n  action,\n  onClick,\n  disabled,\n  id,\n}) => {\n  return (\n    <div\n      onClick={onClick}\n      className={clsx(\n        \"relative flex flex-row hover:bg-gray-50 hover:rounded transition-colors duration-100 -mx-3\",\n        \"h-[60px] border-b border-gray-200\",\n        className,\n        disabled && \"pointer-events-none\",\n      )}\n    >\n      <div className=\"flex flex-wrap items-center flex-1 px-3 py-0 cursor-pointer select-none peer\">\n        {icon && (\n          <div className=\"mr-4\">\n            <div className=\"relative flex items-center justify-center bg-white rounded-full w-9 h-9\">\n              {icon}\n            </div>\n          </div>\n        )}\n\n        <div className=\"relative flex items-center flex-1\">\n          <div className=\"flex-1 flex-shrink\">\n            <div\n              id={id}\n              className={clsx(disabled ? \"text-secondary\" : \"text-gray-700\")}\n            >\n              {title}\n            </div>\n            {subtitle && (\n              <div className=\"my-1 text-sm text-secondary\">{subtitle}</div>\n            )}\n          </div>\n\n          <div\n            className={clsx(\n              \"pl-1 md:pl-4 flex items-center\",\n              disabled && \"hidden\",\n            )}\n          >\n            {action ? (\n              action\n            ) : (\n              <button className=\"text-right\">\n                <ListItemChevron />\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\n\nimport { ProfileConstants } from \"frontend/apps/identity-manager/profile/routes\"\nimport { MobileIcon } from \"frontend/ui/atoms/icons/mobile\"\nimport { ListItem } from \"frontend/ui/molecules/list/list-item\"\nimport ProfileContainer from \"frontend/ui/templates/profile-container/Container\"\nimport ProfileTemplate from \"frontend/ui/templates/profile-template/Template\"\nimport { useNFIDNavigate } from \"frontend/ui/utils/use-nfid-navigate\"\n\ninterface IProfileCredentialsPage extends React.HTMLAttributes<HTMLDivElement> {\n  phone?: string\n  email?: string\n  isLoading?: boolean\n}\n\nconst ProfileCredentialsPage: React.FC<IProfileCredentialsPage> = ({\n  phone,\n  email,\n  isLoading = false,\n}) => {\n  const { navigate } = useNFIDNavigate()\n\n  return (\n    <ProfileTemplate pageTitle=\"Credentials\" isLoading={isLoading}>\n      <ProfileContainer\n        title=\"Issued by Internet Identity Labs\"\n        subTitle=\"Shareable verified data\"\n        className=\"relative\"\n      >\n        {isLoading ? (\n          <ListItem\n            disabled={true}\n            icon={<MobileIcon />}\n            title={\"Loading...\"}\n          />\n        ) : (\n          <ListItem\n            disabled={!!phone?.length}\n            icon={<MobileIcon />}\n            title={phone?.length ? phone : \"Connect mobile phone number\"}\n            onClick={() => navigate(`${ProfileConstants.addPhoneNumber}`)}\n            id={\n              phone?.length\n                ? \"phone-number-value\"\n                : \"connect-mobile-phone-number\"\n            }\n          />\n        )}\n      </ProfileContainer>\n    </ProfileTemplate>\n  )\n}\n\nexport default ProfileCredentialsPage\n","import { useProfile } from \"src/integration/identity-manager/queries\"\nimport useSWR from \"swr\"\n\nimport { authState } from \"@nfid/integration\"\n\nimport { decryptStringForIdentity } from \"frontend/integration/lambda/symmetric\"\nimport ProfileCredentialsPage from \"frontend/ui/pages/new-profile/credentials\"\n\nconst ProfileCredentials = () => {\n  const { profile } = useProfile()\n  const { delegationIdentity } = authState.get()\n\n  const {\n    data: decryptedPhone,\n    error,\n    isValidating,\n  } = useSWR(\n    profile?.phoneNumber && delegationIdentity\n      ? [\"decryptedPhone\", profile.phoneNumber, delegationIdentity]\n      : null,\n\n    async ([, phoneNumber, delegationIdentity]) => {\n      const result = await decryptStringForIdentity(\n        phoneNumber,\n        delegationIdentity,\n      )\n      return result\n    },\n  )\n\n  return (\n    <ProfileCredentialsPage\n      phone={decryptedPhone || error}\n      isLoading={isValidating}\n    />\n  )\n}\n\nexport default ProfileCredentials\n","import { Endpoint, Expiry, QueryFields, ReadRequest } from \"@dfinity/agent\"\nimport { DelegationIdentity } from \"@dfinity/identity\"\nimport { Principal } from \"@dfinity/principal\"\n\nconst DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS = 5 * 60 * 1000\n\nexport async function getTransformedRequest(\n  identity: DelegationIdentity,\n  canisterId: string,\n  fields: QueryFields,\n) {\n  const canister =\n    typeof canisterId === \"string\" ? Principal.fromText(canisterId) : canisterId\n  const sender = identity.getPrincipal()\n  const request = {\n    request_type: \"query\",\n    canister_id: canister,\n    method_name: fields.methodName,\n    arg: fields.arg,\n    sender,\n    ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),\n  } as ReadRequest\n  return await identity.transformRequest({\n    request: {\n      method: \"POST\",\n      headers: Object.assign({ \"Content-Type\": \"application/cbor\" }),\n    },\n    endpoint: \"query\" as Endpoint.Query,\n    body: request,\n  })\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface MobileIconProps extends React.SVGProps<SVGSVGElement> {}\n\nexport const MobileIcon: React.FC<MobileIconProps> = ({\n  className,\n  onClick,\n}) => {\n  return (\n    <svg\n      viewBox=\"0 0 34 34\"\n      fill=\"none\"\n      className={clsx(\"w-6 h-6\", className)}\n      onClick={onClick}\n    >\n      <path\n        d=\"M8.49902 7.08333C8.49902 5.51853 9.76755 4.25 11.3324 4.25H22.6657C24.2305 4.25 25.499 5.51853 25.499 7.08333V26.9167C25.499 28.4815 24.2305 29.75 22.6657 29.75H11.3324C9.76755 29.75 8.49902 28.4815 8.49902 26.9167V7.08333ZM22.6657 7.08333H11.3324V26.9167H22.6657V7.08333Z\"\n        fill=\"#0E62FF\"\n      />\n      <path\n        d=\"M14.167 7.08325H19.8337V7.08325C19.8337 7.86566 19.1994 8.49992 18.417 8.49992H15.5837C14.8013 8.49992 14.167 7.86566 14.167 7.08325V7.08325Z\"\n        fill=\"#0E62FF\"\n      />\n    </svg>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface IProfileContainer {\n  title?: string | React.ReactNode\n  subTitle?: string | React.ReactNode\n  children?: React.ReactNode\n  className?: string\n  showChildrenPadding?: boolean\n  id?: string\n}\n\nconst ProfileContainer: React.FC<IProfileContainer> = ({\n  title,\n  subTitle,\n  children,\n  className,\n  showChildrenPadding = true,\n  id,\n}) => {\n  return (\n    <div\n      id={id}\n      className={clsx(\n        \"block border border-gray-200 rounded-xl\",\n        \"py-4 sm:py-[26px]\",\n        className,\n      )}\n    >\n      <div className=\"px-5\">\n        {title && (\n          <div className=\"flex items-center justify-between mb-3 text-xl\">\n            {title}\n          </div>\n        )}\n        {subTitle && (\n          <div className=\"flex items-center justify-between mb-4 text-sm leading-5 text-secondary\">\n            {subTitle}\n          </div>\n        )}\n      </div>\n\n      <div className={clsx(showChildrenPadding && \"px-5 sm:px-[30px]\")}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileContainer\n"],"names":["async","decryptStringForIdentity","encrypted","identity","key","url","ic","AWS_SYMMETRIC","fields","methodName","arg","IDL","request","getTransformedRequest","IDENTITY_MANAGER_CANISTER_ID","body","Cbor","str","toHexString","response","fetch","method","headers","JSON","stringify","message","ok","Error","text","json","getSymmetricKey","e","symmetric","secretBuffer","Buffer","cipher","createDecipheriv","decryptedString","update","final","decrypt","ListItemChevron","className","onClick","clsx","width","height","viewBox","fill","xmlns","d","stroke","strokeOpacity","strokeLinecap","strokeLinejoin","ListItem","title","subtitle","icon","action","disabled","id","phone","email","isLoading","navigate","useNFIDNavigate","pageTitle","subTitle","length","ProfileConstants","profile","useProfile","delegationIdentity","authState","data","decryptedPhone","error","isValidating","useSWR","phoneNumber","canisterId","canister","Principal","sender","getPrincipal","request_type","canister_id","method_name","ingress_expiry","Expiry","transformRequest","Object","assign","endpoint","MobileIcon","children","showChildrenPadding"],"sourceRoot":""}