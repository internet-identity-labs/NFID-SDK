{"version":3,"file":"static/js/539.2f9e6a40.chunk.js","mappings":"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","sources":["assets/dfinity.svg","state/machines/authentication/remote-sender.ts","integration/identity/services.ts","apps/inter-device/services.ts","coordination/remote-sender.tsx","features/stats/services.ts","integration/lambda/auth-stats/index.ts","integration/windows/index.ts","integration/windows/services.ts","integration/internet-identity/validateDerivationOrigin.ts","ui/utils/index.ts"],"sourcesContent":["var _path, _path2, _path3, _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgDfinity(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    viewBox: \"-1 -1 107.42470599999999 54.6597\",\n    width: 103.42,\n    height: 50.66,\n    className: \"inline w-8 h-8 ml-1\",\n    \"data-v-45c16e28\": \"\",\n    \"data-v-5e337368\": \"\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", {\n    \"data-v-45c16e28\": \"\"\n  }, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.62 9.14C56.48 11.99 53.72 15.07 51.71 17.53C51.71 17.53 54.95 21.18 58.49 25.09C60.41 22.72 63.17 19.51 66.36 16.61C72.26 11.2 76.1 10.11 78.33 10.11C86.64 10.11 93.37 16.92 93.37 25.35C93.37 33.7 86.64 40.51 78.33 40.6C77.94 40.6 77.46 40.55 76.89 40.42C79.29 41.52 81.92 42.31 84.37 42.31C99.58 42.31 102.55 32.03 102.72 31.28C103.16 29.39 103.42 27.42 103.42 25.4C103.38 11.38 92.15 0 78.33 0C72.56 0 66.27 3.08 59.62 9.14Z\",\n    id: \"a2oTCciHwU\",\n    \"data-v-45c16e28\": \"\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"gradientc2rIvyDhN\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 65.17,\n    y1: 3.67,\n    x2: 99.9,\n    y2: 39.44,\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"21%\",\n    \"data-v-45c16e28\": \"\",\n    style: {\n      stopColor: \"rgb(241, 90, 36)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"68.41000000000001%\",\n    \"data-v-45c16e28\": \"\",\n    style: {\n      stopColor: \"rgb(251, 176, 59)\",\n      stopOpacity: 1\n    }\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.8 41.52C46.95 38.66 49.7 35.59 51.71 33.13C51.71 33.13 48.48 29.48 44.94 25.57C43.01 27.94 40.26 31.15 37.07 34.05C31.17 39.41 27.28 40.55 25.09 40.55C16.79 40.55 10.05 33.74 10.05 25.31C10.05 16.96 16.79 10.15 25.09 10.06C25.48 10.06 25.97 10.11 26.53 10.24C24.13 9.14 21.51 8.35 19.06 8.35C3.85 8.35 0.87 18.63 0.7 19.38C0.26 21.27 0 23.24 0 25.26C0 39.28 11.23 50.66 25.09 50.66C30.86 50.66 37.16 47.58 43.8 41.52Z\",\n    id: \"aFWcwFIax\",\n    \"data-v-45c16e28\": \"\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"gradientaIMror5Zz\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 38.22,\n    y1: 46.97,\n    x2: 3.5,\n    y2: 11.2,\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"21%\",\n    \"data-v-45c16e28\": \"\",\n    style: {\n      stopColor: \"rgb(237, 30, 121)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"89.29%\",\n    \"data-v-45c16e28\": \"\",\n    style: {\n      stopColor: \"rgb(82, 39, 133)\",\n      stopOpacity: 1\n    }\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.1 8.57C5.24 8.23 1.16 18.1 0.81 19.37C3.47 8.3 13.37 0.04 25.14 0C34.73 0 44.43 9.21 51.59 17.53C51.6 17.51 51.61 17.5 51.62 17.49C51.62 17.49 54.86 21.13 58.4 25.04C58.4 25.04 62.42 29.7 66.71 33.79C68.37 35.37 76.45 41.74 84.23 41.96C98.49 42.36 102.42 31.94 102.64 31.15C100.02 42.27 90.09 50.57 78.29 50.62C68.69 50.62 58.99 41.4 51.8 33.08C51.78 33.1 51.77 33.11 51.76 33.13C51.76 33.13 48.52 29.48 44.98 25.57C44.98 25.57 40.96 20.91 36.68 16.83C35.01 15.25 26.88 8.79 19.1 8.57ZM0.81 19.37C0.8 19.4 0.79 19.43 0.79 19.46C0.79 19.44 0.8 19.41 0.81 19.37Z\",\n    id: \"e1RZG6bOc\",\n    \"data-v-45c16e28\": \"\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#a2oTCciHwU\",\n    opacity: 1,\n    fill: \"url(#gradientc2rIvyDhN)\",\n    \"data-v-45c16e28\": \"\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#a2oTCciHwU\",\n    opacity: 1,\n    fillOpacity: 0,\n    stroke: \"#000000\",\n    strokeWidth: 1,\n    strokeOpacity: 0,\n    \"data-v-45c16e28\": \"\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#aFWcwFIax\",\n    opacity: 1,\n    fill: \"url(#gradientaIMror5Zz)\",\n    \"data-v-45c16e28\": \"\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#aFWcwFIax\",\n    opacity: 1,\n    fillOpacity: 0,\n    stroke: \"#000000\",\n    strokeWidth: 1,\n    strokeOpacity: 0,\n    \"data-v-45c16e28\": \"\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#e1RZG6bOc\",\n    opacity: 1,\n    fill: \"#29abe2\",\n    fillOpacity: 1,\n    \"data-v-45c16e28\": \"\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#e1RZG6bOc\",\n    opacity: 1,\n    fillOpacity: 0,\n    stroke: \"#000000\",\n    strokeWidth: 1,\n    strokeOpacity: 0,\n    \"data-v-45c16e28\": \"\"\n  }))))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgDfinity);\nexport default __webpack_public_path__ + \"static/media/dfinity.583ab84ba16070ca501453d1e291dff4.svg\";\nexport { ForwardRef as ReactComponent };","import { ActorRefFrom, assign, createMachine } from \"xstate\"\n\nimport { getDataFromPath } from \"frontend/apps/inter-device/services\"\nimport { postRemoteDelegationService } from \"frontend/integration/identity/services\"\nimport { getAppMeta } from \"frontend/integration/windows/services\"\nimport { AuthSession } from \"frontend/state/authentication\"\nimport {\n  AuthorizationRequest,\n  AuthorizingAppMeta,\n  ThirdPartyAuthSession,\n} from \"frontend/state/authorization\"\n\nimport AuthenticationMachine from \"./authentication\"\n\ninterface Context {\n  pubsubChannel?: string\n  authSession?: AuthSession\n  appMeta?: AuthorizingAppMeta\n  authRequest?: AuthorizationRequest\n}\n\ntype Events =\n  | { type: \"done.invoke.known-device\"; data: AuthSession }\n  | {\n      type: \"done.invoke.getDataFromPath\"\n      data: { authRequest: AuthorizationRequest; pubsubChannel: string }\n    }\n  | { type: \"done.invoke.getAppMeta\"; data: AuthorizingAppMeta }\n  | { type: \"done.invoke.authenticate\"; data: AuthSession }\n  | { type: \"done.invoke.authorize\"; data: ThirdPartyAuthSession }\n  | { type: \"done.invoke.postRemoteDelegationService\"; data: void }\n\nconst RemoteSenderMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QEMCuAXAFgWgE5gFsB7dMbWMAOwjFwDoBldZXdOgcTHQEENMAlMAEdUcNgDEuAY0wBiCEUpg6AS0oA3IgGtlMdABFkzcbiIEACkcyJQAByKwV6FYpsgAHogAsATgBMdABsAIzBPj4A7MGBfoEArKGBADQgAJ6IsQAMdD6ZEXGBmV5hfl5xPgC+FSloWHiEJGQU1LSMzKwcXNy2tgCyXMh0kugy8orKapo6dHrdfQNu9o7Orkge3qV0CX4+ABzRexEAzH5xKekIXrs+dLuZmXc+wZlHEfuBgVU1fPXEpORUGj0JgsdBjJR0WDMUh0Wo4fB-JqA1og1iLBxOFyUNyeBC5G5+WKBJ5vOJ+XYxc6II5lW6BXZXI67a4RLwRQIRL4gOG-RoAlr0XhYKjOKRGLG9ZAyNRgcETDTaZRwkUqMWkdHLLE4xDBLx+YJ0I5HQpeF4RcJPKkIGlxOm7OL3D6BPVRTnVbk-BF85pAuhCzBEXAqABe4sUkulSjlqgV0zhgZDYA1mNWoFxeoCupOET8eUKudOVtyAVzRVyRz2gQrfiq7soRBo8DWPK9-x9KPabE4PD4ghEYiG0msayWKexa1xzz8VtKuxyuryrNNfhOK65LYabeRwM7nR7WD7oihdH042TK3HacQrromSepWCxuCcS8TJnrMN1yOcQdwXtr9iddPU3JEBTaUE939Q8xHPLUJ2vXYrWCfIchdY0mReLxnRrd0N0RflfVRLsuh6fpmEHEZhzsDEL21BApytNkIluPITntfVX3iIC6lbUDCN3bs5jIwZTyUWDU3WBAQi8VCiUyZ0Cn1CIrQdI46HJU4cxfKtmTibj4RAgiOwgwTSIWEcaLgq8EDeRiiluY1MlzXYV2QmJ9N5LcwKI8TL0kl8kKcnIogrOITiKQpPlw4D8PbQU+BVNUJSlTAZV8uipwCbTwleQonjiZS0mpXVPx8I4It0op8g83ijPirAE1DC8I1SsSLM1CTcQKq1dgibIc0fQoTiee4vBqwy4roABRah0vghByn60oXmucJcxOHq4jnHMngUo0q2fcbYu3ObrPKq1ytve5MhfLICquWsKiAA */\n  createMachine(\n    {\n      tsTypes: {} as import(\"./remote-sender.typegen\").Typegen0,\n      schema: { events: {} as Events, context: {} as Context },\n      id: \"auth-remote-sender\",\n      initial: \"Start\",\n      states: {\n        Start: {\n          type: \"parallel\",\n          states: {\n            GetAuthRequest: {\n              initial: \"Fetch\",\n              states: {\n                Fetch: {\n                  invoke: {\n                    src: \"getDataFromPath\",\n                    id: \"getDataFromPath\",\n                    onDone: [\n                      {\n                        actions: \"assignAuthRequest\",\n                        target: \"Done\",\n                      },\n                    ],\n                  },\n                },\n                Done: {\n                  type: \"final\",\n                },\n              },\n            },\n            GetAppMeta: {\n              initial: \"Fetch\",\n              states: {\n                Fetch: {\n                  invoke: {\n                    src: \"getAppMeta\",\n                    id: \"getAppMeta\",\n                    onDone: [\n                      {\n                        actions: \"assignAppMeta\",\n                        target: \"Done\",\n                      },\n                    ],\n                  },\n                },\n                Done: {\n                  type: \"final\",\n                },\n              },\n            },\n          },\n          onDone: {\n            target: \"AuthenticationMachine\",\n          },\n        },\n        AuthenticationMachine: {\n          invoke: {\n            src: \"AuthenticationMachine\",\n            id: \"authenticate\",\n            onDone: { target: \"PostDelegation\", actions: \"assignAuthSession\" },\n            data: (context) => ({\n              appMeta: context.appMeta,\n              authRequest: context.authRequest,\n            }),\n          },\n        },\n        PostDelegation: {\n          invoke: {\n            src: \"postRemoteDelegationService\",\n            id: \"postRemoteDelegationService\",\n            onDone: \"End\",\n            data: (context) => {\n              return {\n                appMeta: context.appMeta,\n                authRequest: context.authRequest,\n                auhtSession: context.authSession,\n              }\n            },\n          },\n        },\n        End: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      guards: {},\n      services: {\n        AuthenticationMachine,\n        postRemoteDelegationService,\n        getAppMeta,\n        getDataFromPath,\n      },\n      actions: {\n        assignAppMeta: assign((context, event) => ({\n          appMeta: event.data,\n        })),\n        assignAuthRequest: assign((context, event) => ({\n          authRequest: event.data.authRequest,\n          pubsubChannel: event.data.pubsubChannel,\n        })),\n        assignAuthSession: assign((context, event) => {\n          console.debug(\"RemoteSenderMachine assignAuthSession\", {\n            authSession: event.data,\n          })\n          return {\n            authSession: event.data,\n          }\n        }),\n      },\n    },\n  )\n\nexport type RemoteSenderActor = ActorRefFrom<typeof RemoteSenderMachine>\nexport type RemoteSenderMachineType = typeof RemoteSenderMachine\n\nexport default RemoteSenderMachine\n","import { authState } from \"@nfid/integration\"\n\nimport { AuthSession } from \"frontend/state/authentication\"\n\nimport {\n  buildRemoteLoginRegisterMessage,\n  createTopic,\n  postMessages,\n} from \"../pubsub\"\n\nexport async function postRemoteDelegationService(\n  context: { pubsubChannel?: string; authSession?: AuthSession },\n  event: { data: AuthSession },\n): Promise<void> {\n  console.debug(\"postRemoteDelegationService\", { context, event })\n  const { chain, sessionKey } = authState.get()\n  if (!chain)\n    throw new Error(`postRemoteDelegationService authState missing chain`)\n  if (!sessionKey)\n    throw new Error(`postRemoteDelegationService authState missing sessionKey`)\n\n  if (!context.pubsubChannel)\n    throw new Error(`postRemoteDelegationService context.pubsubChannel missing`)\n\n  if (!context.authSession?.anchor)\n    throw new Error(\n      \"postRemoteDelegationService context.authSession.anchor missing\",\n    )\n\n  const message = buildRemoteLoginRegisterMessage(\n    BigInt(context.authSession?.anchor),\n    chain,\n    sessionKey,\n  )\n\n  // FIXME: create topic earlier.\n  await createTopic(context.pubsubChannel)\n  const response = await postMessages(context.pubsubChannel, [message])\n  console.debug(`postRemoteDelegationService postMessage`, { response })\n  return undefined\n}\n","import { fromHexString } from \"@dfinity/candid/lib/cjs/utils/buffer\"\n\nimport { AuthorizationRequest } from \"frontend/state/authorization\"\n\n/**\n * parses remote idp pathname into AuthRequest\n * https://domain.com/ridp/?secret=0047b1e4-9930-4bb3-bb48-ce61a4aefc92&scope=&derivationOrigin=&maxTimeToLive=606458947591554&applicationName=NFID-Demo&applicationLogo=https%253A%252F%252Flogo.clearbit.com%252Fclearbit.com\n */\nexport function getDataFromPath(): Promise<{\n  authRequest: AuthorizationRequest\n  pubsubChannel: string\n}> {\n  const params = Object.fromEntries(\n    new URLSearchParams(window.location.search).entries(),\n  )\n  const { secret, maxTimeToLive, aliasDomain, derivationOrigin } = params\n\n  console.debug(getDataFromPath.name, { ...params })\n\n  const sessionPublicKey = new Uint8Array(fromHexString(secret))\n  return Promise.resolve({\n    authRequest: {\n      hostname: aliasDomain,\n      maxTimeToLive: BigInt(maxTimeToLive),\n      sessionPublicKey,\n      derivationOrigin,\n    },\n    pubsubChannel: secret,\n  })\n}\n","import { useMachine } from \"@xstate/react\"\nimport React from \"react\"\nimport { Navigate } from \"react-router-dom\"\n\nimport { useAuthentication } from \"frontend/apps/authentication/use-authentication\"\nimport { AuthenticationActor } from \"frontend/state/machines/authentication/authentication\"\nimport RemoteSenderMachine, {\n  RemoteSenderMachineType,\n} from \"frontend/state/machines/authentication/remote-sender\"\nimport { BlurredLoader } from \"frontend/ui/molecules/blurred-loader\"\n\nimport { AuthenticationCoordinator } from \"./authentication\"\n\ninterface Props {\n  machine?: RemoteSenderMachineType\n  successPath?: string\n}\n\nexport default function RemoteIDPCoordinator({ machine }: Props) {\n  const [state] = useMachine(machine || RemoteSenderMachine)\n  const { isAuthenticated } = useAuthentication()\n  React.useEffect(() => {\n    console.debug(\"RemoteIDPCoordinator\", {\n      state: state.value,\n      context: state.context,\n    })\n  }, [state.value, state.context])\n\n  switch (true) {\n    case state.matches(\"Start\"):\n      return <BlurredLoader isLoading />\n    case state.matches(\"AuthenticationMachine\"):\n      return (\n        <AuthenticationCoordinator\n          actor={state.children.authenticate as AuthenticationActor}\n        />\n      )\n    // NOTE: I dislike having routing logic in a coordinator\n    case state.matches(\"End\") && isAuthenticated:\n      return <Navigate to=\"/profile/security\" />\n    default:\n      return <BlurredLoader isLoading />\n  }\n}\n","import { principalToAddress } from \"ictool\"\n\nimport { checkIsIframe } from \"@nfid-frontend/utils\"\n\nimport { fetchPrincipal } from \"frontend/integration/internet-identity\"\nimport { storeSignIn } from \"frontend/integration/lambda/auth-stats\"\n\ninterface LogAuthorizeApplicationArgs {\n  scope: string\n  anchor: number\n  applicationName?: string\n  chain?: string\n}\n\n/**\n * Store user to analytics database\n * @param scope - user id + domain used for the delegation\n * @param anchor - user number in internet identity\n * @param applicationName - The name of the application requesting authorization\n * @param chain - The chain the user is signing in to\n */\nexport const logAuthorizeApplication = async ({\n  scope,\n  anchor,\n  applicationName: application = \"Undefined application\",\n  chain = \"Internet Computer\",\n}: LogAuthorizeApplicationArgs) => {\n  const principal = await fetchPrincipal(anchor, scope)\n  const principalId = principal.toString()\n  const billable = checkIsIframe()\n  const blockchainAddress = principalToAddress(principal)\n\n  storeSignIn({\n    application,\n    billable,\n    blockchainAddress,\n    chain,\n    principal: principalId,\n  })\n}\n","import { ic } from \"@nfid/integration\"\n\nexport async function storeSignIn(event: {\n  principal: string\n  blockchainAddress: string\n  chain: string\n  application: string\n  billable: boolean\n}) {\n  const url = ic.isLocal ? \"/auth\" : AWS_AUTH_STATS\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(event),\n  })\n\n  if (!response.ok) throw new Error(await response.text())\n}\n","import { SignedDelegation } from \"@nfid/integration\"\n\nimport { AuthorizingAppMeta } from \"frontend/state/authorization\"\n\nimport { BuiltDelegate } from \"../internet-identity/build-delegate\"\nimport { hasOwnProperty } from \"../internet-identity/utils\"\n\n/**\n * Identity provider flow proceeds as follows.\n * Client: A 3rd party app connecting an NFID identity.\n * Provider: The NFID identity provider frontend.\n * 1. Client -> Provider: Open\n * 2. Provider -> Client: Ready\n * 3. Client -> Provider: Request\n * 4. Provider -> Client: Response\n */\n\n/** Events we post from the provider */\ntype IdentityProviderReadyEvent = { kind: \"authorize-ready\" }\ntype IdentityProviderAuthResponseEvent = {\n  kind: \"authorize-client-success\"\n  delegations: BuiltDelegate[]\n  userPublicKey: Uint8Array\n}\ntype IdentityProviderEvents =\n  | IdentityProviderReadyEvent\n  | IdentityProviderAuthResponseEvent\n\n/** Events we receive from the client */\nexport type IdentityClientAuthEvent = {\n  kind: \"authorize-client\"\n  maxTimeToLive: bigint\n  sessionPublicKey: Uint8Array\n  derivationOrigin?: string\n}\n\n/** Third party auth delegation format expected by @dfinity/auth-client */\nexport interface DfinityAuthClientDelegate {\n  delegation: {\n    pubkey: Uint8Array\n    expiration: bigint\n    targets: undefined\n  }\n  signature: Uint8Array\n}\n\nfunction opener() {\n  const opener = window.opener || window.parent\n  if (!opener) throw new Error(\"Could not identify window opener.\")\n  return opener as Window\n}\n\nexport function postMessageToClient<T extends IdentityProviderEvents>(\n  event: T,\n  hostname: string = \"*\",\n) {\n  const origin = opener()\n  console.debug(\"postMessageToClient\", { event, hostname })\n  origin.postMessage(event, hostname)\n}\n\nexport function awaitClientMessage<T>(\n  isExpectedMessage: (message: MessageEvent<T>) => message is MessageEvent<T>,\n) {\n  return new Promise<MessageEvent<T>>((res) => {\n    window.addEventListener(\"message\", (message) => {\n      if (isExpectedMessage(message)) {\n        return res(message)\n      }\n      console.warn(\n        `awaitClientMessage: Unexpected message: ${JSON.stringify(message)}`,\n      )\n    })\n  })\n}\n\n/**\n * Prepare third party auth delegation for transmission via window message channel.\n */\nexport const prepareClientDelegate = (\n  receivedDelegation: SignedDelegation,\n): DfinityAuthClientDelegate => ({\n  delegation: {\n    pubkey: Uint8Array.from(receivedDelegation.delegation.pubkey),\n    expiration: receivedDelegation.delegation.expiration,\n    targets: undefined,\n  },\n  signature: Uint8Array.from(receivedDelegation.signature),\n})\n\n/**\n * Retrieve application metadata provided in the query params\n * @returns application meta data (logo and name)\n */\nexport function getAppMetaFromQuery(): AuthorizingAppMeta {\n  const params = new URLSearchParams(window.location.search)\n  return {\n    name: params.get(\"applicationName\") || undefined,\n    logo: params.get(\"applicationLogo\") || undefined,\n  }\n}\n\nexport const isIdentityClientAuthEvent = (\n  event: unknown,\n): event is MessageEvent<IdentityClientAuthEvent> => {\n  const msg = (event as any).data as unknown\n\n  console.debug(\"isIdentityClientAuthEvent\", { msg })\n\n  if (typeof msg !== \"object\") {\n    return false\n  }\n\n  if (msg === null) {\n    return false\n  }\n\n  // Some extra conversions to take typescript by the hand\n  // eslint-disable-next-line\n  const tmp: {} = msg\n  const obj: Record<string, unknown> = tmp\n\n  if (!hasOwnProperty(obj, \"kind\") || obj.kind !== \"authorize-client\") {\n    return false\n  }\n\n  if (\n    !hasOwnProperty(obj, \"sessionPublicKey\") ||\n    !(obj.sessionPublicKey instanceof Uint8Array)\n  ) {\n    return false\n  }\n\n  const maxTimeToLive = obj.maxTimeToLive\n  if (\n    typeof maxTimeToLive !== \"undefined\" &&\n    typeof maxTimeToLive !== \"bigint\"\n  ) {\n    return false\n  }\n\n  const derivationOrigin = obj.derivationOrigin\n  if (\n    typeof derivationOrigin !== \"undefined\" &&\n    typeof derivationOrigin !== \"string\"\n  ) {\n    return false\n  }\n  return true\n}\n","import { logAuthorizeApplication } from \"frontend/features/stats/services\"\nimport {\n  AuthorizationRequest,\n  AuthorizingAppMeta,\n  ThirdPartyAuthSession,\n} from \"frontend/state/authorization\"\n\nimport {\n  awaitClientMessage,\n  getAppMetaFromQuery,\n  isIdentityClientAuthEvent,\n  postMessageToClient,\n  prepareClientDelegate,\n} from \".\"\nimport { fetchApplication } from \"../identity-manager\"\nimport { validateDerivationOrigin } from \"../internet-identity/validateDerivationOrigin\"\n\n/**\n * xstate service initiating the idp flow via window message channel with the client\n * @returns authorization request\n */\nexport async function handshake(): Promise<AuthorizationRequest> {\n  // FIXME: for the iframe mode to work, we need to send the message\n  // to the parent window after we've called the `authClient.login()`.\n  // Having this interval is the easiest work around for now.\n  const interval = setInterval(\n    () => postMessageToClient({ kind: \"authorize-ready\" }),\n    500,\n  )\n\n  const response = awaitClientMessage(isIdentityClientAuthEvent).then(\n    async (event) => {\n      console.debug(\"handshake\", { event })\n      const validation = await validateDerivationOrigin(\n        event.origin,\n        event.data.derivationOrigin,\n      )\n      console.debug(\"handshake\", {\n        validation,\n        derivationOrigin: event.data.derivationOrigin,\n      })\n      if (validation.result !== \"valid\") throw new Error(validation.message)\n      clearInterval(interval)\n      return {\n        maxTimeToLive: event.data.maxTimeToLive,\n        sessionPublicKey: event.data.sessionPublicKey,\n        derivationOrigin: event.data.derivationOrigin,\n        hostname: event.origin,\n      }\n    },\n  )\n  postMessageToClient({ kind: \"authorize-ready\" })\n  return response\n}\n\n/**\n * xstate service posting third party auth session to the client via window message channel\n * @param context\n * @param event\n * @returns\n */\nexport async function postDelegation(context: {\n  authRequest?: { hostname: string }\n  thirdPartyAuthoSession?: ThirdPartyAuthSession\n  appMeta?: AuthorizingAppMeta\n}) {\n  console.debug(\"postDelegation\")\n  if (!context.authRequest?.hostname)\n    throw new Error(\"postDelegation context.authRequest.hostname missing\")\n  if (!context.thirdPartyAuthoSession)\n    throw new Error(\"postDelegation context.thirdPartyAuthoSession missing\")\n  if (!context.appMeta)\n    throw new Error(\"postDelegation context.appMeta missing\")\n\n  const delegations = [\n    prepareClientDelegate(context.thirdPartyAuthoSession.signedDelegation),\n  ]\n  const userPublicKey = context.thirdPartyAuthoSession.userPublicKey\n\n  logAuthorizeApplication({\n    scope: context.thirdPartyAuthoSession.scope,\n    anchor: context.thirdPartyAuthoSession.anchor,\n    applicationName: context.appMeta.name,\n    chain: \"Internet Computer\",\n  })\n\n  postMessageToClient(\n    {\n      kind: \"authorize-client-success\",\n      delegations,\n      userPublicKey,\n    },\n    context.authRequest.hostname,\n  )\n  window.close()\n  return undefined\n}\n\n/**\n * xstate service retrieving connecting application meta data\n */\nexport async function getAppMeta(): Promise<AuthorizingAppMeta> {\n  const meta = getAppMetaFromQuery()\n  return meta\n}\n\nexport async function checkIsIframe() {\n  try {\n    return window.self !== window.top\n  } catch (e) {\n    return true\n  }\n}\n\ntype CheckIsIframeAllowedParams = {\n  authRequest?: {\n    hostname: string\n    derivationOrigin?: string\n  }\n}\n\nexport async function checkIsIframeAllowed({\n  authRequest: { hostname, derivationOrigin } = {\n    hostname: \"\",\n  },\n}: CheckIsIframeAllowedParams) {\n  console.debug(\"checkIsIframeAllowed\", { hostname, derivationOrigin })\n  if (!hostname)\n    throw new Error(\"checkIsIframeAllowed hostname cannot be empty\")\n\n  const { isIFrameAllowed, domain } = await fetchApplication(\n    derivationOrigin || hostname,\n  )\n  console.debug(\"checkIsIframeAllowed\", { isIFrameAllowed, domain })\n  return isIFrameAllowed\n}\n","import { Principal } from \"@dfinity/principal\"\n\nexport const MAX_ALTERNATIVE_ORIGINS = 10\n\nexport type ValidationResult =\n  | { result: \"valid\" }\n  | { result: \"invalid\"; message: string }\n\nexport const validateDerivationOrigin = async (\n  authRequestOrigin: string,\n  derivationOrigin?: string,\n): Promise<ValidationResult> => {\n  if (\n    derivationOrigin === undefined ||\n    derivationOrigin === authRequestOrigin\n  ) {\n    // this is the default behaviour -> no further validation necessary\n    return { result: \"valid\" }\n  }\n\n  // check format of derivationOrigin\n  const matches = /^https:\\/\\/([\\w-]*)(\\.raw)?\\.ic0\\.app$/.exec(\n    derivationOrigin,\n  )\n  if (matches === null) {\n    return {\n      result: \"invalid\",\n      message:\n        'derivationOrigin does not match regex \"^https:\\\\/\\\\/([\\\\w-]*)(\\\\.raw)?\\\\.ic0\\\\.app$\"',\n    }\n  }\n\n  try {\n    const canisterId = Principal.fromText(matches[1]) // verifies that a valid canister id was matched\n    const alternativeOriginsUrl = `https://${canisterId.toText()}.ic0.app/.well-known/ii-alternative-origins`\n    const response = await fetch(\n      // always fetch non-raw\n      alternativeOriginsUrl,\n      // fail on redirects\n      { redirect: \"error\" },\n    )\n\n    if (response.status !== 200) {\n      return {\n        result: \"invalid\",\n        message: `resource ${alternativeOriginsUrl} returned invalid status: ${response.status}`,\n      }\n    }\n\n    const alternativeOriginsObj = (await response.json()) as {\n      alternativeOrigins: string[]\n    }\n    console.log(\">> \", { alternativeOriginsObj })\n\n    // check for expected property\n    if (!Array.isArray(alternativeOriginsObj?.alternativeOrigins)) {\n      return {\n        result: \"invalid\",\n        message: `resource ${alternativeOriginsUrl} has invalid format: received ${alternativeOriginsObj}`,\n      }\n    }\n\n    // check number of entries\n    if (\n      alternativeOriginsObj.alternativeOrigins.length > MAX_ALTERNATIVE_ORIGINS\n    ) {\n      return {\n        result: \"invalid\",\n        message: `Resource ${alternativeOriginsUrl} has too many entries: To prevent misuse at most ${MAX_ALTERNATIVE_ORIGINS} alternative origins are allowed.`,\n      }\n    }\n\n    // check allowed alternative origins\n    if (!alternativeOriginsObj.alternativeOrigins.includes(authRequestOrigin)) {\n      return {\n        result: \"invalid\",\n        message: `\"${authRequestOrigin}\" is not listed in the list of allowed alternative origins. Allowed alternative origins: ${alternativeOriginsObj.alternativeOrigins}`,\n      }\n    }\n  } catch (e: any) {\n    return {\n      result: \"invalid\",\n      message: `An error occurred while validating the derivationOrigin \"${derivationOrigin}\" for alias domain \"${authRequestOrigin}\": ${e?.message}`,\n    }\n  }\n\n  // all checks passed --> valid\n  return { result: \"valid\" }\n}\n","import bowser from \"bowser\"\n\n// TODO: refactor to bowser plugin\nexport const getBrowser = () => {\n  const agent = window.navigator.userAgent.toLowerCase()\n  switch (true) {\n    case agent.indexOf(\"edge\") > -1:\n      return \"Edge\"\n    case agent.indexOf(\"opr\") > -1 && !!(window as any).opr:\n      return \"Opera\"\n    case agent.indexOf(\"chrome\") > -1 && !!(window as any).chrome:\n      return \"Chrome\"\n    case agent.indexOf(\"trident\") > -1:\n      return \"IE\"\n    case agent.indexOf(\"firefox\") > -1:\n      return \"Firefox\"\n    case agent.indexOf(\"safari\") > -1:\n      return \"Safari\"\n    default:\n      return \"Other\"\n  }\n}\n\nexport const getBrowserVersion = () => {\n  const browser = bowser.getParser(window.navigator.userAgent)\n\n  return browser.getBrowser().version\n}\n\nexport const getBrowserName = () => {\n  const browser = bowser.getParser(window.navigator.userAgent)\n\n  return browser.getBrowser().name\n}\n\nexport const isOdd = (num: number) => num % 2 === 1\n\nexport const getUrl = (url: string) => {\n  if (!/^(http|https):\\/\\//.test(url)) {\n    url = `${window.location.protocol}//${url}`\n  }\n\n  return new URL(url)\n}\n\n/**\n * Turn Hello World! into hello-world\n *\n * @export\n * @param {string} str\n */\nexport function slugify(str: string) {\n  return str\n    .toLowerCase()\n    .trim()\n    .replace(/[^\\w\\s-]/g, \"\")\n    .replace(/[\\s_-]+/g, \"-\")\n    .replace(/^-+|-+$/g, \"\")\n}\n"],"names":["RemoteSenderMachine","createMachine","tsTypes","schema","events","context","id","initial","states","Start","type","GetAuthRequest","Fetch","invoke","src","onDone","actions","target","Done","GetAppMeta","AuthenticationMachine","data","appMeta","authRequest","PostDelegation","auhtSession","authSession","End","guards","services","postRemoteDelegationService","async","event","console","debug","chain","sessionKey","authState","Error","pubsubChannel","anchor","message","buildRemoteLoginRegisterMessage","BigInt","createTopic","response","postMessages","getAppMeta","getDataFromPath","params","Object","fromEntries","URLSearchParams","window","location","search","entries","secret","maxTimeToLive","aliasDomain","derivationOrigin","name","sessionPublicKey","Uint8Array","fromHexString","Promise","resolve","hostname","assignAppMeta","assign","assignAuthRequest","assignAuthSession","RemoteIDPCoordinator","machine","state","useMachine","isAuthenticated","useAuthentication","React","value","matches","B","isLoading","actor","children","authenticate","to","logAuthorizeApplication","scope","applicationName","application","principal","fetchPrincipal","principalId","toString","url","ic","AWS_AUTH_STATS","fetch","method","headers","body","JSON","stringify","ok","text","storeSignIn","billable","checkIsIframe","blockchainAddress","principalToAddress","opener","parent","postMessageToClient","origin","postMessage","isIdentityClientAuthEvent","msg","obj","hasOwnProperty","kind","handshake","interval","setInterval","isExpectedMessage","res","addEventListener","warn","then","validation","authRequestOrigin","undefined","result","exec","alternativeOriginsUrl","Principal","toText","redirect","status","alternativeOriginsObj","json","log","Array","isArray","alternativeOrigins","length","includes","e","validateDerivationOrigin","clearInterval","postDelegation","thirdPartyAuthoSession","delegations","receivedDelegation","signedDelegation","delegation","pubkey","from","expiration","targets","signature","userPublicKey","close","get","logo","getAppMetaFromQuery","self","top","checkIsIframeAllowed","isIFrameAllowed","domain","fetchApplication","getBrowserName","bowser","navigator","userAgent","getBrowser","getUrl","test","protocol","URL"],"sourceRoot":""}