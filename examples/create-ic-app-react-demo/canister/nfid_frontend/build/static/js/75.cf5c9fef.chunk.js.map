{"version":3,"file":"static/js/75.cf5c9fef.chunk.js","mappings":"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","sources":["assets/dfinity.svg","state/machines/authorization/authorization.ts","state/machines/authorization/idp.ts","ui/molecules/error-banner/index.tsx","coordination/authorization.tsx","coordination/idp.tsx","coordination/trust-device.tsx","features/stats/services.ts","integration/lambda/auth-stats/index.ts","integration/windows/index.ts","integration/windows/services.ts","integration/internet-identity/validateDerivationOrigin.ts","state/machines/authentication/trust-device.ts","features/iframe/iframe-trust-device/services.ts","ui/pages/register-device-decider/index.tsx","ui/utils/index.ts"],"sourcesContent":["var _path, _path2, _path3, _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgDfinity(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    viewBox: \"-1 -1 107.42470599999999 54.6597\",\n    width: 103.42,\n    height: 50.66,\n    className: \"inline w-8 h-8 ml-1\",\n    \"data-v-45c16e28\": \"\",\n    \"data-v-5e337368\": \"\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", {\n    \"data-v-45c16e28\": \"\"\n  }, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.62 9.14C56.48 11.99 53.72 15.07 51.71 17.53C51.71 17.53 54.95 21.18 58.49 25.09C60.41 22.72 63.17 19.51 66.36 16.61C72.26 11.2 76.1 10.11 78.33 10.11C86.64 10.11 93.37 16.92 93.37 25.35C93.37 33.7 86.64 40.51 78.33 40.6C77.94 40.6 77.46 40.55 76.89 40.42C79.29 41.52 81.92 42.31 84.37 42.31C99.58 42.31 102.55 32.03 102.72 31.28C103.16 29.39 103.42 27.42 103.42 25.4C103.38 11.38 92.15 0 78.33 0C72.56 0 66.27 3.08 59.62 9.14Z\",\n    id: \"a2oTCciHwU\",\n    \"data-v-45c16e28\": \"\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"gradientc2rIvyDhN\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 65.17,\n    y1: 3.67,\n    x2: 99.9,\n    y2: 39.44,\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"21%\",\n    \"data-v-45c16e28\": \"\",\n    style: {\n      stopColor: \"rgb(241, 90, 36)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"68.41000000000001%\",\n    \"data-v-45c16e28\": \"\",\n    style: {\n      stopColor: \"rgb(251, 176, 59)\",\n      stopOpacity: 1\n    }\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.8 41.52C46.95 38.66 49.7 35.59 51.71 33.13C51.71 33.13 48.48 29.48 44.94 25.57C43.01 27.94 40.26 31.15 37.07 34.05C31.17 39.41 27.28 40.55 25.09 40.55C16.79 40.55 10.05 33.74 10.05 25.31C10.05 16.96 16.79 10.15 25.09 10.06C25.48 10.06 25.97 10.11 26.53 10.24C24.13 9.14 21.51 8.35 19.06 8.35C3.85 8.35 0.87 18.63 0.7 19.38C0.26 21.27 0 23.24 0 25.26C0 39.28 11.23 50.66 25.09 50.66C30.86 50.66 37.16 47.58 43.8 41.52Z\",\n    id: \"aFWcwFIax\",\n    \"data-v-45c16e28\": \"\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"gradientaIMror5Zz\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 38.22,\n    y1: 46.97,\n    x2: 3.5,\n    y2: 11.2,\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"21%\",\n    \"data-v-45c16e28\": \"\",\n    style: {\n      stopColor: \"rgb(237, 30, 121)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"89.29%\",\n    \"data-v-45c16e28\": \"\",\n    style: {\n      stopColor: \"rgb(82, 39, 133)\",\n      stopOpacity: 1\n    }\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.1 8.57C5.24 8.23 1.16 18.1 0.81 19.37C3.47 8.3 13.37 0.04 25.14 0C34.73 0 44.43 9.21 51.59 17.53C51.6 17.51 51.61 17.5 51.62 17.49C51.62 17.49 54.86 21.13 58.4 25.04C58.4 25.04 62.42 29.7 66.71 33.79C68.37 35.37 76.45 41.74 84.23 41.96C98.49 42.36 102.42 31.94 102.64 31.15C100.02 42.27 90.09 50.57 78.29 50.62C68.69 50.62 58.99 41.4 51.8 33.08C51.78 33.1 51.77 33.11 51.76 33.13C51.76 33.13 48.52 29.48 44.98 25.57C44.98 25.57 40.96 20.91 36.68 16.83C35.01 15.25 26.88 8.79 19.1 8.57ZM0.81 19.37C0.8 19.4 0.79 19.43 0.79 19.46C0.79 19.44 0.8 19.41 0.81 19.37Z\",\n    id: \"e1RZG6bOc\",\n    \"data-v-45c16e28\": \"\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#a2oTCciHwU\",\n    opacity: 1,\n    fill: \"url(#gradientc2rIvyDhN)\",\n    \"data-v-45c16e28\": \"\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#a2oTCciHwU\",\n    opacity: 1,\n    fillOpacity: 0,\n    stroke: \"#000000\",\n    strokeWidth: 1,\n    strokeOpacity: 0,\n    \"data-v-45c16e28\": \"\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#aFWcwFIax\",\n    opacity: 1,\n    fill: \"url(#gradientaIMror5Zz)\",\n    \"data-v-45c16e28\": \"\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#aFWcwFIax\",\n    opacity: 1,\n    fillOpacity: 0,\n    stroke: \"#000000\",\n    strokeWidth: 1,\n    strokeOpacity: 0,\n    \"data-v-45c16e28\": \"\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#e1RZG6bOc\",\n    opacity: 1,\n    fill: \"#29abe2\",\n    fillOpacity: 1,\n    \"data-v-45c16e28\": \"\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#e1RZG6bOc\",\n    opacity: 1,\n    fillOpacity: 0,\n    stroke: \"#000000\",\n    strokeWidth: 1,\n    strokeOpacity: 0,\n    \"data-v-45c16e28\": \"\"\n  }))))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgDfinity);\nexport default __webpack_public_path__ + \"static/media/dfinity.583ab84ba16070ca501453d1e291dff4.svg\";\nexport { ForwardRef as ReactComponent };","import { assign, ActorRefFrom, createMachine, send } from \"xstate\"\n\nimport { Account } from \"@nfid/integration\"\n\nimport { fetchAccountLimitService } from \"frontend/integration/app-config/services\"\nimport {\n  createAccountService,\n  fetchAccountsService,\n} from \"frontend/integration/identity-manager/services\"\nimport { fetchDelegateService } from \"frontend/integration/internet-identity/services\"\nimport { AuthSession } from \"frontend/state/authentication\"\nimport {\n  AuthorizationRequest,\n  AuthorizingAppMeta,\n  ThirdPartyAuthSession,\n} from \"frontend/state/authorization\"\n\ntype AccountAction = \"CREATE_ACCOUNT\" | \"SELECT_ACCOUNT\" | \"PRESENT_ACCOUNTS\"\n\nexport const selectAccountAction = (\n  accountsAmount: number,\n  accountsLimit?: number,\n): AccountAction => {\n  console.debug(\"selectAccountAction\", { accountsAmount, accountsLimit })\n  if (accountsAmount === 0) {\n    console.debug(\"selectAccountAction CREATE_ACCOUNT\")\n    return \"CREATE_ACCOUNT\"\n  }\n  if (accountsLimit && accountsLimit <= 1) {\n    console.debug(\"selectAccountAction SELECT_ACCOUNT\")\n    return \"SELECT_ACCOUNT\"\n  }\n  console.debug(\"selectAccountAction PRESENT_ACCOUNTS\")\n  return \"PRESENT_ACCOUNTS\"\n}\n\nexport interface AuthorizationMachineContext {\n  appMeta?: AuthorizingAppMeta\n  authSession: AuthSession\n  authRequest: AuthorizationRequest\n  accountsLimit?: number\n  accounts?: Account[]\n}\n\nexport type AuthorizationMachineEvents =\n  | { type: \"done.invoke.fetchAccountLimitService\"; data: number }\n  | { type: \"done.invoke.fetchAccountsService\"; data: Account[] }\n  | { type: \"done.invoke.fetchDelegateService\"; data: ThirdPartyAuthSession }\n  | {\n      type: \"done.invoke.createAccountService\"\n      data: { accountId: Account[\"accountId\"] }\n    }\n  | { type: \"SINGLE_ACCOUNT\" }\n  | { type: \"MULTI_ACCOUNT\" }\n  | { type: \"CREATE_ACCOUNT\" }\n  | { type: \"SELECT_ACCOUNT\"; data: { accountId: Account[\"accountId\"] } }\n  | { type: \"PRESENT_ACCOUNTS\" }\n\nexport interface Schema {\n  events: AuthorizationMachineEvents\n  context: AuthorizationMachineContext\n}\n\nconst AuthorizationMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QEMCuAXAFgewE4EsAvMAOgGV1ld0BiCbAO1PwYDdsBrUgMzHQGNMAQQAOIgKqwwuADL4AtvnSJQI7LCX5GKkAA9EAWgDsAFhIBWEwAYAbEYCMAZkcmjNkwE57AGhABPRAAmG0CLKytHW0DAoyNHcyMAX0TfNCw8IlJxBgAbbH4OGnEAORkAeQBhAGkdNQ10LQYdfQRHI3MLIy9zcwAOG3tzexMbG18AhFGOmMcbZw8jXqNAkxNk1IwcAmISGWwoFjpGZjZOUjyDpqQQOs1ta5aXUMWQq3t3WY9XccQTQN6SI4nPFeuEXPMbOsQGktpkSAAxPiCIT8fjYVAMdCwI5MEgsdhcEi8ATCVHozHwa63Br3UCPSIkXoeHrLf7Wax2H4Id7TcwRN7-QbRKEwjI7REklFojFYmgVABKAFEhAAVRUAfSEFQqZRKKtq6juVzpiBCjhINl69hWMV6MQ+XJW9gsIxG7V65g8ViWaxS0M2YtIEuRZJl2LIipkioqKs12t1xX1VMNNONelNKwtHktNisQ1GphMXL+NhIJgS-16vRM9iM4XsIoD2yDSNJ0opNAACkqI4m4zq9WQDfVGs1TcNGbWPIFvSXc44uc4zOF+VYayZ+rNIX7Rc2SBVcGBkOgwFLybR6Lj8WcSPxD8fT6HMcOjWPuYE+SRa113oEPB5HECewPEXFwSBXSI12GTdRkbdI907Q8pExM8wxoCMoxjfsEyTVQU1HB5EGrMxHA8JkHFIusXBA-xfmCMsKyrata3rODYR2RC4DAFCn1lBVlTVbC9RfVM33sPNQhWcwQhnGdaxGUDlzBcJ1xg7cNnguEAHE+AAETAHIwCgY9GhxE4CR4Vt9MM4yTxEgiTQQXo2gsfo+WcOxnPsHxaMmGwPBILw3lzKx3WA5I-QYbAIDgHRdzhCgqGUZMR1pdMEGMAFolCmxzCAmtHA9cwuWWEhAmcZwrA-Bxcu8tjAxIbI8gKey0paAwgLLUjrWCaxnE9TlfNygEFksADnDcGJzHqvc9kuVq00eTqegSaxBgWas3C5cx4lcvpRhnaTgmmncmzhYM23PSk8NSxagksRk8rmax83sKtFyq8Dwj-EY3n-d5fQ09jSAPI8T1Q58UtfQiEGzIwLRZOY4i6L4i18mcAssdwyPElx+gAma4U45D0AhrEFrfZzQmrO1gTIvKgUXGIwiq0wP380iTqBhqdPQayjJMtLqQc9K3HNG0qOZZj3t8naOj6fbXiO3LCZ2RUGAgCmYfE9wLVGGtYlBZyyK5UZzRrN4a3+wDnNVsAtccgxxMkmc3Dy4YnCKrkDCsEg3FGS011MT3QQbCKgA */\n  createMachine(\n    {\n      tsTypes: {} as import(\"./authorization.typegen\").Typegen0,\n      schema: { events: {}, context: {} } as Schema,\n      id: \"authorize\",\n      initial: \"Start\",\n      states: {\n        Start: {\n          invoke: {\n            src: \"fetchAccountLimitService\",\n            id: \"fetchAccountLimitService\",\n            onDone: [\n              {\n                actions: \"assignUserLimit\",\n                target: \"FetchAccounts\",\n              },\n            ],\n          },\n        },\n        FetchAccounts: {\n          invoke: {\n            src: \"fetchAccountsService\",\n            id: \"fetchAccountsService\",\n            onDone: [\n              {\n                actions: [\"assignAccounts\", \"handleAccounts\"],\n              },\n            ],\n          },\n          on: {\n            CREATE_ACCOUNT: \"CreateAccount\",\n            SELECT_ACCOUNT: \"GetDelegation\",\n            PRESENT_ACCOUNTS: \"PresentAccounts\",\n          },\n        },\n        CreateAccount: {\n          invoke: {\n            src: \"createAccountService\",\n            id: \"createAccountService\",\n            onDone: [\n              {\n                target: \"GetDelegation\",\n              },\n            ],\n          },\n        },\n        PresentAccounts: {\n          on: {\n            SELECT_ACCOUNT: {\n              target: \"GetDelegation\",\n            },\n            CREATE_ACCOUNT: \"CreateAccount\",\n          },\n        },\n        GetDelegation: {\n          invoke: {\n            src: \"fetchDelegateService\",\n            id: \"fetchDelegateService\",\n            onDone: \"End\",\n            onError: \"PresentAccounts\",\n          },\n        },\n        End: {\n          type: \"final\",\n          data: (context, event: { data: ThirdPartyAuthSession }) => event.data,\n        },\n      },\n    },\n    {\n      actions: {\n        assignUserLimit: assign({\n          accountsLimit: (context, event) => event.data,\n        }),\n        assignAccounts: assign({ accounts: (context, event) => event.data }),\n        handleAccounts: send((context, event) => ({\n          type: selectAccountAction(event.data.length, context.accountsLimit),\n          data: event.data[0]?.accountId,\n        })),\n      },\n      services: {\n        fetchAccountLimitService,\n        fetchAccountsService,\n        fetchDelegateService,\n        createAccountService,\n      },\n    },\n  )\n\nexport type AuthorizationActor = ActorRefFrom<typeof AuthorizationMachine>\n\nexport default AuthorizationMachine\n","import { ActorRefFrom, assign, createMachine } from \"xstate\"\n\nimport { isWebAuthNSupported } from \"frontend/integration/device\"\nimport {\n  getAppMeta,\n  handshake,\n  postDelegation,\n  checkIsIframe,\n  checkIsIframeAllowed,\n} from \"frontend/integration/windows/services\"\nimport { AuthSession } from \"frontend/state/authentication\"\nimport {\n  AuthorizationRequest,\n  AuthorizingAppMeta,\n  ThirdPartyAuthSession,\n} from \"frontend/state/authorization\"\nimport AuthenticationMachine from \"frontend/state/machines/authentication/authentication\"\nimport AuthorizationMachine from \"frontend/state/machines/authorization/authorization\"\n\nimport TrustDeviceMachine from \"../authentication/trust-device\"\n\nexport interface IDPMachineContext {\n  authRequest?: {\n    maxTimeToLive: bigint\n    sessionPublicKey: Uint8Array\n    hostname: string\n    derivationOrigin?: string\n  }\n  thirdPartyAuthoSession?: ThirdPartyAuthSession\n  appMeta?: AuthorizingAppMeta\n  error?: Error\n  isIframe: boolean\n}\n\nexport type IDPMachineEvents =\n  | { type: \"done.invoke.handshake\"; data: AuthorizationRequest }\n  | { type: \"error.platform.handshake\"; data: Error }\n  | { type: \"done.invoke.getAppMeta\"; data: AuthorizingAppMeta }\n  | { type: \"done.invoke.checkIsIframe\"; data: boolean }\n  | { type: \"done.invoke.checkIsIframeAllowed\"; data: boolean }\n  | { type: \"error.platform.checkRuntime\"; data: Error }\n  | { type: \"done.invoke.authenticate\"; data: AuthSession }\n  | { type: \"done.invoke.authorize\"; data: ThirdPartyAuthSession }\n  | { type: \"done.invoke.postDelegation\"; data: void }\n  | { type: \"RETRY\" }\n\ninterface Schema {\n  context: IDPMachineContext\n  events: IDPMachineEvents\n}\nconst IDPMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QEsIAcB0BlALgQwCccBiCAewDswNZ8drVNdCcBtABgF1FQ0zZkOZJR4gAHogCM7SQGYMs2QDYAHAFYVK9rOkB2ACwAaEAE9EOjLqX6VATmkAmG5JWyHSgL4fjjbPiIYABJ4FBCwABZ4ANbUAGJgOADG4aSUDBQAbmQxGJGhEdFgHNxIIHwCQiKlEgiytiqWurrsag4qSrpqui5qxma1Thitsvr6StqdTbZePuh+LEEhYZE58UkpYAQEZAQYaAA2eDgAZjsAtrlLBTHFouWCwhSiNZL6khhK0qq23eMtKg4+ogHK8hi1JM1XLoHA52FYZiBfMwAsF8itqABRLY7YgAJQxABVcQBNW6le6VJ7VYG2NRDBwjWSdIEIfTsWxg9hcuQuJTjFQIpH+HAYADiCQAgmg0ABZBJ4DBrZKpKgYZCZbLUGA4KWy+Vk3j8B5VUA1BkODD-BmdKEdWyA0yIfkYFRjMaSWEObqjQVzCUAVxw4TAFCEiSOjxleGS6rAKvSWRyeEDwdDyHD9ANZSNlOeiHq+iG+jUY00APYbVsLMktnkLn0uldWh+2grvswAaDO2QAC8I5QozGqPG1Rqkynuz2ilw7jnHnmEHY6y52OpNKM2boWSNdBh9LYDyXrB79CN2xhO+FJ-2KIPwrGR+rE9Rk12CL2ipISoaKvPqQgPTsIY7DZVw+XZCEWQbDk+UkD0uhPX5zwJAh-VoAARMAMnTONyFVJ9NQwHBUIwrCcLvWMswpP9TXzEs9xbNpdHsZR7BZDR3i5NQSzaJRFBLaYEQoMgIDgURGFnX8TXERAAFpZHYJQPnGNQT0kJRzRaFlZO4yxZFUlpTxGBs7HPZEcEk40qVohBZIcDRlPBJx1M03pHVqDk1HBJkVFeWQAQcWx9DM4VFjRQpLNzf87OkBRVPcV1PlaXR9OrL1LW8tRbHZH59IcEKFlRZZCkVBJkkimiZIAitty5DKuRkHR2n5AqUSudEMCxbYCAq6Salkly4o9VR3WS1L3IU+R7O5V5iyZTxvEROZzLC4qcnQtJeusqqNF3FxvXUoLFKC7dRksfcfldOpmuCxahQWcUdWlOV8C2hcYvYRz4reDS3C09zWneEZjysMYvT41qRUe3UXoVJVwje6LBvA76XL+tz+mdRL3U9b1btmJhQuh575QwDaqERmybELVROlpOoxg0+yWT4zjbGsEZAu4lQUshjAAGFg0SKIAElYBF44CDwM4wEpqqPqGhLRq9cb+mbBiDx+JQvNUdxz0vEMwxvCiKfJOc+sQTQlIU2lRl8n6bBZdQXVGT5fpcjp8aWjsJ3fPtKRN2Wzak7aajsDla1dMabAx4EZEsPiGX0L1WjGQSCYwFC0JwTDsMSIOfyshdNDpJpXTeaEtCcWPWQsVdujkVmmjhc8MVCOWantXcuniiDvmsFnVEsH4gvUdmazUVvsR64Oi+i+yGn04bEskMaa70Bp7HYU96lUGsBS8DwgA */\n  createMachine(\n    {\n      tsTypes: {} as import(\"./idp.typegen\").Typegen0,\n      schema: { events: {}, context: { isIframe: false } } as Schema,\n      id: \"idp\",\n      initial: \"Start\",\n      states: {\n        Start: {\n          type: \"parallel\",\n          states: {\n            Handshake: {\n              initial: \"Fetch\",\n              states: {\n                Fetch: {\n                  invoke: {\n                    src: \"handshake\",\n                    id: \"handshake\",\n                    onDone: [\n                      {\n                        actions: \"assignAuthRequest\",\n                        target: \"CheckIsIframe\",\n                      },\n                    ],\n                    onError: {\n                      target: \"Error\",\n                      actions: \"assignError\",\n                    },\n                  },\n                },\n                CheckIsIframe: {\n                  invoke: {\n                    src: \"checkIsIframe\",\n                    id: \"checkIsIframe\",\n                    onDone: [\n                      {\n                        actions: \"assignIsIframe\",\n                        target: \"CheckIsIframeAllowed\",\n                        cond: \"isTrue\",\n                      },\n                      { target: \"#idp.AuthenticationMachine\" },\n                    ],\n                  },\n                },\n                CheckIsIframeAllowed: {\n                  invoke: {\n                    src: \"checkIsIframeAllowed\",\n                    id: \"checkIsIframeAllowed\",\n                    onDone: [\n                      {\n                        target: \"#idp.AuthenticationMachine\",\n                        cond: \"isTrue\",\n                      },\n                      {\n                        target: \"Error\",\n                        actions: \"assignIframeNotAllowedError\",\n                      },\n                    ],\n                  },\n                },\n                Error: {\n                  on: { RETRY: \"Fetch\" },\n                },\n                Done: {\n                  type: \"final\",\n                },\n              },\n            },\n            GetAppMeta: {\n              initial: \"Fetch\",\n              states: {\n                Fetch: {\n                  invoke: {\n                    src: \"getAppMeta\",\n                    id: \"getAppMeta\",\n                    onDone: [\n                      {\n                        actions: \"assignAppMeta\",\n                        target: \"Done\",\n                      },\n                    ],\n                  },\n                },\n                Done: {\n                  type: \"final\",\n                },\n              },\n            },\n          },\n          onDone: {\n            target: \"AuthenticationMachine\",\n          },\n        },\n        AuthenticationMachine: {\n          invoke: {\n            src: \"AuthenticationMachine\",\n            id: \"authenticate\",\n            onDone: \"AuthorizationMachine\",\n            data: (context) => ({\n              appMeta: context.appMeta,\n              authRequest: context.authRequest,\n            }),\n          },\n        },\n        AuthorizationMachine: {\n          invoke: {\n            src: \"AuthorizationMachine\",\n            id: \"authorize\",\n            onDone: [\n              { target: \"TrustDevice\", cond: \"isWebAuthNSupported\" },\n              { target: \"End\" },\n            ],\n            data: (context, event: { data: AuthSession }) => ({\n              appMeta: context.appMeta,\n              authRequest: context.authRequest,\n              authSession: event.data,\n            }),\n          },\n        },\n        TrustDevice: {\n          entry: \"assignAuthoSession\",\n          invoke: {\n            src: \"TrustDeviceMachine\",\n            id: \"trustDeviceMachine\",\n            onDone: \"End\",\n            data: (context) => ({\n              isIframe: context.isIframe,\n            }),\n          },\n        },\n        End: {\n          invoke: {\n            src: \"postDelegation\",\n            id: \"postDelegation\",\n          },\n          type: \"final\",\n        },\n        Error: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      services: {\n        handshake,\n        getAppMeta,\n        postDelegation,\n        checkIsIframe,\n        checkIsIframeAllowed,\n        AuthenticationMachine,\n        AuthorizationMachine,\n        TrustDeviceMachine,\n      },\n      actions: {\n        assignAuthRequest: assign((_, event) => ({\n          authRequest: event.data,\n        })),\n        assignAppMeta: assign((_, event) => ({\n          appMeta: event.data,\n        })),\n        assignAuthoSession: assign({\n          thirdPartyAuthoSession: (_, event) => event.data,\n        }),\n        assignError: assign({ error: (_, event) => event.data }),\n        assignIframeNotAllowedError: assign({\n          error: (_) =>\n            new Error(\n              \"NFID Embed is not activated. Please contact Internet Identity Labs at support@identitylabs.ooo to activate this feature.\",\n            ),\n        }),\n        assignIsIframe: assign((_, event) => ({\n          isIframe: event.data,\n        })),\n      },\n      guards: {\n        isWebAuthNSupported,\n        isTrue: (_, event) => !!event.data,\n      },\n    },\n  )\n\nexport type IDPActor = ActorRefFrom<typeof IDPMachine>\nexport type IDPMachineType = typeof IDPMachine\n\nexport default IDPMachine\n","import { Button, IconCmpError } from \"@nfid-frontend/ui\"\n\ninterface ErrorBannerProps {\n  errorMessage?: string\n  onRetry: () => void\n}\nexport const ErrorBanner: React.FC<ErrorBannerProps> = ({\n  errorMessage,\n  onRetry,\n}) => {\n  return (\n    <div className=\"flex flex-col space-y-4\">\n      <div className={\"rounded bg-red-200 p-8 text-sm\"}>\n        <div className=\"flex center\">\n          <div className=\"mr-2\">\n            <IconCmpError />\n          </div>\n          <div className=\"text-sm opacity-40\">{errorMessage}</div>\n        </div>\n      </div>\n      <Button type=\"primary\" onClick={onRetry}>\n        Retry\n      </Button>\n    </div>\n  )\n}\n","import { useActor } from \"@xstate/react\"\nimport React from \"react\"\n\nimport { mapPersonaToLegacy } from \"frontend/integration/identity-manager\"\nimport { AuthorizationActor } from \"frontend/state/machines/authorization/authorization\"\nimport { BlurredLoader } from \"frontend/ui/molecules/blurred-loader\"\nimport { AuthorizeApp } from \"frontend/ui/pages/authorize-app\"\nimport { AuthorizeAppSingleAccount } from \"frontend/ui/pages/authorize-app/single-account\"\n\nexport function AuthorizationCoordinator({ actor }: Actor<AuthorizationActor>) {\n  const [state, send] = useActor(actor)\n\n  React.useEffect(() => {\n    console.debug(\"AuthorizationCoordinator\", {\n      context: state.context,\n      state: state.value,\n    })\n  }, [state.context, state.value])\n\n  const loadingMessage = React.useMemo(\n    () =>\n      ((state.matches(\"FetchAccounts\") || state.matches(\"Start\")) &&\n        `Loading your ${state.context.appMeta?.name ?? \"\"} accounts `) ||\n      (state.matches(\"CreateAccount\") &&\n        `Creating your ${state.context.appMeta?.name ?? \"\"} account`) ||\n      (state.matches(\"GetDelegation\") &&\n        `Signing in to ${state.context.appMeta?.name ?? \"the application\"}`),\n    [state],\n  )\n\n  switch (true) {\n    case state.matches(\"Start\"):\n    case state.matches(\"PresentAccounts\"):\n    case state.matches(\"FetchAccounts\"):\n    case state.matches(\"CreateAccount\"):\n    case state.matches(\"GetDelegation\"):\n      return state.context.accountsLimit === 1 ? (\n        <AuthorizeAppSingleAccount\n          applicationName={state.context.appMeta?.name}\n          applicationLogo={state.context.appMeta?.logo}\n          isLoading={\n            state.matches(\"Start\") ||\n            state.matches(\"FetchAccounts\") ||\n            state.matches(\"CreateAccount\") ||\n            state.matches(\"GetDelegation\")\n          }\n          loadingMessage={loadingMessage}\n          onContinueButtonClick={function (): Promise<void> {\n            throw new Error(\n              `AuthorizationCoordinator onContinueButtonClick not implemented.`,\n            )\n          }}\n        />\n      ) : (\n        <AuthorizeApp\n          isAuthenticated\n          applicationName={state.context.appMeta?.name}\n          applicationLogo={state.context.appMeta?.logo}\n          accountsLimit={state.context.accountsLimit}\n          isLoading={\n            state.matches(\"Start\") ||\n            state.matches(\"FetchAccounts\") ||\n            state.matches(\"CreateAccount\") ||\n            state.matches(\"GetDelegation\")\n          }\n          loadingMessage={loadingMessage}\n          accounts={state.context?.accounts?.map(mapPersonaToLegacy) || []}\n          onLogin={async (accountId) =>\n            send({ type: \"SELECT_ACCOUNT\", data: { accountId: accountId } })\n          }\n          onUnlockNFID={function (): Promise<any> {\n            throw new Error(\n              `AuthorizationCoordinator onUnlockNFID not implemented.`,\n            )\n          }}\n          onCreateAccount={async () => send(\"CREATE_ACCOUNT\")}\n        />\n      )\n    default:\n      return <BlurredLoader isLoading />\n  }\n}\n","import { useMachine } from \"@xstate/react\"\nimport React from \"react\"\n\nimport { AuthenticationActor } from \"frontend/state/machines/authentication/authentication\"\nimport { TrustDeviceActor } from \"frontend/state/machines/authentication/trust-device\"\nimport { AuthorizationActor } from \"frontend/state/machines/authorization/authorization\"\nimport IDPMachine, {\n  IDPMachineType,\n} from \"frontend/state/machines/authorization/idp\"\nimport { BlurredLoader } from \"frontend/ui/molecules/blurred-loader\"\nimport { ErrorBanner } from \"frontend/ui/molecules/error-banner\"\n\nimport { AuthenticationCoordinator } from \"./authentication\"\nimport { AuthorizationCoordinator } from \"./authorization\"\nimport { TrustDeviceCoordinator } from \"./trust-device\"\n\ninterface Props {\n  machine?: IDPMachineType\n  successPath?: string\n}\n\nexport default function IDPCoordinator({ machine }: Props) {\n  const [state, send] = useMachine(machine || IDPMachine)\n\n  React.useEffect(\n    () =>\n      console.debug(\"IDPCoordinator\", {\n        context: state.context,\n        state: state.value,\n      }),\n    [state.value, state.context],\n  )\n\n  switch (true) {\n    case state.matches(\"Start.Handshake.Error\"):\n      return (\n        <ErrorBanner\n          errorMessage={state.context.error?.message}\n          onRetry={() => send(\"RETRY\")}\n        />\n      )\n    case state.matches(\"AuthenticationMachine\"):\n      return (\n        <AuthenticationCoordinator\n          actor={state.children.authenticate as AuthenticationActor}\n        />\n      )\n    case state.matches(\"AuthorizationMachine\"):\n      return (\n        <AuthorizationCoordinator\n          actor={state.children.authorize as AuthorizationActor}\n        />\n      )\n    case state.matches(\"TrustDevice\"):\n      return (\n        <TrustDeviceCoordinator\n          actor={state.children.trustDeviceMachine as TrustDeviceActor}\n        />\n      )\n    case state.matches(\"End\"):\n    case state.matches(\"Start\"):\n    default:\n      return <BlurredLoader isLoading />\n  }\n}\n","import { useActor } from \"@xstate/react\"\nimport React from \"react\"\n\nimport { useDeviceInfo } from \"frontend/integration/device\"\nimport { TrustDeviceActor } from \"frontend/state/machines/authentication/trust-device\"\nimport { AuthorizeRegisterDeciderScreen } from \"frontend/ui/pages/register-device-decider\"\n\nexport function TrustDeviceCoordinator({ actor }: Actor<TrustDeviceActor>) {\n  const [state, send] = useActor(actor)\n  const { hasPlatformAuthenticator, platform } = useDeviceInfo()\n\n  React.useEffect(\n    () =>\n      console.debug(\"TrustDeviceCoordinator\", {\n        context: state.context,\n        state: state.value,\n      }),\n    [state.value, state.context],\n  )\n\n  return (\n    <AuthorizeRegisterDeciderScreen\n      onLogin={() => send(\"DONT_TRUST\")}\n      onRegisterPlatformDevice={async () => send(\"TRUST\")}\n      onRegisterSecurityDevice={async () => send(\"TRUST\")}\n      isLoading={!state.matches(\"Select\")}\n      loadingMessage={\n        !state.matches(\"Select\") ? \"registering device\" : undefined\n      }\n      isPlatformAuthenticatorAvailable={!!hasPlatformAuthenticator}\n      deviceName={platform.device}\n      platformAuthenticatorName={platform.authenticator}\n    />\n  )\n}\n","import { principalToAddress } from \"ictool\"\n\nimport { checkIsIframe } from \"@nfid-frontend/utils\"\n\nimport { fetchPrincipal } from \"frontend/integration/internet-identity\"\nimport { storeSignIn } from \"frontend/integration/lambda/auth-stats\"\n\ninterface LogAuthorizeApplicationArgs {\n  scope: string\n  anchor: number\n  applicationName?: string\n  chain?: string\n}\n\n/**\n * Store user to analytics database\n * @param scope - user id + domain used for the delegation\n * @param anchor - user number in internet identity\n * @param applicationName - The name of the application requesting authorization\n * @param chain - The chain the user is signing in to\n */\nexport const logAuthorizeApplication = async ({\n  scope,\n  anchor,\n  applicationName: application = \"Undefined application\",\n  chain = \"Internet Computer\",\n}: LogAuthorizeApplicationArgs) => {\n  const principal = await fetchPrincipal(anchor, scope)\n  const principalId = principal.toString()\n  const billable = checkIsIframe()\n  const blockchainAddress = principalToAddress(principal)\n\n  storeSignIn({\n    application,\n    billable,\n    blockchainAddress,\n    chain,\n    principal: principalId,\n  })\n}\n","import { ic } from \"@nfid/integration\"\n\nexport async function storeSignIn(event: {\n  principal: string\n  blockchainAddress: string\n  chain: string\n  application: string\n  billable: boolean\n}) {\n  const url = ic.isLocal ? \"/auth\" : AWS_AUTH_STATS\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(event),\n  })\n\n  if (!response.ok) throw new Error(await response.text())\n}\n","import { SignedDelegation } from \"@nfid/integration\"\n\nimport { AuthorizingAppMeta } from \"frontend/state/authorization\"\n\nimport { BuiltDelegate } from \"../internet-identity/build-delegate\"\nimport { hasOwnProperty } from \"../internet-identity/utils\"\n\n/**\n * Identity provider flow proceeds as follows.\n * Client: A 3rd party app connecting an NFID identity.\n * Provider: The NFID identity provider frontend.\n * 1. Client -> Provider: Open\n * 2. Provider -> Client: Ready\n * 3. Client -> Provider: Request\n * 4. Provider -> Client: Response\n */\n\n/** Events we post from the provider */\ntype IdentityProviderReadyEvent = { kind: \"authorize-ready\" }\ntype IdentityProviderAuthResponseEvent = {\n  kind: \"authorize-client-success\"\n  delegations: BuiltDelegate[]\n  userPublicKey: Uint8Array\n}\ntype IdentityProviderEvents =\n  | IdentityProviderReadyEvent\n  | IdentityProviderAuthResponseEvent\n\n/** Events we receive from the client */\nexport type IdentityClientAuthEvent = {\n  kind: \"authorize-client\"\n  maxTimeToLive: bigint\n  sessionPublicKey: Uint8Array\n  derivationOrigin?: string\n}\n\n/** Third party auth delegation format expected by @dfinity/auth-client */\nexport interface DfinityAuthClientDelegate {\n  delegation: {\n    pubkey: Uint8Array\n    expiration: bigint\n    targets: undefined\n  }\n  signature: Uint8Array\n}\n\nfunction opener() {\n  const opener = window.opener || window.parent\n  if (!opener) throw new Error(\"Could not identify window opener.\")\n  return opener as Window\n}\n\nexport function postMessageToClient<T extends IdentityProviderEvents>(\n  event: T,\n  hostname: string = \"*\",\n) {\n  const origin = opener()\n  console.debug(\"postMessageToClient\", { event, hostname })\n  origin.postMessage(event, hostname)\n}\n\nexport function awaitClientMessage<T>(\n  isExpectedMessage: (message: MessageEvent<T>) => message is MessageEvent<T>,\n) {\n  return new Promise<MessageEvent<T>>((res) => {\n    window.addEventListener(\"message\", (message) => {\n      if (isExpectedMessage(message)) {\n        return res(message)\n      }\n      console.warn(\n        `awaitClientMessage: Unexpected message: ${JSON.stringify(message)}`,\n      )\n    })\n  })\n}\n\n/**\n * Prepare third party auth delegation for transmission via window message channel.\n */\nexport const prepareClientDelegate = (\n  receivedDelegation: SignedDelegation,\n): DfinityAuthClientDelegate => ({\n  delegation: {\n    pubkey: Uint8Array.from(receivedDelegation.delegation.pubkey),\n    expiration: receivedDelegation.delegation.expiration,\n    targets: undefined,\n  },\n  signature: Uint8Array.from(receivedDelegation.signature),\n})\n\n/**\n * Retrieve application metadata provided in the query params\n * @returns application meta data (logo and name)\n */\nexport function getAppMetaFromQuery(): AuthorizingAppMeta {\n  const params = new URLSearchParams(window.location.search)\n  return {\n    name: params.get(\"applicationName\") || undefined,\n    logo: params.get(\"applicationLogo\") || undefined,\n  }\n}\n\nexport const isIdentityClientAuthEvent = (\n  event: unknown,\n): event is MessageEvent<IdentityClientAuthEvent> => {\n  const msg = (event as any).data as unknown\n\n  console.debug(\"isIdentityClientAuthEvent\", { msg })\n\n  if (typeof msg !== \"object\") {\n    return false\n  }\n\n  if (msg === null) {\n    return false\n  }\n\n  // Some extra conversions to take typescript by the hand\n  // eslint-disable-next-line\n  const tmp: {} = msg\n  const obj: Record<string, unknown> = tmp\n\n  if (!hasOwnProperty(obj, \"kind\") || obj.kind !== \"authorize-client\") {\n    return false\n  }\n\n  if (\n    !hasOwnProperty(obj, \"sessionPublicKey\") ||\n    !(obj.sessionPublicKey instanceof Uint8Array)\n  ) {\n    return false\n  }\n\n  const maxTimeToLive = obj.maxTimeToLive\n  if (\n    typeof maxTimeToLive !== \"undefined\" &&\n    typeof maxTimeToLive !== \"bigint\"\n  ) {\n    return false\n  }\n\n  const derivationOrigin = obj.derivationOrigin\n  if (\n    typeof derivationOrigin !== \"undefined\" &&\n    typeof derivationOrigin !== \"string\"\n  ) {\n    return false\n  }\n  return true\n}\n","import { logAuthorizeApplication } from \"frontend/features/stats/services\"\nimport {\n  AuthorizationRequest,\n  AuthorizingAppMeta,\n  ThirdPartyAuthSession,\n} from \"frontend/state/authorization\"\n\nimport {\n  awaitClientMessage,\n  getAppMetaFromQuery,\n  isIdentityClientAuthEvent,\n  postMessageToClient,\n  prepareClientDelegate,\n} from \".\"\nimport { fetchApplication } from \"../identity-manager\"\nimport { validateDerivationOrigin } from \"../internet-identity/validateDerivationOrigin\"\n\n/**\n * xstate service initiating the idp flow via window message channel with the client\n * @returns authorization request\n */\nexport async function handshake(): Promise<AuthorizationRequest> {\n  // FIXME: for the iframe mode to work, we need to send the message\n  // to the parent window after we've called the `authClient.login()`.\n  // Having this interval is the easiest work around for now.\n  const interval = setInterval(\n    () => postMessageToClient({ kind: \"authorize-ready\" }),\n    500,\n  )\n\n  const response = awaitClientMessage(isIdentityClientAuthEvent).then(\n    async (event) => {\n      console.debug(\"handshake\", { event })\n      const validation = await validateDerivationOrigin(\n        event.origin,\n        event.data.derivationOrigin,\n      )\n      console.debug(\"handshake\", {\n        validation,\n        derivationOrigin: event.data.derivationOrigin,\n      })\n      if (validation.result !== \"valid\") throw new Error(validation.message)\n      clearInterval(interval)\n      return {\n        maxTimeToLive: event.data.maxTimeToLive,\n        sessionPublicKey: event.data.sessionPublicKey,\n        derivationOrigin: event.data.derivationOrigin,\n        hostname: event.origin,\n      }\n    },\n  )\n  postMessageToClient({ kind: \"authorize-ready\" })\n  return response\n}\n\n/**\n * xstate service posting third party auth session to the client via window message channel\n * @param context\n * @param event\n * @returns\n */\nexport async function postDelegation(context: {\n  authRequest?: { hostname: string }\n  thirdPartyAuthoSession?: ThirdPartyAuthSession\n  appMeta?: AuthorizingAppMeta\n}) {\n  console.debug(\"postDelegation\")\n  if (!context.authRequest?.hostname)\n    throw new Error(\"postDelegation context.authRequest.hostname missing\")\n  if (!context.thirdPartyAuthoSession)\n    throw new Error(\"postDelegation context.thirdPartyAuthoSession missing\")\n  if (!context.appMeta)\n    throw new Error(\"postDelegation context.appMeta missing\")\n\n  const delegations = [\n    prepareClientDelegate(context.thirdPartyAuthoSession.signedDelegation),\n  ]\n  const userPublicKey = context.thirdPartyAuthoSession.userPublicKey\n\n  logAuthorizeApplication({\n    scope: context.thirdPartyAuthoSession.scope,\n    anchor: context.thirdPartyAuthoSession.anchor,\n    applicationName: context.appMeta.name,\n    chain: \"Internet Computer\",\n  })\n\n  postMessageToClient(\n    {\n      kind: \"authorize-client-success\",\n      delegations,\n      userPublicKey,\n    },\n    context.authRequest.hostname,\n  )\n  window.close()\n  return undefined\n}\n\n/**\n * xstate service retrieving connecting application meta data\n */\nexport async function getAppMeta(): Promise<AuthorizingAppMeta> {\n  const meta = getAppMetaFromQuery()\n  return meta\n}\n\nexport async function checkIsIframe() {\n  try {\n    return window.self !== window.top\n  } catch (e) {\n    return true\n  }\n}\n\ntype CheckIsIframeAllowedParams = {\n  authRequest?: {\n    hostname: string\n    derivationOrigin?: string\n  }\n}\n\nexport async function checkIsIframeAllowed({\n  authRequest: { hostname, derivationOrigin } = {\n    hostname: \"\",\n  },\n}: CheckIsIframeAllowedParams) {\n  console.debug(\"checkIsIframeAllowed\", { hostname, derivationOrigin })\n  if (!hostname)\n    throw new Error(\"checkIsIframeAllowed hostname cannot be empty\")\n\n  const { isIFrameAllowed, domain } = await fetchApplication(\n    derivationOrigin || hostname,\n  )\n  console.debug(\"checkIsIframeAllowed\", { isIFrameAllowed, domain })\n  return isIFrameAllowed\n}\n","import { Principal } from \"@dfinity/principal\"\n\nexport const MAX_ALTERNATIVE_ORIGINS = 10\n\nexport type ValidationResult =\n  | { result: \"valid\" }\n  | { result: \"invalid\"; message: string }\n\nexport const validateDerivationOrigin = async (\n  authRequestOrigin: string,\n  derivationOrigin?: string,\n): Promise<ValidationResult> => {\n  if (\n    derivationOrigin === undefined ||\n    derivationOrigin === authRequestOrigin\n  ) {\n    // this is the default behaviour -> no further validation necessary\n    return { result: \"valid\" }\n  }\n\n  // check format of derivationOrigin\n  const matches = /^https:\\/\\/([\\w-]*)(\\.raw)?\\.ic0\\.app$/.exec(\n    derivationOrigin,\n  )\n  if (matches === null) {\n    return {\n      result: \"invalid\",\n      message:\n        'derivationOrigin does not match regex \"^https:\\\\/\\\\/([\\\\w-]*)(\\\\.raw)?\\\\.ic0\\\\.app$\"',\n    }\n  }\n\n  try {\n    const canisterId = Principal.fromText(matches[1]) // verifies that a valid canister id was matched\n    const alternativeOriginsUrl = `https://${canisterId.toText()}.ic0.app/.well-known/ii-alternative-origins`\n    const response = await fetch(\n      // always fetch non-raw\n      alternativeOriginsUrl,\n      // fail on redirects\n      { redirect: \"error\" },\n    )\n\n    if (response.status !== 200) {\n      return {\n        result: \"invalid\",\n        message: `resource ${alternativeOriginsUrl} returned invalid status: ${response.status}`,\n      }\n    }\n\n    const alternativeOriginsObj = (await response.json()) as {\n      alternativeOrigins: string[]\n    }\n    console.log(\">> \", { alternativeOriginsObj })\n\n    // check for expected property\n    if (!Array.isArray(alternativeOriginsObj?.alternativeOrigins)) {\n      return {\n        result: \"invalid\",\n        message: `resource ${alternativeOriginsUrl} has invalid format: received ${alternativeOriginsObj}`,\n      }\n    }\n\n    // check number of entries\n    if (\n      alternativeOriginsObj.alternativeOrigins.length > MAX_ALTERNATIVE_ORIGINS\n    ) {\n      return {\n        result: \"invalid\",\n        message: `Resource ${alternativeOriginsUrl} has too many entries: To prevent misuse at most ${MAX_ALTERNATIVE_ORIGINS} alternative origins are allowed.`,\n      }\n    }\n\n    // check allowed alternative origins\n    if (!alternativeOriginsObj.alternativeOrigins.includes(authRequestOrigin)) {\n      return {\n        result: \"invalid\",\n        message: `\"${authRequestOrigin}\" is not listed in the list of allowed alternative origins. Allowed alternative origins: ${alternativeOriginsObj.alternativeOrigins}`,\n      }\n    }\n  } catch (e: any) {\n    return {\n      result: \"invalid\",\n      message: `An error occurred while validating the derivationOrigin \"${derivationOrigin}\" for alias domain \"${authRequestOrigin}\": ${e?.message}`,\n    }\n  }\n\n  // all checks passed --> valid\n  return { result: \"valid\" }\n}\n","import { ActorRefFrom, createMachine } from \"xstate\"\n\nimport { getIframeWebauthn } from \"frontend/features/iframe/iframe-trust-device/services\"\nimport { fetchWebAuthnPlatformCapability } from \"frontend/integration/device\"\nimport {\n  registerDeviceWithSecurityKey,\n  registerDeviceWithWebAuthn,\n} from \"frontend/integration/device/services\"\nimport { hasSecurityKeyService } from \"frontend/integration/identity\"\nimport { isDeviceRegistered } from \"frontend/integration/identity-manager/services\"\n\nexport interface Context {\n  isIframe: boolean\n}\n\nexport type Events =\n  | { type: \"TRUST\" }\n  | { type: \"END\" }\n  | { type: \"DONT_TRUST\" }\n  | { type: \"done.invoke.isDeviceRegistered\"; data: boolean }\n  | { type: \"done.invoke.fetchWebAuthnPlatformCapability\"; data: boolean }\n  | { type: \"done.invoke.hasSecurityKey\"; data: boolean }\n  | { type: \"done.invoke.checkIframeSelect\"; data: boolean }\n\nexport const TrustDeviceMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QBUBOBXWAXAImAbgJYDGYAsgIbEAWhAdmAHQDC1YxA1sxQA4UBGhADaEsAT0ZpMWSAGIIAewaN6+BRyaFYeIqQBKYKFpmpIiUDwWxRhJeZAAPRAFYAjADZGATi-uvABgAWV2CAdgBmACZXABoQMUQvAA5I7yD3Z3dw51Ckr2cAXwK4qWwdEnIqWmVWdi5eAWFRCQB1MH4AQXQsajp5JU06NQ1GADMwLBo2zu7e7j5BEXF7S2ssWzp7BIQ8wMYojNdw-2ckwIz3OKcEQPDQ71CfJPSk0MLikFLcAgrKGnomLVOPNGksJABldjoVDNADSYDE-WUqnUTGoFFgkOI0LhCJWVhsdiQjhcHm8vgCwTCUVi8UQrlczlSjzOgTZp38-i8oSKJQwZR+pD+1SYkKE7CwsmQegAquDkPi1ht7NdXKE9gFwq5IklnPkcpFTnFtpFQq5GGz-O5GR4QmyPLzPvzvrpKv9lGKJbIcAB5AByyAA+tK5QriatCZtiar1WktTq9c4DUa6QgAuS7oEku51ZFTeEvI6vuUhVUAYxPcRJQBRP04RWRlWIAC0+X2kSCOVcyTZOdCxsQoQijA7SVc-htAUZRedJbdIsYBiM2DAqCRg2GTHGk2o0y6PToIMWzQb6yJoGuOec3j1gSZuVN+S8A4Q0X8Fsefi1uTV7z50jnYVyyXYxVznFpRF3dp916dcVCGVFGFMZcTHAyC91mKMLAJM8sJJG5MnJPwghCNUaUuVNGRyRhXDyKjaOccJshnADBXnYDDFA1A0J6DCD1kVdUAUVBGB4IQKCwUZhIAWyQziV24tiIN46DMNPZVo0QYJUmSTlx2SLIdVpbYPH8cJGGcO8GTzDxTj-J1WNdIDlBAhSeOoLEcXEeFEUUZEEJGZC1lXZSPKhGFvLxcMcI0i8tLcIjKVIiJogo7Z3DvRhXn8U1gmOO9XiKD46AUCA4HsYs2OcwE2GBBpj3ESRnTMaKlXPfCUhfcdwiSEcvGiZ4zROJJwncFiBScssalq+oFiaRq+N6dT2uuTrU12dtDmOU5zkycaXV+KaarqI95ohcLcW2bC2rw1VogtPVRtCTlQkibIUxM2jUkNB8nnVXN9sAo6WBm06wUYas6AgZbbsQPNUkCdJ+rcBlLJCF8UmvJjcvcTkpwZQGquBoFZtBE9WsbTSEA+wdGP2KJXpSNUsmSQnJvdUUwHFKsYabG5IhfH6Rwyq1RoZIdnjGj5KvZhdXJMXmqdNa9fENLMMvHLIIkF01vFuV7TgLbGIjZw6OcXeTUKU9DVIPRW4up-tKLccy-DzKIkzHSI71N0tzflsDrZ6TyIrEHz7fwpkX1x1I7nCQJImtJlcZG332OUSHoYp3C+Yl7xaKHDLuR8DKuo7e51TOSzkiYgskjT6qI+uZsGS8dtOzNHtziHLrep8TMImcTkcqCIqCiAA */\n  createMachine(\n    {\n      tsTypes: {} as import(\"./trust-device.typegen\").Typegen0,\n      schema: { events: {} as Events, context: {} as Context },\n      id: \"TrustDeviceMachine\",\n      initial: \"CheckCapability\",\n      states: {\n        CheckCapability: {\n          initial: \"Trusted\",\n          states: {\n            Trusted: {\n              invoke: {\n                src: \"isDeviceRegistered\",\n                id: \"isDeviceRegistered\",\n                onDone: [\n                  {\n                    cond: \"bool\",\n                    target: \"#TrustDeviceMachine.End\",\n                  },\n                  {\n                    target: \"WebAuthnPlatformCapability\",\n                  },\n                ],\n              },\n            },\n            WebAuthnPlatformCapability: {\n              invoke: {\n                src: \"fetchWebAuthnPlatformCapability\",\n                id: \"fetchWebAuthnPlatformCapability\",\n                onDone: [\n                  {\n                    cond: \"bool\",\n                    target: \"#TrustDeviceMachine.Select\",\n                  },\n                  {\n                    target: \"SecurityKey\",\n                  },\n                ],\n              },\n            },\n            SecurityKey: {\n              invoke: {\n                src: \"hasSecurityKey\",\n                id: \"hasSecurityKey\",\n                onDone: [\n                  {\n                    cond: \"bool\",\n                    target: \"#TrustDeviceMachine.End\",\n                  },\n                  {\n                    target: \"#TrustDeviceMachine.Select\",\n                  },\n                ],\n              },\n            },\n            End: {\n              type: \"final\",\n            },\n          },\n        },\n        Select: {\n          on: {\n            TRUST: {\n              target: \"CheckIframeSelect\",\n            },\n            DONT_TRUST: {\n              target: \"End\",\n            },\n            END: {\n              target: \"End\",\n            },\n          },\n        },\n        CheckIframeSelect: {\n          invoke: {\n            src: \"checkIframeSelect\",\n            id: \"checkIframeSelect\",\n            onDone: [\n              {\n                cond: \"bool\",\n                target: \"IframeSelect\",\n              },\n              {\n                target: \"Register\",\n              },\n            ],\n          },\n        },\n        IframeSelect: {\n          invoke: {\n            src: \"getIframeWebauthn\",\n            id: \"getIframeWebauthn\",\n            onDone: \"End\",\n          },\n        },\n        Register: {\n          invoke: {\n            src: \"fetchWebAuthnPlatformCapability\",\n            id: \"fetchWebAuthnPlatformCapability\",\n            onDone: [\n              {\n                cond: \"bool\",\n                target: \"RegisterDeviceWithWebAuthn\",\n              },\n              {\n                target: \"RegisterDeviceWithSecurityKey\",\n              },\n            ],\n          },\n        },\n        RegisterDeviceWithWebAuthn: {\n          invoke: {\n            src: \"registerDeviceWithWebAuthn\",\n            id: \"registerDeviceWithWebAuthn\",\n            onDone: [\n              {\n                target: \"End\",\n              },\n            ],\n            onError: [\n              {\n                target: \"RegisterDeviceWithWebAuthn\",\n                internal: false,\n              },\n            ],\n          },\n        },\n        RegisterDeviceWithSecurityKey: {\n          invoke: {\n            src: \"registerDeviceWithSecurityKey\",\n            id: \"regsiterWithSecurityKey\",\n            onDone: [\n              {\n                target: \"End\",\n              },\n            ],\n          },\n        },\n        End: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      services: {\n        isDeviceRegistered: async () => isDeviceRegistered(),\n        fetchWebAuthnPlatformCapability,\n        registerDeviceWithWebAuthn,\n        registerDeviceWithSecurityKey,\n        hasSecurityKey: hasSecurityKeyService,\n        checkIframeSelect: async (context) => context?.isIframe ?? false,\n        getIframeWebauthn,\n      },\n      guards: {\n        bool: (_, event) => event.data,\n      },\n    },\n  )\n\nexport type TrustDeviceActor = ActorRefFrom<typeof TrustDeviceMachine>\n\nexport default TrustDeviceMachine\n","import { WebAuthnIdentity } from \"@dfinity/identity\"\n\nimport { setProfile } from \"@nfid/integration\"\n\nimport { addDeviceToIIandIM } from \"frontend/integration/device/services\"\nimport { ERROR_DEVICE_IN_EXCLUDED_CREDENTIAL_LIST } from \"frontend/integration/identity\"\nimport { fetchProfile } from \"frontend/integration/identity-manager\"\nimport { fetchAuthenticatorDevices } from \"frontend/integration/internet-identity\"\n\nconst handleTrustDevice = async (JSONIdentity: string, isWebAuthN: boolean) => {\n  const profile = await fetchProfile()\n  const identity = WebAuthnIdentity.fromJSON(JSONIdentity)\n\n  try {\n    await addDeviceToIIandIM(identity, BigInt(profile.anchor), !isWebAuthN)\n  } catch (e: any) {\n    console.error(\"registerDeviceWithSecurityKey\", { message: e.message })\n    if (!ERROR_DEVICE_IN_EXCLUDED_CREDENTIAL_LIST.includes(e.message)) {\n      throw e\n    }\n    console.debug(\"registerDeviceWithSecurityKey\", \"device already registered\")\n  }\n}\n\nexport const getIframeWebauthn = async () => {\n  const profile = await fetchProfile()\n  const usersAuthenticatorDevices = await fetchAuthenticatorDevices(\n    BigInt(profile.anchor),\n  )\n\n  const w = window.open(\n    `${NFID_PROVIDER_URL}/iframe/trust-device`,\n    \"iframeTrust\",\n    `toolbar=0,location=0,menubar=0,width=390,height=500,\n    left=${(window.screen.width - 390) / 2},\n    top=${(window.screen.height - 490) / 2}`,\n  )\n\n  if (!w) return\n\n  return new Promise((resolve) => {\n    w?.addEventListener(\"message\", async (e) => {\n      if (!e?.data) return\n      if (\"ready\" in e.data)\n        return w?.postMessage({ devices: usersAuthenticatorDevices })\n\n      if (!(\"isDeviceTrusted\" in e?.data)) return\n\n      if (\"identity\" in e?.data && \"isWebAuthN\" in e?.data) {\n        await handleTrustDevice(e.data.identity, e?.data?.isWebAuthN)\n      }\n\n      if (e.data.isDeviceTrusted) setProfile(profile)\n\n      resolve(false)\n    })\n  })\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\nimport { SDKApplicationMeta } from \"@nfid-frontend/ui\"\n\nimport { ElementProps } from \"frontend/types/react\"\nimport { BlurredLoader } from \"frontend/ui/molecules/blurred-loader\"\n\ninterface AuthorizeRegisterDeciderProps extends ElementProps<HTMLDivElement> {\n  onLogin: () => Promise<void> | void\n  onRegisterPlatformDevice: () => Promise<void>\n  onRegisterSecurityDevice: () => Promise<void>\n  deviceName: string\n  platformAuthenticatorName: string\n  isLoading: boolean\n  isPlatformAuthenticatorAvailable: boolean\n  loadingMessage?: string\n}\n\nexport const AuthorizeRegisterDeciderScreen: React.FC<\n  AuthorizeRegisterDeciderProps\n> = ({\n  isLoading,\n  deviceName,\n  platformAuthenticatorName,\n  isPlatformAuthenticatorAvailable,\n  loadingMessage,\n  onLogin,\n  onRegisterPlatformDevice,\n  onRegisterSecurityDevice,\n}) => {\n  return (\n    <BlurredLoader isLoading={isLoading} loadingMessage={loadingMessage}>\n      <SDKApplicationMeta\n        title=\"Sign in faster on this device\"\n        subTitle={\n          isPlatformAuthenticatorAvailable\n            ? `Trust this ${deviceName}? You can quickly and securely sign in next time using this device's ${platformAuthenticatorName}.`\n            : \"You can quickly and securely sign in next time with a security key if you register one now.\"\n        }\n      />\n      <div className=\"flex flex-col w-full space-y-1 mt-7\">\n        {isPlatformAuthenticatorAvailable ? (\n          <>\n            <DeviceRaw\n              id=\"trust-this-device\"\n              title={\"Trust this device\"}\n              subtitle={`Use ${platformAuthenticatorName} to continue`}\n              handler={onRegisterPlatformDevice}\n            />\n            <DeviceRaw\n              // FIXME: in e2e headless mode, we're not correctly detecting isWebAuthNAvailable\n              // that's why we need to handle this button similar for now\n              id=\"just-log-me-in\"\n              title={\"Don’t trust this device\"}\n              subtitle={\"This device is public or someone else’s\"}\n              handler={onLogin}\n            />\n          </>\n        ) : (\n          <>\n            <DeviceRaw\n              id=\"register-my-security-key\"\n              title={\"Register my security key\"}\n              subtitle={\"Sign in faster with your security key\"}\n              handler={onRegisterSecurityDevice}\n            />\n            <DeviceRaw\n              id=\"just-log-me-in\"\n              title={\"Just log me in\"}\n              subtitle={\"I don’t want to register a security key now\"}\n              handler={onLogin}\n            />\n          </>\n        )}\n      </div>\n    </BlurredLoader>\n  )\n}\n\ninterface DeviceRawProps {\n  id: string\n  title: string\n  subtitle: string\n  handler: () => Promise<void> | void\n}\n\nexport const DeviceRaw: React.FC<DeviceRawProps> = ({\n  title,\n  subtitle,\n  handler,\n  id,\n}) => {\n  return (\n    <div\n      id={id}\n      className={clsx(\n        \"w-full py-[10px] px-4 border border-primaryButtonColor/30 rounded-md\",\n        \"hover:bg-primaryButtonColor/10 hover:border-primaryButtonColor/50 cursor-pointer transition-all\",\n      )}\n      onClick={handler}\n    >\n      <p className=\"text-sm\">{title}</p>\n      <p className=\"mt-0.5 text-xs text-secondary\">{subtitle}</p>\n    </div>\n  )\n}\n","import bowser from \"bowser\"\n\n// TODO: refactor to bowser plugin\nexport const getBrowser = () => {\n  const agent = window.navigator.userAgent.toLowerCase()\n  switch (true) {\n    case agent.indexOf(\"edge\") > -1:\n      return \"Edge\"\n    case agent.indexOf(\"opr\") > -1 && !!(window as any).opr:\n      return \"Opera\"\n    case agent.indexOf(\"chrome\") > -1 && !!(window as any).chrome:\n      return \"Chrome\"\n    case agent.indexOf(\"trident\") > -1:\n      return \"IE\"\n    case agent.indexOf(\"firefox\") > -1:\n      return \"Firefox\"\n    case agent.indexOf(\"safari\") > -1:\n      return \"Safari\"\n    default:\n      return \"Other\"\n  }\n}\n\nexport const getBrowserVersion = () => {\n  const browser = bowser.getParser(window.navigator.userAgent)\n\n  return browser.getBrowser().version\n}\n\nexport const getBrowserName = () => {\n  const browser = bowser.getParser(window.navigator.userAgent)\n\n  return browser.getBrowser().name\n}\n\nexport const isOdd = (num: number) => num % 2 === 1\n\nexport const getUrl = (url: string) => {\n  if (!/^(http|https):\\/\\//.test(url)) {\n    url = `${window.location.protocol}//${url}`\n  }\n\n  return new URL(url)\n}\n\n/**\n * Turn Hello World! into hello-world\n *\n * @export\n * @param {string} str\n */\nexport function slugify(str: string) {\n  return str\n    .toLowerCase()\n    .trim()\n    .replace(/[^\\w\\s-]/g, \"\")\n    .replace(/[\\s_-]+/g, \"-\")\n    .replace(/^-+|-+$/g, \"\")\n}\n"],"names":["createMachine","tsTypes","schema","events","context","id","initial","states","Start","invoke","src","onDone","actions","target","FetchAccounts","on","CREATE_ACCOUNT","SELECT_ACCOUNT","PRESENT_ACCOUNTS","CreateAccount","PresentAccounts","GetDelegation","onError","End","type","data","event","assignUserLimit","assign","accountsLimit","assignAccounts","accounts","handleAccounts","send","accountsAmount","length","console","debug","accountId","services","fetchAccountLimitService","fetchAccountsService","fetchDelegateService","createAccountService","isIframe","Handshake","Fetch","CheckIsIframe","cond","CheckIsIframeAllowed","Error","RETRY","Done","GetAppMeta","AuthenticationMachine","appMeta","authRequest","AuthorizationMachine","authSession","TrustDevice","entry","handshake","getAppMeta","postDelegation","checkIsIframe","checkIsIframeAllowed","TrustDeviceMachine","assignAuthRequest","_","assignAppMeta","assignAuthoSession","thirdPartyAuthoSession","assignError","error","assignIframeNotAllowedError","assignIsIframe","guards","isWebAuthNSupported","isTrue","ErrorBanner","errorMessage","onRetry","className","onClick","AuthorizationCoordinator","actor","state","useActor","React","value","loadingMessage","matches","name","applicationName","applicationLogo","logo","isLoading","onContinueButtonClick","isAuthenticated","map","mapPersonaToLegacy","onLogin","async","onUnlockNFID","onCreateAccount","B","IDPCoordinator","machine","useMachine","IDPMachine","message","children","authenticate","authorize","trustDeviceMachine","TrustDeviceCoordinator","hasPlatformAuthenticator","platform","useDeviceInfo","onRegisterPlatformDevice","onRegisterSecurityDevice","undefined","isPlatformAuthenticatorAvailable","deviceName","device","platformAuthenticatorName","authenticator","logAuthorizeApplication","scope","anchor","application","chain","principal","fetchPrincipal","principalId","toString","url","ic","AWS_AUTH_STATS","response","fetch","method","headers","body","JSON","stringify","ok","text","storeSignIn","billable","blockchainAddress","principalToAddress","opener","window","parent","postMessageToClient","hostname","origin","postMessage","isIdentityClientAuthEvent","msg","obj","hasOwnProperty","kind","sessionPublicKey","Uint8Array","maxTimeToLive","derivationOrigin","interval","setInterval","isExpectedMessage","Promise","res","addEventListener","warn","then","validation","authRequestOrigin","result","exec","alternativeOriginsUrl","Principal","toText","redirect","status","alternativeOriginsObj","json","log","Array","isArray","alternativeOrigins","includes","e","validateDerivationOrigin","clearInterval","delegations","receivedDelegation","signedDelegation","delegation","pubkey","from","expiration","targets","signature","userPublicKey","close","params","URLSearchParams","location","search","get","getAppMetaFromQuery","self","top","isIFrameAllowed","domain","fetchApplication","CheckCapability","Trusted","WebAuthnPlatformCapability","SecurityKey","Select","TRUST","DONT_TRUST","END","CheckIframeSelect","IframeSelect","Register","RegisterDeviceWithWebAuthn","internal","RegisterDeviceWithSecurityKey","isDeviceRegistered","fetchWebAuthnPlatformCapability","registerDeviceWithWebAuthn","registerDeviceWithSecurityKey","hasSecurityKey","hasSecurityKeyService","checkIframeSelect","getIframeWebauthn","profile","fetchProfile","usersAuthenticatorDevices","fetchAuthenticatorDevices","BigInt","w","open","NFID_PROVIDER_URL","screen","width","height","resolve","devices","JSONIdentity","isWebAuthN","identity","WebAuthnIdentity","addDeviceToIIandIM","ERROR_DEVICE_IN_EXCLUDED_CREDENTIAL_LIST","handleTrustDevice","isDeviceTrusted","setProfile","bool","AuthorizeRegisterDeciderScreen","title","subTitle","DeviceRaw","subtitle","handler","clsx","getBrowserName","bowser","navigator","userAgent","getBrowser","getUrl","test","protocol","URL"],"sourceRoot":""}