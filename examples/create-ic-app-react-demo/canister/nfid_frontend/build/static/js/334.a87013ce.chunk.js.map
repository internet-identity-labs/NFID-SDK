{"version":3,"file":"static/js/334.a87013ce.chunk.js","mappings":"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","sources":["ui/pages/new-profile/credentials/add-phone-sms.tsx","apps/identity-manager/profile/credentials/phone-sms.tsx","apps/identity-manager/profile/state.ts","integration/lambda/phone/index.ts","integration/lambda/util/util.ts","ui/atoms/step-input/index.tsx","ui/templates/profile-container/Container.tsx","ui/utils/use-timer.ts","../../../node_modules/@xstate/react/es/useActor.js"],"sourcesContent":["import clsx from \"clsx\"\nimport React from \"react\"\n\nimport { StepInput } from \"frontend/ui/atoms/step-input\"\nimport { P } from \"frontend/ui/atoms/typography/paragraph\"\nimport ProfileContainer from \"frontend/ui/templates/profile-container/Container\"\nimport ProfileTemplate from \"frontend/ui/templates/profile-template/Template\"\nimport { useTimer } from \"frontend/ui/utils/use-timer\"\n\ninterface IProfileAddPhoneSMS {\n  onResendCode: () => void\n  onSubmit: (token: string) => Promise<void>\n  responseError?: string\n  resetResponseError?: () => void\n  isLoading: boolean\n  phone: string | number\n  resendDelay?: number\n}\n\nconst ProfileAddPhoneSMS: React.FC<IProfileAddPhoneSMS> = ({\n  onResendCode,\n  onSubmit,\n  responseError,\n  resetResponseError,\n  isLoading,\n  phone,\n  resendDelay = 60,\n}) => {\n  const { counter, setCounter } = useTimer({ defaultCounter: resendDelay })\n\n  const handleResend = () => {\n    onResendCode && onResendCode()\n    setCounter(resendDelay)\n  }\n\n  return (\n    <ProfileTemplate\n      pageTitle=\"SMS verification\"\n      isLoading={isLoading}\n      showBackButton\n    >\n      <ProfileContainer>\n        <div className=\"text-sm\">\n          <P>Please enter the verification code that was sent to {phone}.</P>\n          <P className=\"mt-3\">\n            {counter > 0 ? (\n              `Code can be resent in ${counter} sec`\n            ) : (\n              <>\n                Didn't receive a code?{\" \"}\n                <span\n                  className=\"cursor-pointer text-blue\"\n                  onClick={handleResend}\n                >\n                  Resend\n                </span>\n              </>\n            )}\n          </P>\n        </div>\n        <div\n          className={clsx(\n            \"mt-5 flex flex-col justify-between flex-1\",\n            \"sm:block\",\n          )}\n        >\n          <StepInput\n            onSubmit={onSubmit}\n            buttonText=\"Complete\"\n            responseError={responseError}\n            resetResponseError={resetResponseError}\n          />\n        </div>\n      </ProfileContainer>\n    </ProfileTemplate>\n  )\n}\n\nexport default ProfileAddPhoneSMS\n","import { useAtom } from \"jotai\"\nimport React from \"react\"\nimport { toast } from \"react-toastify\"\nimport { useProfile } from \"src/integration/identity-manager/queries\"\n\nimport { authState, im } from \"@nfid/integration\"\n\nimport { verifyPhoneNumber } from \"frontend/integration/lambda/phone\"\nimport ProfileAddPhoneSMS from \"frontend/ui/pages/new-profile/credentials/add-phone-sms\"\nimport { useNFIDNavigate } from \"frontend/ui/utils/use-nfid-navigate\"\n\nimport { ProfileConstants } from \"../routes\"\nimport { phoneNumberAtom } from \"../state\"\n\nconst ProfileSMS = () => {\n  const [phone] = useAtom(phoneNumberAtom)\n\n  const [isLoading, toggleLoading] = React.useReducer((s) => !s, false)\n  const [error, setError] = React.useState(\"\")\n  const { navigate } = useNFIDNavigate()\n  const { refreshProfile } = useProfile()\n  const { delegationIdentity } = authState.get()\n\n  const navigateToCredentials = React.useCallback(() => {\n    return navigate(`${ProfileConstants.base}/${ProfileConstants.credentials}`)\n  }, [navigate])\n\n  React.useEffect(() => {\n    if (!phone) navigateToCredentials()\n  }, [navigateToCredentials, phone])\n\n  const handleSubmitSMSToken = React.useCallback(\n    async (token: string) => {\n      toggleLoading()\n      const response = await im.verify_token(token).catch((e) => {\n        throw new Error(`handleSubmitSMSToken im.verify_token: ${e.message}`)\n      })\n      toggleLoading()\n      if (response.status_code >= 200 && response.status_code < 400) {\n        refreshProfile()\n        return navigateToCredentials()\n      }\n      if (response.error.length) setError(response.error[0])\n    },\n    [navigateToCredentials, refreshProfile],\n  )\n\n  const handleResendToken = React.useCallback(async () => {\n    if (!delegationIdentity) throw new Error(\"User delegation is undefined\")\n\n    try {\n      setError(\"\")\n      await verifyPhoneNumber(phone as string, delegationIdentity)\n    } catch (e: any) {\n      console.log({ e })\n      if (e.message) setError(e.message)\n      else {\n        toast.error(\"We were not able to resend code. Please try again\")\n        navigateToCredentials()\n      }\n    }\n  }, [delegationIdentity, navigateToCredentials, phone])\n\n  return (\n    <ProfileAddPhoneSMS\n      phone={phone as string}\n      onSubmit={handleSubmitSMSToken}\n      isLoading={isLoading}\n      responseError={error}\n      onResendCode={handleResendToken}\n      resetResponseError={() => setError(\"\")}\n    />\n  )\n}\n\nexport default ProfileSMS\n","import { atom } from \"jotai\"\n\nexport const phoneNumberAtom = atom<string | null>(null)\n","import { Cbor, QueryFields } from \"@dfinity/agent\"\nimport { IDL } from \"@dfinity/candid\"\nimport { toHexString } from \"@dfinity/candid/lib/cjs/utils/buffer\"\nimport { DelegationIdentity } from \"@dfinity/identity\"\nimport { Principal } from \"@dfinity/principal\"\nimport nacl from \"tweetnacl\"\nimport nacl_util from \"tweetnacl-util\"\n\nimport { ic } from \"@nfid/integration\"\n\nimport { getTransformedRequest } from \"frontend/integration/lambda/util/util\"\n\nif (!VERIFY_PHONE_NUMBER) {\n  throw new Error(`Phone verification lambda is not defined.`)\n}\n\nexport function verifySignature(\n  msg: string,\n  hexSignature: string,\n  principal: Principal,\n) {\n  const signature = Uint8Array.from(\n    (hexSignature.match(/.{1,2}/g) || []).map((byte) => parseInt(byte, 16)),\n  )\n  return nacl.sign.detached.verify(\n    nacl_util.decodeUTF8(msg),\n    signature,\n    principal.toUint8Array(),\n  )\n}\n\n/**\n * Send an SMS token for the user to validate. Associates phone number to principal on success.\n * @param phoneNumber\n * @param principal\n * @returns Empty object on success\n */\nexport async function verifyPhoneNumber(\n  phoneNumber: string,\n  identity: DelegationIdentity,\n): Promise<string> {\n  const url = ic.isLocal ? \"/verify\" : VERIFY_PHONE_NUMBER\n  const trimmed = phoneNumber.replace(/\\s/g, \"\")\n  const fields: QueryFields = {\n    methodName: \"validate_signature\",\n    arg: IDL.encode([IDL.Opt(IDL.Text)], [[trimmed]]),\n  }\n\n  const request: any = await getTransformedRequest(\n    identity,\n    IDENTITY_MANAGER_CANISTER_ID,\n    fields,\n  )\n\n  let body = Cbor.encode(request.body)\n  let str = toHexString(body)\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ message: str }),\n  })\n\n  console.debug(\"verifyPhoneNumber\", {\n    phoneNumber,\n    fields,\n    canister: IDENTITY_MANAGER_CANISTER_ID,\n    response,\n    principal: identity.getPrincipal().toText(),\n  })\n\n  if (!response.ok) {\n    const errorObject = await response.json().then((err) => err)\n    console.log({ errorObject })\n    throw Error(errorObject.error)\n  }\n\n  const data = await response.json()\n\n  return data.phoneNumberEncrypted\n}\n","import { Endpoint, Expiry, QueryFields, ReadRequest } from \"@dfinity/agent\"\nimport { DelegationIdentity } from \"@dfinity/identity\"\nimport { Principal } from \"@dfinity/principal\"\n\nconst DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS = 5 * 60 * 1000\n\nexport async function getTransformedRequest(\n  identity: DelegationIdentity,\n  canisterId: string,\n  fields: QueryFields,\n) {\n  const canister =\n    typeof canisterId === \"string\" ? Principal.fromText(canisterId) : canisterId\n  const sender = identity.getPrincipal()\n  const request = {\n    request_type: \"query\",\n    canister_id: canister,\n    method_name: fields.methodName,\n    arg: fields.arg,\n    sender,\n    ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),\n  } as ReadRequest\n  return await identity.transformRequest({\n    request: {\n      method: \"POST\",\n      headers: Object.assign({ \"Content-Type\": \"application/cbor\" }),\n    },\n    endpoint: \"query\" as Endpoint.Query,\n    body: request,\n  })\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\nimport { useForm } from \"react-hook-form\"\n\nimport { Input, isValidToken, tokenRules } from \"@nfid-frontend/ui\"\n\nimport { Button } from \"../button\"\n\ninterface StepInputProps {\n  className?: string\n  errorClasses?: string\n  responseError?: string\n  resetResponseError?: () => void\n  onSubmit: (value: string) => Promise<void>\n  buttonText?: string\n  buttonClassName?: string\n}\n\nexport const StepInput: React.FC<StepInputProps> = ({\n  className,\n  onSubmit,\n  errorClasses,\n  responseError,\n  resetResponseError,\n  buttonText,\n  buttonClassName,\n}) => {\n  const [isFormValid, setIsFormValid] = React.useState(false)\n  const list = Array.from(Array(6).keys())\n  const inputItemsRef = React.useRef<Array<HTMLInputElement | null>>([])\n  const {\n    formState: { errors },\n    setError,\n    clearErrors,\n    getFieldState,\n  } = useForm<{ verificationCode: string; phonenumber: string }>({\n    mode: \"all\",\n  })\n\n  const getVerificationCode = React.useCallback(\n    () => inputItemsRef.current.map((item) => item?.value).join(\"\"),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [getFieldState(\"verificationCode\")],\n  )\n\n  const handleKeydown = React.useCallback((event: KeyboardEvent) => {\n    if (event.key === \"Backspace\" || event.key === \"Delete\") {\n      const currentFocus = document.activeElement\n      const index = Number(currentFocus?.getAttribute(\"data-pin-index\"))\n\n      if (index && !inputItemsRef.current[index]?.value) {\n        inputItemsRef.current[index - 1]?.focus()\n      }\n    }\n  }, [])\n\n  const handlePaste = React.useCallback(\n    (event: ClipboardEvent) => {\n      const paste = event.clipboardData?.getData(\"text/plain\")\n\n      if (paste && isValidToken(paste)) {\n        inputItemsRef.current.forEach((item, index) => {\n          if (item) {\n            item.value = paste[index]\n            inputItemsRef.current[index]?.blur()\n          }\n        })\n\n        clearErrors(\"verificationCode\")\n      }\n    },\n    [clearErrors],\n  )\n\n  const resetFormErrors = React.useCallback(() => {\n    clearErrors(\"verificationCode\")\n    setIsFormValid(getVerificationCode().length === 6)\n  }, [clearErrors, getVerificationCode])\n\n  const handleInput = (e: { target: HTMLInputElement }, index: number) => {\n    if (resetResponseError && responseError?.length) {\n      resetResponseError()\n      clearErrors(\"verificationCode\")\n    }\n    const validRegex = inputItemsRef.current[index]?.value.match(\n      e.target.pattern,\n    )\n\n    if (validRegex) {\n      if (index === list.length - 1) {\n        inputItemsRef.current[index]?.blur()\n      }\n\n      inputItemsRef.current[index + 1]?.focus()\n    } else {\n      e.target.value = e.target.value[0]\n    }\n\n    setIsFormValid(getVerificationCode().length === 6)\n  }\n\n  React.useEffect(() => {\n    document.addEventListener(\"paste\", handlePaste)\n    document.addEventListener(\"keydown\", handleKeydown)\n\n    return () => {\n      document.removeEventListener(\"paste\", handlePaste)\n    }\n  }, [handleKeydown, handlePaste])\n\n  React.useEffect(() => {\n    if (responseError?.length) {\n      setError(\"verificationCode\", {\n        type: \"manual\",\n        message: responseError,\n      })\n    } else resetFormErrors()\n  }, [resetFormErrors, responseError, setError])\n\n  const validateToken = () => {\n    const verificationCode = getVerificationCode()\n\n    if (verificationCode.length !== tokenRules.minLength) {\n      return setError(\"verificationCode\", {\n        type: \"manual\",\n        message: tokenRules.errorMessages.length,\n      })\n    }\n\n    if (!isValidToken(verificationCode)) {\n      return setError(\"verificationCode\", {\n        type: \"manual\",\n        message: tokenRules.errorMessages.pattern,\n      })\n    }\n\n    clearErrors(\"verificationCode\")\n  }\n\n  const handleSubmit = React.useCallback(() => {\n    if (!isFormValid) return\n    onSubmit(getVerificationCode())\n  }, [getVerificationCode, isFormValid, onSubmit])\n\n  return (\n    <div>\n      <div id=\"pin-input\" className={clsx(\"flex space-x-3\", className)}>\n        {list.map((_, index) => (\n          <Input\n            id={`pin-input-${index}`}\n            pin\n            type=\"number\"\n            key={index}\n            autoFocus={index === 0}\n            data-pin-index={index}\n            ref={(el) => (inputItemsRef.current[index] = el)}\n            onChange={(e) => handleInput(e, index)}\n            maxLength={1}\n            pattern=\"^[0-9]{1}$\"\n            isErrorStyles={!!errors.verificationCode?.message?.length}\n          />\n        ))}\n      </div>\n      <div\n        id=\"pin-input-error\"\n        className={clsx(\"py-1 text-sm text-red-base\", errorClasses)}\n      >\n        {errors.verificationCode?.message || errors.phonenumber?.message}\n      </div>\n      <Button\n        id=\"send-pin\"\n        primary\n        className={clsx(\"px-10 mt-3 sm:mt-5\", buttonClassName)}\n        onClick={() => {\n          validateToken()\n          handleSubmit()\n        }}\n        disabled={!isFormValid}\n      >\n        {buttonText}\n      </Button>\n    </div>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface IProfileContainer {\n  title?: string | React.ReactNode\n  subTitle?: string | React.ReactNode\n  children?: React.ReactNode\n  className?: string\n  showChildrenPadding?: boolean\n  id?: string\n}\n\nconst ProfileContainer: React.FC<IProfileContainer> = ({\n  title,\n  subTitle,\n  children,\n  className,\n  showChildrenPadding = true,\n  id,\n}) => {\n  return (\n    <div\n      id={id}\n      className={clsx(\n        \"block border border-gray-200 rounded-xl\",\n        \"py-4 sm:py-[26px]\",\n        className,\n      )}\n    >\n      <div className=\"px-5\">\n        {title && (\n          <div className=\"flex items-center justify-between mb-3 text-xl\">\n            {title}\n          </div>\n        )}\n        {subTitle && (\n          <div className=\"flex items-center justify-between mb-4 text-sm leading-5 text-secondary\">\n            {subTitle}\n          </div>\n        )}\n      </div>\n\n      <div className={clsx(showChildrenPadding && \"px-5 sm:px-[30px]\")}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileContainer\n","import React from \"react\"\n\ninterface useTimerProps {\n  defaultCounter: number\n  frequency?: number\n  loop?: boolean\n  onElapsed?: () => void\n}\n\nexport const useTimer = ({\n  defaultCounter,\n  loop,\n  frequency = 1000,\n  onElapsed,\n}: useTimerProps) => {\n  const [counter, setCounter] = React.useState(defaultCounter)\n  const timer = React.useRef<NodeJS.Timer>()\n  const [elapsed, setElapsed] = React.useState(false)\n\n  const handleInterval = React.useCallback(() => {\n    if (counter > 0) {\n      setCounter(counter - 1)\n    }\n\n    if (counter === 0) {\n      setElapsed(true)\n      onElapsed && onElapsed()\n      clearInterval(Number(timer.current))\n    }\n\n    if (counter === 0 && loop) {\n      setCounter(defaultCounter)\n      timer.current = setInterval(handleInterval, frequency)\n      setElapsed(false)\n    }\n  }, [counter, defaultCounter, frequency, loop, onElapsed])\n\n  React.useEffect(() => {\n    timer.current = setInterval(handleInterval, frequency)\n    return () => clearInterval(Number(timer.current))\n  }, [frequency, handleInterval])\n\n  return { elapsed, setCounter, counter }\n}\n","import { useRef, useCallback } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport useConstant from './useConstant';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nexport function isActorWithState(actorRef) {\n    return 'state' in actorRef;\n}\nfunction isDeferredActor(actorRef) {\n    return 'deferred' in actorRef;\n}\nfunction defaultGetSnapshot(actorRef) {\n    return 'getSnapshot' in actorRef\n        ? actorRef.getSnapshot()\n        : isActorWithState(actorRef)\n            ? actorRef.state\n            : undefined;\n}\nexport function useActor(actorRef, getSnapshot) {\n    if (getSnapshot === void 0) { getSnapshot = defaultGetSnapshot; }\n    var actorRefRef = useRef(actorRef);\n    var deferredEventsRef = useRef([]);\n    var subscribe = useCallback(function (handleStoreChange) {\n        var unsubscribe = actorRef.subscribe(handleStoreChange).unsubscribe;\n        return unsubscribe;\n    }, [actorRef]);\n    var boundGetSnapshot = useCallback(function () { return getSnapshot(actorRef); }, [\n        actorRef,\n        getSnapshot\n    ]);\n    var storeSnapshot = useSyncExternalStore(subscribe, boundGetSnapshot, boundGetSnapshot);\n    var send = useConstant(function () { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var event = args[0];\n        if (process.env.NODE_ENV !== 'production' && args.length > 1) {\n            console.warn(\"Unexpected payload: \".concat(JSON.stringify(args[1]), \". Only a single event object can be sent to actor send() functions.\"));\n        }\n        var currentActorRef = actorRefRef.current;\n        // If the previous actor is a deferred actor,\n        // queue the events so that they can be replayed\n        // on the non-deferred actor.\n        if (isDeferredActor(currentActorRef) && currentActorRef.deferred) {\n            deferredEventsRef.current.push(event);\n        }\n        else {\n            currentActorRef.send(event);\n        }\n    }; });\n    useIsomorphicLayoutEffect(function () {\n        actorRefRef.current = actorRef;\n        // Dequeue deferred events from the previous deferred actorRef\n        while (deferredEventsRef.current.length > 0) {\n            var deferredEvent = deferredEventsRef.current.shift();\n            actorRef.send(deferredEvent);\n        }\n    }, [actorRef]);\n    return [storeSnapshot, send];\n}\n"],"names":["onResendCode","onSubmit","responseError","resetResponseError","isLoading","phone","resendDelay","counter","setCounter","useTimer","defaultCounter","pageTitle","showBackButton","className","P","onClick","clsx","buttonText","useAtom","phoneNumberAtom","toggleLoading","React","s","error","setError","navigate","useNFIDNavigate","refreshProfile","useProfile","delegationIdentity","authState","navigateToCredentials","ProfileConstants","handleSubmitSMSToken","async","response","im","token","catch","e","Error","message","status_code","length","handleResendToken","verifyPhoneNumber","console","log","toast","atom","VERIFY_PHONE_NUMBER","phoneNumber","identity","url","ic","trimmed","replace","fields","methodName","arg","IDL","request","getTransformedRequest","IDENTITY_MANAGER_CANISTER_ID","body","Cbor","str","toHexString","fetch","method","headers","JSON","stringify","debug","canister","principal","getPrincipal","toText","ok","errorObject","json","then","err","phoneNumberEncrypted","canisterId","Principal","sender","request_type","canister_id","method_name","ingress_expiry","Expiry","transformRequest","Object","assign","endpoint","StepInput","errorClasses","buttonClassName","isFormValid","setIsFormValid","list","Array","from","keys","inputItemsRef","formState","errors","clearErrors","getFieldState","useForm","mode","getVerificationCode","current","map","item","value","join","handleKeydown","event","key","currentFocus","document","activeElement","index","Number","getAttribute","focus","handlePaste","paste","clipboardData","getData","isValidToken","forEach","blur","resetFormErrors","addEventListener","removeEventListener","type","handleSubmit","id","_","pin","autoFocus","ref","el","onChange","match","target","pattern","handleInput","maxLength","isErrorStyles","verificationCode","phonenumber","primary","tokenRules","validateToken","disabled","title","subTitle","children","showChildrenPadding","loop","frequency","onElapsed","timer","elapsed","setElapsed","handleInterval","clearInterval","setInterval","isDeferredActor","actorRef","defaultGetSnapshot","getSnapshot","isActorWithState","state","undefined","useActor","actorRefRef","useRef","deferredEventsRef","subscribe","useCallback","handleStoreChange","unsubscribe","boundGetSnapshot","storeSnapshot","useSyncExternalStore","send","args","_i","arguments","currentActorRef","deferred","push","deferredEvent","shift"],"sourceRoot":""}