{"version":3,"file":"static/js/291.0bcf4ce6.chunk.js","mappings":"yLAsBO,MAAMA,EAA0C,IAQhC,IARiC,gBACtDC,EAAe,UACfC,EAAS,SACTC,EAAQ,QACRC,EAAO,SACPC,EAAQ,UACRC,EAAS,SACTC,GACe,EACf,OACE,iBAAKC,UAAU,uCAAsC,WACnD,4BACE,SAAC,KAAkB,CACjBC,MAAM,YACNC,gBAAgC,OAAfT,QAAe,IAAfA,OAAe,EAAfA,EAAiBU,KAClCC,UACE,SAAC,IAA0B,CAACC,eAA+B,OAAfZ,QAAe,IAAfA,OAAe,EAAfA,EAAiBa,SAGjE,cAAGN,UAAU,iBAAgB,wGAI7B,iBACEA,WAAWO,EAAAA,EAAAA,GACT,uDACA,mCACA,UAEQ,OAATb,QAAS,IAATA,GAAAA,EAAWc,QAAS,cAAGR,UAAU,YAAW,uBAAiB,KAC7DN,EAAUe,KAAKC,IACd,iBAEEV,UAAU,2CAA0C,WAEpD,uCACA,iBAAMA,UAAU,aAAY,SAAEU,EAAOC,WACrC,qCACA,iBAAMX,UAAU,aAAY,SAAEU,EAAOE,UAN/B,WAAUF,EAAOC,aAS1BhB,EAASa,QAAS,cAAGR,UAAU,YAAW,sBAAgB,KAC1DL,EAASc,KAAKC,IACb,iBAEEV,UAAU,2CAA0C,WAEpD,uCACA,iBAAMA,UAAU,aAAY,SAAEU,EAAOC,WACrC,qCACA,iBAAMX,UAAU,aAAY,SAAEU,EAAOE,UAN/B,WAAUF,EAAOC,cAS3B,iBAAKX,UAAU,mBAAkB,WAC/B,iBAAMA,UAAU,qBAAoB,uBACpC,iBAAMA,UAAU,aAAY,SAAEJ,QAEhC,iBAAKI,UAAU,mBAAkB,WAC/B,iBAAMA,UAAU,qBAAoB,wBACpC,iBAAMA,UAAU,aAAY,SAAEH,cAIpC,gBAAKG,UAAU,OAAM,UACnB,iBAAKA,UAAU,uCAAsC,WACnD,SAAC,KAAM,CAACa,KAAK,SAASb,UAAU,SAASc,QAASf,EAAS,qBAG3D,SAAC,KAAM,CAACc,KAAK,UAAUb,UAAU,SAASc,QAAShB,EAAU,4BAK7D,EC/DV,EA1B4D,IAKrD,IAAD,QALuD,QAC3DiB,EAAO,kBACPC,EAAiB,UACjBC,EAAS,SACTC,GACD,EACC,MAAMxB,GAAYyB,EAAAA,EAAAA,UAAQ,KAAO,IAAD,IAC9B,OAAyC,QAAzC,EAAwB,OAAjBH,QAAiB,IAAjBA,GAAuB,QAAN,EAAjBA,EAAmBI,YAAI,WAAN,EAAjB,EAAyB1B,iBAAS,QAAI,EAAE,GAC9C,CAAkB,OAAjBsB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBI,KAAK1B,YAEtBC,GAAWwB,EAAAA,EAAAA,UAAQ,KAAO,IAAD,IAC7B,OAAwC,QAAxC,EAAwB,OAAjBH,QAAiB,IAAjBA,GAAuB,QAAN,EAAjBA,EAAmBI,YAAI,WAAN,EAAjB,EAAyBzB,gBAAQ,QAAI,EAAE,GAC7C,CAAkB,OAAjBqB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBI,KAAKzB,WAE5B,OACE,SAACH,EAAa,CACZC,gBAAiBsB,EACjBjB,UAAWmB,EACXlB,SAAUmB,EACVvB,SAAUA,EACVD,UAAWA,EACXE,QAA0B,OAAjBoB,QAAiB,IAAjBA,GAAuB,QAAN,EAAjBA,EAAmBI,YAAI,WAAN,EAAjB,EAAyBxB,QAClCC,SAA2B,OAAjBmB,QAAiB,IAAjBA,GAAuB,QAAN,EAAjBA,EAAmBI,YAAI,WAAN,EAAjB,EAAyBC,KACnC,C","sources":["features/embed/ui/sign-typed.tsx","features/embed/components/lazy-mint.tsx"],"sourcesContent":["import clsx from \"clsx\"\n\nimport { SDKApplicationMeta, Button } from \"@nfid-frontend/ui\"\n\nimport { RPCApplicationMetaSubtitle } from \"frontend/features/embed-controller/ui/app-meta/subtitle\"\nimport { AuthorizingAppMeta } from \"frontend/state/authorization\"\n\ninterface IObject {\n  account: string\n  value: string\n}\n\ninterface ISignTypedData {\n  applicationMeta: AuthorizingAppMeta\n  royalties: IObject[]\n  creators: IObject[]\n  tokenId: string\n  tokenURI: string\n  onApprove: () => void\n  onCancel: () => void\n}\n\nexport const SignTypedData: React.FC<ISignTypedData> = ({\n  applicationMeta,\n  royalties,\n  creators,\n  tokenId,\n  tokenURI,\n  onApprove,\n  onCancel,\n}: ISignTypedData) => {\n  return (\n    <div className=\"flex flex-col justify-between flex-1\">\n      <div>\n        <SDKApplicationMeta\n          title=\"Signature\"\n          applicationLogo={applicationMeta?.logo}\n          subTitle={\n            <RPCApplicationMetaSubtitle applicationURL={applicationMeta?.url} />\n          }\n        />\n        <p className=\"text-sm my-3.5\">\n          Only sign this message if you fully understand the content and trust\n          the requesting site.\n        </p>\n        <div\n          className={clsx(\n            \"rounded-md bg-gray-50 px-3.5 py-2.5 flex-1 space-y-3\",\n            \"text-gray-500 break-all text-sm\",\n          )}\n        >\n          {royalties?.length ? <p className=\"font-bold\">Royalties</p> : null}\n          {royalties.map((object) => (\n            <div\n              key={`royalty_${object.account}`}\n              className=\"pl-2.5 grid grid-cols-[90px,1fr] gap-2.5\"\n            >\n              <span>Account</span>\n              <span className=\"text-black\">{object.account}</span>\n              <span>Value</span>\n              <span className=\"text-black\">{object.value}</span>\n            </div>\n          ))}\n          {creators.length ? <p className=\"font-bold\">Creators</p> : null}\n          {creators.map((object) => (\n            <div\n              key={`creator_${object.account}`}\n              className=\"pl-2.5 grid grid-cols-[90px,1fr] gap-2.5\"\n            >\n              <span>Account</span>\n              <span className=\"text-black\">{object.account}</span>\n              <span>Value</span>\n              <span className=\"text-black\">{object.value}</span>\n            </div>\n          ))}\n          <div className=\"flex space-x-2.5\">\n            <span className=\"w-[100px] shrink-0\">Token ID</span>\n            <span className=\"text-black\">{tokenId}</span>\n          </div>\n          <div className=\"flex space-x-2.5\">\n            <span className=\"w-[100px] shrink-0\">Token URI</span>\n            <span className=\"text-black\">{tokenURI}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"pt-5\">\n        <div className=\"flex items-center w-full space-x-2.5\">\n          <Button type=\"stroke\" className=\"w-full\" onClick={onCancel}>\n            Cancel\n          </Button>\n          <Button type=\"primary\" className=\"w-full\" onClick={onApprove}>\n            Confirm\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useMemo } from \"react\"\n\nimport { ApproverCmpProps } from \"frontend/features/embed/types\"\n\nimport { SignTypedData } from \"../ui/sign-typed\"\n\nconst MappedLazyMintComponent: React.FC<ApproverCmpProps> = ({\n  appMeta,\n  rpcMessageDecoded,\n  onConfirm,\n  onReject,\n}) => {\n  const royalties = useMemo(() => {\n    return rpcMessageDecoded?.data?.royalties ?? []\n  }, [rpcMessageDecoded?.data.royalties])\n\n  const creators = useMemo(() => {\n    return rpcMessageDecoded?.data?.creators ?? []\n  }, [rpcMessageDecoded?.data.creators])\n\n  return (\n    <SignTypedData\n      applicationMeta={appMeta}\n      onApprove={onConfirm}\n      onCancel={onReject}\n      creators={creators}\n      royalties={royalties}\n      tokenId={rpcMessageDecoded?.data?.tokenId}\n      tokenURI={rpcMessageDecoded?.data?.uri}\n    />\n  )\n}\nexport default MappedLazyMintComponent\n"],"names":["SignTypedData","applicationMeta","royalties","creators","tokenId","tokenURI","onApprove","onCancel","className","title","applicationLogo","logo","subTitle","applicationURL","url","clsx","length","map","object","account","value","type","onClick","appMeta","rpcMessageDecoded","onConfirm","onReject","useMemo","data","uri"],"sourceRoot":""}