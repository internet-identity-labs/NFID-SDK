{"version":3,"file":"static/js/326.7612a03e.chunk.js","mappings":"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","sources":["ui/pages/new-profile/nft-details/assets/transfer.svg","ui/pages/new-profile/nft-details/assets/wallet.svg","ui/pages/new-profile/nft-details/nft-asset.tsx","ui/pages/new-profile/nft-details/index.tsx","integration/cap/fungible-transactions.ts","integration/cap/cap_util.ts","apps/identity-manager/profile/nft-details/utils.ts","apps/identity-manager/profile/nft-details/activity.ts","features/non-fungable-token/eth/get-tokens.ts","features/non-fungable-token/eth/get-polygon-tokens.ts","apps/identity-manager/profile/nft-details/index.tsx","ui/atoms/copy/copied.svg","ui/atoms/copy/copy.svg","ui/atoms/copy/index.tsx","ui/atoms/table/index.tsx","ui/atoms/util/util.tsx","ui/templates/profile-container/Container.tsx"],"sourcesContent":["var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgTransfer(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.55571 1.2231L10.1113 1.2231M10.1113 1.2231L10.1113 6.77867M10.1113 1.2231L1.77792 9.55646\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.88886 11.2222L7.88886 16.7778M7.88886 16.7778L13.4444 16.7778M7.88886 16.7778L16.2222 8.44443\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTransfer);\nexport default __webpack_public_path__ + \"static/media/transfer.aa5aafda7bf79e8e9214195fa4a83b20.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgWallet(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.9375 2.85742L7.0625 2.85744C4.67601 2.85743 3.48277 2.85743 2.74139 3.61059C2 4.36374 2 5.57593 2 8.00029L2 9.71458C2 12.1389 2 13.3511 2.74138 14.1043C3.48277 14.8574 4.67601 14.8574 7.0625 14.8574L10.9375 14.8574C13.324 14.8574 14.5172 14.8574 15.2586 14.1043C16 13.3511 16 12.1389 16 9.71456L16 8.00028C16 5.57591 16 4.36373 15.2586 3.61057C14.5172 2.85742 13.324 2.85742 10.9375 2.85742Z\",\n    stroke: \"#9CA3AF\",\n    strokeWidth: 2\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11 9.16667L11 8.83333C11 8.20479 11 7.89052 11.1953 7.69526C11.3905 7.5 11.7048 7.5 12.3333 7.5L14.4167 7.5C15.0452 7.5 15.3595 7.5 15.5547 7.69526C15.75 7.89052 15.75 8.20479 15.75 8.83333L15.75 9.16667C15.75 9.79521 15.75 10.1095 15.5547 10.3047C15.3595 10.5 15.0452 10.5 14.4167 10.5L12.3333 10.5C11.7048 10.5 11.3905 10.5 11.1953 10.3047C11 10.1095 11 9.79521 11 9.16667Z\",\n    stroke: \"#9CA3AF\",\n    strokeWidth: 2\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgWallet);\nexport default __webpack_public_path__ + \"static/media/wallet.2257d98e066cc3b2ae3269b59e662065.svg\";\nexport { ForwardRef as ReactComponent };","import { DisplayFormat } from \"frontend/integration/entrepot/types\"\n\nexport const NFTAsset = (assetFullsize: {\n  url: string\n  format: DisplayFormat\n}) => {\n  switch (assetFullsize.format) {\n    case \"img\":\n      return (\n        <div\n          id=\"asset-img\"\n          style={{ backgroundImage: `url(${assetFullsize.url})` }}\n          className=\"relative z-20 h-full bg-center bg-no-repeat bg-contain\"\n        />\n      )\n    case \"iframe\":\n      return (\n        <iframe\n          title=\"nft\"\n          frameBorder=\"0\"\n          src={assetFullsize.url}\n          style={{\n            zIndex: \"20\",\n            border: \"none\",\n            height: \"100%\",\n            width: \"100%\",\n            display: \"block\",\n          }}\n        />\n      )\n    case \"video\":\n      return (\n        <video\n          id=\"asset-video\"\n          src={assetFullsize.url}\n          autoPlay\n          controls\n          muted\n        />\n      )\n    default:\n      return (\n        <div\n          id=\"asset-img\"\n          style={{ backgroundImage: `url(${assetFullsize.url})` }}\n          className=\"relative z-20 h-full bg-center bg-no-repeat bg-contain\"\n        />\n      )\n  }\n}\n","import { useActor } from \"@xstate/react\"\nimport clsx from \"clsx\"\nimport { useCallback, useContext } from \"react\"\nimport { trimConcat } from \"src/ui/atoms/util/util\"\n\nimport { Application, getWalletName } from \"@nfid/integration\"\n\nimport { ITransaction } from \"frontend/apps/identity-manager/profile/nft-details/utils\"\nimport { UserNonFungibleToken } from \"frontend/features/non-fungable-token/types\"\nimport { link } from \"frontend/integration/entrepot\"\nimport { ProfileContext } from \"frontend/provider\"\nimport { Copy } from \"frontend/ui/atoms/copy\"\nimport { Loader } from \"frontend/ui/atoms/loader\"\nimport Table from \"frontend/ui/atoms/table\"\nimport ProfileContainer from \"frontend/ui/templates/profile-container/Container\"\nimport ProfileTemplate from \"frontend/ui/templates/profile-template/Template\"\n\nimport TransferIcon from \"./assets/transfer.svg\"\nimport WalletIcon from \"./assets/wallet.svg\"\n\nimport { NFTAsset } from \"./nft-asset\"\n\ninterface IProfileNFTDetails {\n  nft: UserNonFungibleToken\n  isTransactionsFetching?: boolean\n  transactions: ITransaction[]\n  applications: Application[]\n}\n\nexport const ProfileNFTDetailsPage = ({\n  nft,\n  isTransactionsFetching = false,\n  transactions,\n  applications,\n}: IProfileNFTDetails) => {\n  const globalServices = useContext(ProfileContext)\n  const [, send] = useActor(globalServices.transferService)\n\n  const onTransferNFT = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      e.preventDefault()\n\n      send({ type: \"ASSIGN_SELECTED_NFT\", data: nft.tokenId })\n      send({ type: \"CHANGE_TOKEN_TYPE\", data: \"nft\" })\n      send({ type: \"CHANGE_DIRECTION\", data: \"send\" })\n\n      send(\"SHOW\")\n    },\n    [nft, send],\n  )\n\n  return (\n    <ProfileTemplate\n      showBackButton\n      headerMenu={\n        <div className=\"flex items-center space-x-4\">\n          <img\n            className=\"transition-opacity cursor-pointer hover:opacity-50\"\n            src={TransferIcon}\n            alt=\"transfer\"\n            onClick={onTransferNFT}\n          />\n          <Copy\n            value={\n              nft.blockchain === \"Internet Computer\"\n                ? link(nft.collection.id, Number(nft.index))\n                : nft.assetFullsize.url\n            }\n          />\n        </div>\n      }\n      className=\"w-full z-[1]\"\n    >\n      <div\n        className={clsx(\n          \"grid gap-[30px] max-w-[100vw]\",\n          \"grid-cols-1 sm:grid-cols-[auto,1fr]\",\n        )}\n      >\n        <div className=\"relative overflow-hidden bg-gray-50 rounded-xl h-full md:h-[342px] aspect-square\">\n          <div\n            style={{\n              backgroundImage: `url(${nft.assetPreview})`,\n            }}\n            className={clsx(\n              \"bg-cover bg-center bg-no-repeat blur-md brightness-150\",\n              \"h-full absolute z-10 w-full opacity-70\",\n              (nft.assetFullsize.format === \"video\" ||\n                nft.assetFullsize.format === \"iframe\") &&\n                \"hidden\",\n            )}\n          />\n          <NFTAsset\n            url={nft.assetFullsize.url}\n            format={nft.assetFullsize.format}\n          />\n        </div>\n        <div id={trimConcat(\"nft_token_\", nft.name + \"_\" + nft.collection.id)}>\n          <p\n            className=\"font-bold text-blue\"\n            id={trimConcat(\"nft_collection_\", nft.collection.id)}\n          >\n            {nft.collection.name}\n          </p>\n          <p\n            className=\"text-[28px] mt-2.5\"\n            id={trimConcat(\"nft_token_\", nft.name)}\n          >\n            {nft.name}\n          </p>\n          {\"account\" in nft ? (\n            <div className=\"flex items-center mt-4 space-x-2\">\n              <img src={WalletIcon} alt=\"wallet\" />\n              <p\n                className=\"text-sm font-semibold text-secondary\"\n                id={`nft_wallet_${\n                  nft?.walletName === \"NFID\"\n                    ? \"NFIDWallet\"\n                    : nft.walletName?.split(\" \").join(\"\") ??\n                      getWalletName(\n                        applications,\n                        nft.principal.toString(),\n                        nft.account.accountId,\n                      )\n                        .split(\" \")\n                        .join(\"\")\n                }`}\n              >\n                {nft?.walletName === \"NFID\"\n                  ? \"NFID Wallet\"\n                  : nft?.walletName ??\n                    getWalletName(\n                      applications,\n                      nft.principal.toString(),\n                      nft.account.accountId,\n                    )}\n              </p>\n            </div>\n          ) : null}\n          <ProfileContainer title=\"Details\" className=\"mt-6\">\n            <div className=\"mt-5 space-y-4 text-sm\">\n              <div\n                className={clsx(\n                  \"grid grid-cols-1 sm:grid-cols-[100px,1fr] gap-5\",\n                )}\n              >\n                <p className=\"mb-1 text-secondary\">Blockchain</p>\n                <p className={clsx(\"w-full\")} id={\"nft_blockchain_\"}>\n                  {nft.blockchain}\n                </p>\n\n                <p className=\"mb-1 text-secondary\">Standard</p>\n                <p id={\"token-standard\"} className={clsx(\"w-full\")}>\n                  {nft.collection.standard === \"legacy\"\n                    ? \"Legacy EXT\"\n                    : nft.collection.standard}\n                </p>\n\n                <p className=\"mb-1 text-secondary\">NFT ID</p>\n                <p\n                  id={`nft_id_${nft.tokenId.replace(/\\s/g, \"\")}`}\n                  className=\"w-full overflow-hidden\"\n                >\n                  {nft.tokenId}\n                </p>\n\n                <p className=\"mb-1 text-secondary\">Collection ID</p>\n                <p id={\"collection-id\"} className=\"w-full overflow-hidden\">\n                  {nft.contractId}\n                </p>\n              </div>\n            </div>\n          </ProfileContainer>\n        </div>\n      </div>\n      <div className={clsx(\"mt-[30px] max-w-[100vw]\")}>\n        <ProfileContainer title=\"About\">\n          <p id={\"token-about\"} className=\"text-sm\">\n            {nft.collection.description.length\n              ? nft.collection.description\n              : \"No description\"}\n          </p>\n        </ProfileContainer>\n      </div>\n      <div\n        className={clsx(\n          \"w-full\",\n          \"border border-gray-200 rounded-xl\",\n          \"my-[30px]\",\n          !transactions.length && !isTransactionsFetching && \"hidden\",\n        )}\n      >\n        <div\n          className={clsx(\n            \"ml-5 sm:ml-[30px]\",\n            \"mt-4 sm:mt-[26px]\",\n            \"mb-3 text-xl\",\n          )}\n        >\n          Activity\n        </div>\n        <Table\n          headings={[\"Event type\", \"Date and time\", \"From\", \"To\", \"Price\"]}\n          rows={transactions.map((transaction) => ({\n            key: `${transaction.from}${transaction.to}${transaction.datetime}${transaction.type}`,\n            val: Object.values(transaction).map((value, i) => (\n              <span\n                className={clsx(\n                  \"text-sm\",\n                  i === 0 && \"capitalize\",\n                  (i === 1 || i === 4) && \"whitespace-nowrap\",\n                  (i === 2 || i === 3) && \"w-[286px] break-words inline-block\",\n                )}\n              >\n                {value}\n              </span>\n            )),\n          }))}\n        />\n        <div className=\"flex justify-center w-full h-16 py-2\">\n          <Loader fullscreen={false} isLoading={isTransactionsFetching} />\n        </div>\n      </div>\n    </ProfileTemplate>\n  )\n}\n","import { Principal } from \"@dfinity/principal\"\nimport { TransactionPrettified } from \"@psychedelic/cap-js/dist/utils\"\nimport { principalToAddress } from \"ictool\"\n\nimport { getCapRootTransactions } from \"frontend/integration/cap/cap_util\"\n\nimport { Transaction } from \"../rosetta/rosetta_interface\"\nimport { Operation } from \"../rosetta/rosetta_interface\"\n\nexport interface Token {\n  symbol: string\n  canisterId: string\n  name: string\n  decimals: number\n  standard: string\n}\n\nexport const TOKENS = {\n  XTCToken: {\n    symbol: \"XTC\",\n    canisterId: \"aanaa-xaaaa-aaaah-aaeiq-cai\",\n    name: \"Cycles\",\n    decimals: 12,\n    standard: \"xtc\",\n  } as Token,\n  WTC: {\n    symbol: \"WTC\",\n    canisterId: \"5ymop-yyaaa-aaaah-qaa4q-cai\",\n    name: \"Wrapped Cycles\",\n    decimals: 12,\n    standard: \"dip20\",\n  } as Token,\n  WICP: {\n    symbol: \"WICP\",\n    canisterId: \"utozz-siaaa-aaaam-qaaxq-cai\",\n    name: \"Wrapped ICP\",\n    decimals: 8,\n    standard: \"wicp\",\n  } as Token,\n  BTKN: {\n    symbol: \"BTKN\",\n    canisterId: \"cfoim-fqaaa-aaaai-qbcmq-cai\",\n    name: \"Beta Token\",\n    decimals: 8,\n    standard: \"dip20\",\n  } as Token,\n  DUST: {\n    symbol: \"DUST\",\n    canisterId: \"4mvfv-piaaa-aaaak-aacia-cai\",\n    name: \"Dust Token\",\n    decimals: 8,\n    standard: \"dip20\",\n  } as Token,\n}\n\nexport async function getTokenTransactions(\n  token: Token,\n  user: Principal,\n  from: number,\n  to: number,\n): Promise<{ txHistory: Transaction[]; isLastPage: boolean }> {\n  const txs = await getUserTransactions(token.canisterId, user, from, to)\n  return {\n    txHistory: txs.txHistory.map((x) => getTransaction(x, token)),\n    isLastPage: txs.isLastPage,\n  }\n}\n\nexport async function getTokenTransactionHistory(\n  canisterId: string,\n  page: number,\n): Promise<TransactionPrettified[]> {\n  return await getCapRootTransactions(canisterId, page)\n}\n\n/**\n * Function to retrieve transaction history of the principal. Returns array\n * of transactions and isLastPage boolean\n * @param canisterId\n * @param user\n * @param from\n * @param to\n */\nexport async function getUserTransactions(\n  canisterId: string,\n  user: Principal,\n  from: number,\n  to: number,\n): Promise<{ txHistory: TransactionPrettified[]; isLastPage: boolean }> {\n  let address = principalToAddress(user as any)\n  let transactionHistory = await Promise.all(\n    Array.from(Array(to).keys())\n      .slice(from, to)\n      .map(async (page) => {\n        let allHistory = await getCapRootTransactions(canisterId, page)\n        let txHistory = allHistory.filter(\n          (l) =>\n            l.details.from.toString() === address ||\n            l.details.to.toString() === address,\n        )\n        return { txHistory, isLastPage: allHistory.length === 0 }\n      }),\n  )\n  return transactionHistory.reduce((x, y) => {\n    return {\n      txHistory: x.txHistory.concat(y.txHistory),\n      isLastPage: x.isLastPage || y.isLastPage,\n    }\n  })\n}\n\n/**\n * Function to retrieve transaction history of the token. Returns array\n * of transactions and isLastPage boolean\n * @param canisterId\n * @param tokenId\n * @param from\n * @param to\n */\nexport async function getTokenTxHistoryOfTokenIndex(\n  canisterId: string,\n  tokenId: string,\n  from: number,\n  to: number,\n): Promise<{ txHistory: TransactionPrettified[]; isLastPage: boolean }> {\n  let transactionHistory = await Promise.all(\n    Array.from(Array(to).keys())\n      .slice(from, to)\n      .map(async (page) => {\n        let allHistory = await getCapRootTransactions(canisterId, page)\n        let txHistory = allHistory.filter((l) => l.details.token === tokenId)\n        return { txHistory, isLastPage: allHistory.length === 0 }\n      }),\n  )\n  return transactionHistory.reduce((x, y) => {\n    return {\n      txHistory: x.txHistory.concat(y.txHistory),\n      isLastPage: x.isLastPage || y.isLastPage,\n    }\n  })\n}\n\nfunction getOperation(\n  type: string,\n  status: string,\n  address: string,\n  amount: string,\n  symbol: string,\n  decimals: number,\n): Operation {\n  return {\n    operationIdentifier: {\n      index: 0,\n    },\n    type: type,\n    status: status,\n    account: {\n      address: address,\n    },\n    amount: {\n      value: amount,\n      currency: {\n        symbol: symbol,\n        decimals: decimals,\n      },\n    },\n  }\n}\n\nfunction lebDecode(pipe: any): bigint {\n  let weight = BigInt(1)\n  let value = BigInt(0)\n  let byte\n  do {\n    if (pipe.length < 1) {\n      throw new Error(\"unexpected end of buffer\")\n    }\n    byte = pipe[0]\n    pipe = pipe.slice(1)\n    value += BigInt(byte & 0x7f).valueOf() * weight\n    weight *= BigInt(128)\n  } while (byte >= 0x80)\n  return value\n}\n\nfunction getTransaction(tx: TransactionPrettified, token: Token): Transaction {\n  const amount = lebDecode(tx.details.amount).toString()\n  return {\n    blockIdentifier: {\n      index: 0,\n      hash: \"\",\n    },\n    transaction: {\n      transactionIdentifier: {\n        hash: \"\",\n      },\n      operations: [\n        getOperation(\n          tx.operation,\n          tx.details.status.toString(),\n          tx.details.from.toString(),\n          amount,\n          token.symbol,\n          token.decimals,\n        ),\n        getOperation(\n          tx.operation,\n          tx.details.status.toString(),\n          tx.details.to.toString(),\n          amount,\n          token.symbol,\n          token.decimals,\n        ),\n        getOperation(\n          tx.operation,\n          tx.details.status.toString(),\n          tx.details.from.toString(),\n          lebDecode(tx.details.fee).toString(),\n          token.symbol,\n          token.decimals,\n        ),\n      ],\n      metadata: {\n        blockHeight: 0,\n        memo: 0,\n        timestamp: Number(tx.time),\n      },\n    },\n  }\n}\n","import { Principal } from \"@dfinity/principal\"\nimport {\n  CapRoot,\n  CapRouter,\n  prettifyCapTransactions,\n} from \"@psychedelic/cap-js\"\nimport { TransactionPrettified } from \"@psychedelic/cap-js/dist/utils\"\n\nconst MAIN_NET = \"https://ic0.app\"\n\nexport async function getCapRootTransactions(\n  canisterId: string,\n  page: number,\n): Promise<TransactionPrettified[]> {\n  return CapRouter.init({})\n    .then((capRouter) =>\n      capRouter.get_token_contract_root_bucket({\n        tokenId: Principal.fromText(canisterId) as any,\n      }),\n    )\n    .then((rootBucket) => {\n      if (typeof rootBucket.canister[0] === \"undefined\") {\n        throw Error(`Psychedelic error. No root bucket for ${canisterId}`)\n      }\n      return rootBucket.canister[0].toText()\n    })\n    .then((capCanister) =>\n      CapRoot.init({ host: MAIN_NET, canisterId: capCanister }),\n    )\n    .then((capRoot) => capRoot.get_transactions({ page }))\n    .then((l) => l.data.map((event: any) => prettifyCapTransactions(event)))\n}\n","import { TransactionPrettified } from \"@psychedelic/cap-js\"\nimport { format } from \"date-fns\"\n\nexport interface ITransaction {\n  from: string\n  to: string\n  datetime: string\n  type: string\n  price?: string\n}\n\nexport const mapTransactionsForUI = (transactions: TransactionPrettified[]) => {\n  return transactions.map((transaction) => {\n    const details = transaction.details\n    return {\n      type: transaction.operation,\n      datetime: format(\n        new Date(Number(transaction.time)),\n        \"MMM dd, yyyy - hh:mm:ss aaa\",\n      ),\n      from: transaction.from || \"\",\n      to: transaction.to || \"\",\n      price:\n        details?.price && details?.price_currency && details?.price_decimals\n          ? `${Number(details.price) / 10 ** Number(details.price_decimals)} ${\n              details.price_currency\n            }`\n          : \"\",\n    }\n  })\n}\n","import { format, parse } from \"date-fns\"\nimport React, { useState } from \"react\"\nimport { getPolygonTokenActivity } from \"src/features/non-fungable-token/eth/get-polygon-tokens\"\n\nimport { getETHTokenActivity } from \"frontend/features/non-fungable-token/eth/get-tokens\"\nimport { UserNonFungibleToken } from \"frontend/features/non-fungable-token/types\"\nimport { getTokenTxHistoryOfTokenIndex } from \"frontend/integration/cap/fungible-transactions\"\n\nimport { ITransaction, mapTransactionsForUI } from \"./utils\"\n\nconst ACTIVITY_TARGET = 5\n\nexport const useNFTActivity = (nft?: UserNonFungibleToken) => {\n  const [NFTActivity, setNFTActivity] = useState<ITransaction[]>([])\n  const [isActivityFetching, setIsActivityFetching] = useState<boolean>(true)\n\n  const fetchICTokenHistory = React.useCallback(\n    async (i: number) => {\n      if (!nft?.contractId || !nft?.tokenId) return\n      let result\n\n      try {\n        result = await getTokenTxHistoryOfTokenIndex(\n          nft?.contractId,\n          nft?.tokenId,\n          i * 10 - 10,\n          i * 10,\n        )\n        console.debug(`fetchTokenHistory_${i}`, { result, NFTActivity })\n      } catch (e) {\n        console.error(\"fetchTokenHistory\", e)\n      }\n\n      if (!result) {\n        setIsActivityFetching(false)\n        return\n      }\n\n      const prettifiedTransactions = mapTransactionsForUI(result.txHistory)\n      prettifiedTransactions.length &&\n        setNFTActivity(NFTActivity.concat(prettifiedTransactions))\n\n      if (!result.isLastPage && NFTActivity.length < ACTIVITY_TARGET)\n        fetchICTokenHistory(i + 1)\n      else setIsActivityFetching(false)\n    },\n    [NFTActivity, nft?.contractId, nft?.tokenId],\n  )\n\n  const fetchETHTokenHistory = React.useCallback(async () => {\n    if (!nft?.contractId || !nft?.tokenId) return\n\n    const transactions = await getETHTokenActivity(\n      nft.contractId,\n      nft.tokenId,\n      ACTIVITY_TARGET,\n    )\n\n    setNFTActivity(\n      transactions.activities.map(\n        (t) =>\n          ({\n            type: t.type,\n            datetime: format(new Date(t.date), \"MMM dd, yyyy - hh:mm:ss aaa\"),\n            from: t.from,\n            to: t.to,\n            price: t.price ? `${t.price} ETH` : \"\",\n          } as ITransaction),\n      ),\n    )\n    setIsActivityFetching(false)\n  }, [nft?.contractId, nft?.tokenId])\n  //WIP have to be moved to connector layer\n  const fetchPolygonTokenHistory = React.useCallback(async () => {\n    if (!nft?.contractId || !nft?.tokenId) return\n    const transactions = await getPolygonTokenActivity(\n      nft.contractId,\n      nft.tokenId,\n      ACTIVITY_TARGET,\n    )\n    setNFTActivity(\n      transactions.activities.map(\n        (t) =>\n          ({\n            type: t.type,\n            datetime: format(new Date(t.date), \"MMM dd, yyyy - hh:mm:ss aaa\"),\n            from: t.from,\n            to: t.to,\n            price: t.price ? `${t.price} MATIC` : \"\",\n          } as ITransaction),\n      ),\n    )\n    setIsActivityFetching(false)\n  }, [nft])\n\n  React.useEffect(() => {\n    if (NFTActivity.length) return\n\n    if (nft?.blockchain === \"Internet Computer\") fetchICTokenHistory(1)\n    if (nft?.blockchain === \"Ethereum Goerli\") fetchETHTokenHistory()\n    if (nft?.blockchain === \"Polygon Mumbai\") fetchPolygonTokenHistory()\n  }, [\n    NFTActivity.length,\n    fetchICTokenHistory,\n    fetchETHTokenHistory,\n    fetchPolygonTokenHistory,\n    nft?.blockchain,\n  ])\n\n  const transactions = React.useMemo(() => {\n    return NFTActivity.sort(\n      (a, b) =>\n        parse(b.datetime, \"MMM dd, yyyy - hh:mm:ss aaa\", new Date()).getTime() -\n        parse(a.datetime, \"MMM dd, yyyy - hh:mm:ss aaa\", new Date()).getTime(),\n    )\n  }, [NFTActivity])\n\n  return {\n    transactions,\n    isActivityFetching,\n  }\n}\n","import { ethereumGoerliAsset } from \"@nfid/integration\"\n\nexport const getETHTokenActivity = async (\n  contract: string,\n  tokenId: string,\n  size?: number,\n) => {\n  return await ethereumGoerliAsset.getActivitiesByItem({\n    contract: contract,\n    tokenId: tokenId,\n    size: size,\n  })\n}\n","import { polygonMumbaiAsset } from \"@nfid/integration\"\n\n//WIP have to be moved to connector layer\nexport const getPolygonTokenActivity = async (\n  contract: string,\n  tokenId: string,\n  size?: number,\n) => {\n  return await polygonMumbaiAsset.getActivitiesByItem({\n    contract: contract,\n    tokenId: tokenId,\n    size: size,\n  })\n}\n","import React from \"react\"\nimport { useLocation } from \"react-router-dom\"\n\nimport { UserNonFungibleToken } from \"frontend/features/non-fungable-token/types\"\nimport { useApplicationsMeta } from \"frontend/integration/identity-manager/queries\"\nimport { Loader } from \"frontend/ui/atoms/loader\"\nimport { ProfileNFTDetailsPage } from \"frontend/ui/pages/new-profile/nft-details\"\nimport ProfileTemplate from \"frontend/ui/templates/profile-template/Template\"\n\nimport { useNFTActivity } from \"./activity\"\n\nconst ProfileNFTDetails = () => {\n  const location = useLocation()\n  const state = location.state as { nft?: UserNonFungibleToken }\n  const applications = useApplicationsMeta()\n\n  const nft = React.useMemo(() => {\n    return state?.nft\n  }, [state?.nft])\n\n  const { transactions, isActivityFetching } = useNFTActivity(nft)\n\n  if (!nft)\n    return (\n      <ProfileTemplate pageTitle=\"Fetching NFT...\">\n        <Loader isLoading={true} />\n      </ProfileTemplate>\n    )\n\n  return (\n    <ProfileNFTDetailsPage\n      nft={nft}\n      isTransactionsFetching={isActivityFetching}\n      transactions={transactions}\n      applications={applications.applicationsMeta || []}\n    />\n  )\n}\n\nexport default ProfileNFTDetails\n","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCopied(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_26143_35839)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.6296 7H8.36986C7.61331 7 7 7.62175 7 8.38871L7.00054 15.6113C7.00054 16.3783 7.61384 17 8.3704 17L15.6301 17C16.3867 17 17 16.3783 17 15.6113L16.9997 14\",\n    stroke: \"#10B981\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10 11.5L12.3028 13.6622C12.5023 13.8495 12.8152 13.8417 13.0051 13.6447L17 9.5\",\n    stroke: \"#10B981\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.5 11.4993H2.66667C2.22464 11.4993 1.80072 11.3238 1.48816 11.0112C1.17559 10.6986 1 10.2747 1 9.83268V2.66667C1 2.22464 1.17559 1.80072 1.48816 1.48816C1.80072 1.17559 2.22464 1 2.66667 1L9.83268 1C10.2747 1 10.6986 1.17559 11.0112 1.48816C11.3238 1.80072 11.4993 2.22464 11.4993 2.66667V3.5\",\n    stroke: \"#10B981\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_26143_35839\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18,\n    height: 18,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopied);\nexport default __webpack_public_path__ + \"static/media/copied.7db236d4ed9a8d82463d41f442395067.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCopy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_399_379)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.6296 7H8.36986C7.61331 7 7 7.62175 7 8.38871L7.00054 15.6113C7.00054 16.3783 7.61384 17 8.3704 17L15.6301 17C16.3867 17 17 16.3783 17 15.6113L16.9995 8.38871C16.9995 7.62175 16.3862 7 15.6296 7Z\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.5 11.4993H2.66667C2.22464 11.4993 1.80072 11.3238 1.48816 11.0112C1.17559 10.6986 1 10.2747 1 9.83268V2.66667C1 2.22464 1.17559 1.80072 1.48816 1.48816C1.80072 1.17559 2.22464 1 2.66667 1L9.83268 1C10.2747 1 10.6986 1.17559 11.0112 1.48816C11.3238 1.80072 11.4993 2.22464 11.4993 2.66667V3.5\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_399_379\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18,\n    height: 18,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.fa74bb78f3023163889b69dafbaee228.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from \"clsx\"\nimport React from \"react\"\n\n\nimport { Tooltip } from \"@nfid-frontend/ui\"\n\nimport { ElementProps } from \"frontend/types/react\"\n\nimport CopiedIcon from \"./copied.svg\"\nimport CopyIcon from \"./copy.svg\"\n\ninterface ICopy extends ElementProps<HTMLDivElement> {\n  value: string\n}\n\nexport const Copy: React.FC<ICopy> = ({ value, className }) => {\n  const [copied, setCopied] = React.useState(false)\n\n  const copyToClipboard = React.useCallback(() => {\n    setCopied(true)\n    navigator.clipboard.writeText(value)\n    setTimeout(() => {\n      setCopied(false)\n    }, 2000)\n  }, [value])\n\n  return (\n    <div\n      className={clsx(\n        !copied && \"hover:opacity-50 cursor-pointer transition-opacity\",\n        className,\n      )}\n    >\n      <Tooltip tip=\"Copy\">\n        <img\n          className=\"w-full\"\n          onClick={copyToClipboard}\n          src={copied ? CopiedIcon : CopyIcon}\n          alt=\"copy\"\n        />\n      </Tooltip>\n    </div>\n  )\n}\n","import clsx from \"clsx\"\nimport React, { ReactNode } from \"react\"\nimport { BsArrowDown } from \"react-icons/bs\"\n\ninterface TableData {\n  headings: string[]\n  rows: { val: React.ReactNode[]; key: string }[]\n  sort?: string[]\n  reverse?: boolean\n  handleHeaderClick?: (col: string) => void\n}\n\nexport const TableWrapper: React.FC<{ children: React.ReactElement }> = ({\n  children,\n}) => <div className={clsx(\"overflow-x-scroll\")}>{children}</div>\n\nexport const TableBase: React.FC<{\n  children: ReactNode[] | ReactNode\n  className?: string\n}> = ({ children, className }) => (\n  <table\n    className={clsx(\n      \"w-full text-left min-w-[640px]\",\n      className ?? \"table-auto\",\n    )}\n  >\n    {children}\n  </table>\n)\n\nexport const TableHead: React.FC<{\n  headings: string[]\n  sort?: string[]\n  reverse?: boolean\n  handleHeaderClick?: (col: string) => void\n}> = ({ sort, reverse, headings, handleHeaderClick }) => (\n  <thead className=\"contents\">\n    <tr className={clsx(`border-b border-gray-900`)}>\n      {headings.map((heading, i) => (\n        <th\n          className={clsx(\n            \"h-16 px-3\",\n            i === 0 && \"pl-[30px]\",\n            i === heading.length - 1 && \"pr-[30px]\",\n            sort?.includes(heading) && \"cursor-pointer hover:bg-gray-100\",\n          )}\n          key={`heading${heading}`}\n          onClick={() => handleHeaderClick && handleHeaderClick(heading)}\n        >\n          <div\n            className={clsx(\n              `flex h-full gap-2 items-center group whitespace-nowrap`,\n            )}\n          >\n            {heading}\n            {sort?.[0] === heading && (\n              <BsArrowDown className={clsx(reverse && `rotate-180`)} />\n            )}\n            {sort?.includes(heading) && sort?.[0] !== heading && (\n              <div className={clsx(`invisible group-hover:visible`)}>\n                <BsArrowDown />\n              </div>\n            )}\n          </div>\n        </th>\n      ))}\n    </tr>\n  </thead>\n)\n\nexport const TableBody: React.FC<{\n  rows: { val: React.ReactNode[]; key: string }[]\n  headings: string[]\n}> = ({ rows, headings }) => (\n  <tbody>\n    {rows.map((row, j) => (\n      <tr key={`row${row.key}`} className={clsx(`border-b border-grey-200`)}>\n        {row.val.map((cell, i) => (\n          <td\n            className={clsx(\n              \"h-[85px] px-3\",\n              i === 0 && \"pl-[30px]\",\n              i === row.val.length - 1 && \"pr-[30px]\",\n            )}\n            key={`row${row.key}cell${headings[i]}`}\n          >\n            {cell}\n          </td>\n        ))}\n      </tr>\n    ))}\n  </tbody>\n)\n\nexport default function Table({\n  headings,\n  rows,\n  sort,\n  reverse,\n  handleHeaderClick,\n}: TableData) {\n  return (\n    <TableWrapper>\n      <TableBase>\n        <TableHead\n          headings={headings}\n          sort={sort}\n          reverse={reverse}\n          handleHeaderClick={handleHeaderClick}\n        />\n        <TableBody rows={rows} headings={headings} />\n      </TableBase>\n    </TableWrapper>\n  )\n}\n","export function trimConcat(y: string, x: string) {\n  return y + x.replace(/\\s|#/g, \"\")\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface IProfileContainer {\n  title?: string | React.ReactNode\n  subTitle?: string | React.ReactNode\n  children?: React.ReactNode\n  className?: string\n  showChildrenPadding?: boolean\n  id?: string\n}\n\nconst ProfileContainer: React.FC<IProfileContainer> = ({\n  title,\n  subTitle,\n  children,\n  className,\n  showChildrenPadding = true,\n  id,\n}) => {\n  return (\n    <div\n      id={id}\n      className={clsx(\n        \"block border border-gray-200 rounded-xl\",\n        \"py-4 sm:py-[26px]\",\n        className,\n      )}\n    >\n      <div className=\"px-5\">\n        {title && (\n          <div className=\"flex items-center justify-between mb-3 text-xl\">\n            {title}\n          </div>\n        )}\n        {subTitle && (\n          <div className=\"flex items-center justify-between mb-4 text-sm leading-5 text-secondary\">\n            {subTitle}\n          </div>\n        )}\n      </div>\n\n      <div className={clsx(showChildrenPadding && \"px-5 sm:px-[30px]\")}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileContainer\n"],"names":["NFTAsset","assetFullsize","format","id","style","backgroundImage","url","className","title","frameBorder","src","zIndex","border","height","width","display","autoPlay","controls","muted","ProfileNFTDetailsPage","nft","isTransactionsFetching","transactions","applications","globalServices","useContext","ProfileContext","send","useActor","transferService","onTransferNFT","useCallback","e","preventDefault","type","data","tokenId","showBackButton","headerMenu","TransferIcon","alt","onClick","C","value","blockchain","link","collection","Number","index","clsx","assetPreview","trimConcat","name","WalletIcon","walletName","split","join","getWalletName","principal","toString","account","accountId","standard","replace","contractId","description","length","headings","rows","map","transaction","key","from","to","datetime","val","Object","values","i","fullscreen","isLoading","async","getTokenTxHistoryOfTokenIndex","canisterId","transactionHistory","Promise","all","Array","keys","slice","allHistory","page","CapRouter","then","capRouter","get_token_contract_root_bucket","Principal","rootBucket","canister","Error","toText","capCanister","CapRoot","host","capRoot","get_transactions","l","event","prettifyCapTransactions","getCapRootTransactions","txHistory","filter","details","token","isLastPage","reduce","x","y","concat","useNFTActivity","NFTActivity","setNFTActivity","useState","isActivityFetching","setIsActivityFetching","fetchICTokenHistory","React","result","console","debug","error","prettifiedTransactions","operation","Date","time","price","price_currency","price_decimals","mapTransactionsForUI","fetchETHTokenHistory","contract","size","ethereumGoerliAsset","getETHTokenActivity","activities","t","date","fetchPolygonTokenHistory","polygonMumbaiAsset","getPolygonTokenActivity","sort","a","b","parse","getTime","state","useLocation","useApplicationsMeta","applicationsMeta","pageTitle","Copy","copied","setCopied","copyToClipboard","navigator","clipboard","writeText","setTimeout","tip","CopiedIcon","CopyIcon","TableWrapper","children","TableBase","TableHead","reverse","handleHeaderClick","heading","includes","TableBody","row","j","cell","Table","subTitle","showChildrenPadding"],"sourceRoot":""}