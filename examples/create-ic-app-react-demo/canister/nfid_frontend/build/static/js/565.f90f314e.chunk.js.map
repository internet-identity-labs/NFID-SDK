{"version":3,"file":"static/js/565.f90f314e.chunk.js","mappings":"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","sources":["ui/connnector/non-fungible-asset-screen/non-fungible-asset.ts","ui/connnector/non-fungible-asset-screen/util/util.ts","ui/connnector/non-fungible-asset-screen/eth/ethereum-nft-asset.ts","ui/connnector/non-fungible-asset-screen/polygon/polygon-nft-asset.ts","ui/connnector/non-fungible-asset-screen/non-fungible-asset-factory.ts","apps/identity-manager/profile/assets/hooks.ts","ui/connnector/non-fungible-asset-screen/hooks/use-nft-token.ts","integration/identity-manager/account/utils.ts","features/fungable-token/accumulate-app-account-balances.ts","features/fungable-token/eth/hooks/use-eth-exchange-rate.ts","features/fungable-token/icp/hooks/use-balance-icp-all.ts","integration/rosetta/index.ts","integration/rosetta/get-exchange-rate.ts","features/fungable-token/icp/hooks/use-icp-exchange-rate.ts","ui/connnector/fungible-asset-screen/fungible-asset.ts","ui/connnector/fungible-asset-screen/util/util.ts","ui/connnector/fungible-asset-screen/btc/btc-asset.ts","ui/connnector/fungible-asset-screen/eth/erc20-asset.ts","ui/connnector/fungible-asset-screen/eth/eth-asset.ts","ui/connnector/fungible-asset-screen/polygon/erc20-asset.ts","ui/connnector/fungible-asset-screen/polygon/matic-asset.ts","ui/connnector/fungible-asset-screen/fungible-asset-factory.ts","ui/connnector/fungible-asset-screen/hooks/use-token-config.ts","ui/connnector/fungible-asset-screen/ic/hooks/use-icp.ts","features/fungable-token/use-all-token.ts","integration/entrepot/lib.ts","integration/entrepot/mapper.ts","integration/entrepot/index.ts","ui/atoms/center-ellipsis/index.tsx","ui/connnector/cache.ts","ui/connnector/connector-factory.ts","ui/connnector/types.ts","../../../packages/ui/src/molecules/toggle-button/index.tsx","features/transfer-modal/hooks/use-token-options.ts","features/transfer-modal/utils/map-balances-to-options.ts","../../../packages/utils/src/lib/array.ts","features/transfer-modal/hooks/use-wallets-options.ts","features/transfer-modal/components/receive.tsx","features/transfer-modal/utils/transform-to-address.ts","features/transfer-modal/utils/validations.ts","features/transfer-modal/components/send-ft.tsx","features/transfer-modal/utils/map-nfts-to-options.ts","features/transfer-modal/hooks/use-nfts-options.ts","features/transfer-modal/components/send-nft.tsx","features/transfer-modal/components/success.tsx","features/transfer-modal/constants.tsx","features/transfer-modal/coordinator.tsx","apps/identity-manager/profile/send-receive-button/send_receive.svg","apps/identity-manager/profile/send-receive-button/index.tsx","ui/atoms/images/logo/logo-text.tsx","ui/atoms/images/logo/index.tsx","ui/organisms/profile-header/assets/menu.svg","ui/organisms/profile-sidebar/sidebar-item.tsx","ui/organisms/profile-sidebar/index.tsx","ui/organisms/profile-header/index.tsx","ui/templates/profile-template/Template.tsx","../../../packages/utils/src/lib/string.ts"],"sourcesContent":["import { DelegationIdentity } from \"@dfinity/identity\"\nimport { NonFungibleItem } from \"packages/integration/src/lib/asset/types\"\nimport { UserNonFungibleToken } from \"src/features/non-fungable-token/types\"\nimport { getWalletDelegation } from \"src/integration/facade/wallet\"\nimport { fetchProfile } from \"src/integration/identity-manager\"\nimport { toUserNFT } from \"src/ui/connnector/non-fungible-asset-screen/util/util\"\nimport {\n  AssetFilter,\n  Blockchain,\n  INonFungibleAssetConnector,\n  NftConnectorConfig,\n} from \"src/ui/connnector/types\"\n\nimport { loadProfileFromLocalStorage } from \"@nfid/integration\"\n\nexport abstract class NonFungibleAssetConnector<T extends NftConnectorConfig>\n  implements INonFungibleAssetConnector\n{\n  protected config: T\n\n  constructor(config: T) {\n    this.config = config\n  }\n\n  async getNonFungibleItems(\n    assetFilter: AssetFilter[],\n  ): Promise<Array<UserNonFungibleToken>> {\n    const identities = await this.getIdentity(\n      assetFilter.map((filter) => filter.principal),\n    )\n    let nfts: UserNonFungibleToken[] = []\n\n    await Promise.all(\n      identities.map(async (identity) => {\n        const items = await this.config.assetService.getItemsByUser({\n          identity,\n        })\n        const userNFTS = items.items.map((nft: NonFungibleItem) =>\n          toUserNFT(nft, identity.getPrincipal(), this.config),\n        )\n        nfts = [...nfts, ...userNFTS]\n      }),\n    )\n    return nfts\n  }\n\n  getTokenStandard(): Blockchain {\n    return this.config.blockchain\n  }\n\n  protected getIdentity = async (\n    filterPrincipals: string[],\n  ): Promise<DelegationIdentity[]> => {\n    const profile = loadProfileFromLocalStorage() ?? (await fetchProfile())\n    const identity = await getWalletDelegation(profile.anchor, \"nfid.one\", \"0\")\n    return !filterPrincipals.length ||\n      filterPrincipals.includes(identity.getPrincipal().toString())\n      ? [identity]\n      : []\n  }\n\n  getCacheTtl(): number {\n    return 30\n  }\n}\n","import { Principal } from \"@dfinity/principal\"\nimport { NonFungibleItem } from \"packages/integration/src/lib/asset/types\"\nimport { UserNonFungibleToken } from \"src/features/non-fungable-token/types\"\nimport { NftConnectorConfig } from \"src/ui/connnector/types\"\n\nimport { MaticSvg } from \"@nfid-frontend/ui\"\n\nexport function toUserNFT(\n  nft: NonFungibleItem,\n  principal: Principal,\n  conf: NftConnectorConfig,\n): UserNonFungibleToken {\n  return {\n    account: {\n      domain: \"nfid.one\",\n      label: \"account 1\",\n      accountId: \"0\",\n    },\n    assetFullsize: {\n      url: nft.image.length === 0 ? conf.defaultLogo : nft.image,\n      format: \"img\",\n    },\n    assetPreview: nft?.thumbnail || MaticSvg,\n    blockchainLogo: conf.defaultLogo,\n    // @ts-ignore\n    blockchain: conf.blockchain,\n    collection: {\n      description: nft.description,\n      id: nft.collection || \"N/A\",\n      name: nft.contractName || \"N/A\",\n      standard: nft.tokenType,\n    },\n    clipboardText: nft.image,\n    contractId: nft.contract || \"N/A\",\n    index: nft.id,\n    name: nft.title,\n    principal: principal,\n    tokenId: nft.tokenId || \"N/A\",\n  }\n}\n","import { NonFungibleAssetConnector } from \"src/ui/connnector/non-fungible-asset-screen/non-fungible-asset\"\nimport { Blockchain, NftConnectorConfig } from \"src/ui/connnector/types\"\n\nimport { IconPngEthereum } from \"@nfid-frontend/ui\"\nimport { ethereumAsset } from \"@nfid/integration\"\n\nexport class EthereumNftConnector extends NonFungibleAssetConnector<NftConnectorConfig> {}\n\nexport const ethereumNftConnector = new EthereumNftConnector({\n  blockchain: Blockchain.ETHEREUM,\n  defaultLogo: IconPngEthereum,\n  assetService: ethereumAsset,\n})\n","import { NonFungibleAssetConnector } from \"src/ui/connnector/non-fungible-asset-screen/non-fungible-asset\"\nimport { Blockchain, NftConnectorConfig } from \"src/ui/connnector/types\"\n\nimport { MaticSvg } from \"@nfid-frontend/ui\"\nimport { polygonAsset } from \"@nfid/integration\"\n\nexport class PolygonNftConnector extends NonFungibleAssetConnector<NftConnectorConfig> {}\n\nexport const polygonNftConnector = new PolygonNftConnector({\n  blockchain: Blockchain.POLYGON,\n  defaultLogo: MaticSvg,\n  assetService: polygonAsset,\n})\n","import { UserNonFungibleToken } from \"src/features/non-fungable-token/types\"\nimport { ConnectorFactory } from \"src/ui/connnector/connector-factory\"\nimport { ethereumNftConnector } from \"src/ui/connnector/non-fungible-asset-screen/eth/ethereum-nft-asset\"\nimport { NonFungibleAssetConnector } from \"src/ui/connnector/non-fungible-asset-screen/non-fungible-asset\"\nimport { polygonNftConnector } from \"src/ui/connnector/non-fungible-asset-screen/polygon/polygon-nft-asset\"\nimport {\n  AssetFilter,\n  Blockchain,\n  NftConnectorConfig,\n} from \"src/ui/connnector/types\"\n\nexport class NftFactory extends ConnectorFactory<\n  Blockchain,\n  NonFungibleAssetConnector<NftConnectorConfig>\n> {\n  getNFToken = async (\n    blockchain: Blockchain,\n    assetFilters: AssetFilter[],\n  ): Promise<Array<UserNonFungibleToken>> => {\n    return this.process(blockchain, [assetFilters])\n  }\n\n  getCacheKey(key: Blockchain, functionToCall: Function, args: any[]): string {\n    return (\n      functionToCall.name +\n      key +\n      (args[0]! as AssetFilter[]).reduce(\n        (acc, { principal }) => `${acc}${principal}`,\n        \"\",\n      )\n    )\n  }\n\n  getFunctionToCall(\n    connector: NonFungibleAssetConnector<NftConnectorConfig>,\n  ): Function {\n    return connector.getNonFungibleItems\n  }\n}\n\nexport const nftFactory = new NftFactory([\n  polygonNftConnector,\n  ethereumNftConnector,\n])\n","import { decodeTokenIdentifier } from \"ictool\"\nimport React from \"react\"\nimport ICPLogo from \"src/assets/dfinity.svg\"\nimport { useNFTConfig } from \"src/ui/connnector/non-fungible-asset-screen/hooks/use-nft-token\"\nimport { nftFactory } from \"src/ui/connnector/non-fungible-asset-screen/non-fungible-asset-factory\"\nimport { AssetFilter } from \"src/ui/connnector/types\"\nimport useSWR from \"swr\"\n\nimport { getWalletName } from \"@nfid/integration\"\n\nimport {\n  collection,\n  link,\n  principalTokens,\n  token,\n  tokens,\n} from \"frontend/integration/entrepot\"\nimport { useApplicationsMeta } from \"frontend/integration/identity-manager/queries\"\nimport { useAllPrincipals } from \"frontend/integration/internet-identity/queries\"\n\nexport function useNFT(tokenId: string) {\n  const { canister } = decodeTokenIdentifier(tokenId)\n  const _collection = useSWR(\n    `collection/${canister}`,\n    () => collection(canister),\n    {\n      dedupingInterval: 60_000 * 5,\n      focusThrottleInterval: 60_000 * 5,\n      revalidateIfStale: false,\n    },\n  )\n\n  const _tokens = useSWR(\n    _collection.data ? `collection/${canister}/tokens` : null,\n    () => {\n      if (!_collection.data) throw new Error(\"unreachable\")\n      return tokens(_collection.data)\n    },\n    {\n      dedupingInterval: 60_000 * 5,\n      focusThrottleInterval: 60_000 * 5,\n      revalidateIfStale: false,\n    },\n  )\n\n  return useSWR(\n    _collection.data && _tokens.data ? `token/${tokenId}` : null,\n    () => {\n      if (!_collection.data || !_tokens.data) throw new Error(\"unreachable\")\n      const { index } = decodeTokenIdentifier(tokenId)\n      return token(_collection.data, _tokens.data, index)\n    },\n    {\n      dedupingInterval: 60_000 * 5,\n      focusThrottleInterval: 60_000 * 5,\n      revalidateIfStale: false,\n    },\n  )\n}\n\nexport const useAllNFTs = (assetFilter?: AssetFilter[]) => {\n  const supportedBlockchains = nftFactory.getKeys()\n  const { configs: tokens } = useNFTConfig({\n    assetFilters: assetFilter ?? [],\n    blockchains: supportedBlockchains,\n  })\n  const { principals } = useAllPrincipals()\n  const { applicationsMeta } = useApplicationsMeta()\n  const { data, isLoading, isValidating } = useSWR(\n    principals ? [principals, \"userTokens\"] : null,\n    ([principals]) => principalTokens(principals),\n    {\n      dedupingInterval: 60_000 * 5,\n      focusThrottleInterval: 60_000 * 5,\n      revalidateIfStale: false,\n    },\n  )\n\n  const nfts = React.useMemo(() => {\n    if (!data || !applicationsMeta) return []\n\n    return data\n      .map(({ principal, account, collection, index, ...rest }) => ({\n        principal,\n        account,\n        walletName: getWalletName(\n          applicationsMeta,\n          principal.toString(),\n          account.accountId,\n        ),\n        contractId: rest.canisterId,\n        owner: principal?.toText(),\n        clipboardText: link(collection.id, Number(index)),\n        collection,\n        index,\n        blockchainLogo: ICPLogo,\n        ...rest,\n      }))\n      .filter((nft) =>\n        !assetFilter?.length\n          ? true\n          : !!assetFilter.find((f) => f.principal === nft.principal.toString()),\n      )\n      .concat(tokens as any)\n  }, [data, applicationsMeta, assetFilter, tokens])\n  return { nfts, isLoading: isLoading || isValidating }\n}\n","import { nftFactory } from \"src/ui/connnector/non-fungible-asset-screen/non-fungible-asset-factory\"\nimport useSWR from \"swr\"\n\nimport { AssetFilter, Blockchain } from \"../../types\"\n\ntype UseTokenConfig = {\n  assetFilters: AssetFilter[]\n  blockchains: Blockchain[]\n}\n\nexport const useNFTConfig = ({ assetFilters, blockchains }: UseTokenConfig) => {\n  const { data: configs, ...rest } = useSWR(\n    [blockchains, assetFilters, \"useNftConfig\"],\n    ([blockchains, assetFilters]) =>\n      Promise.all(\n        blockchains.map(async (blockchain) => {\n          try {\n            return await nftFactory.getNFToken(blockchain, assetFilters)\n          } catch (e) {\n            console.error(\"useNftConfig\", e)\n            return []\n          }\n        }),\n      ),\n  )\n\n  return { configs: configs?.flat() || [], ...rest }\n}\n","import { Account, Application } from \"@nfid/integration\"\n\nexport const isDefaultLabel = (a: string) =>\n  /^Account #\\d*$/.test(a) || a === undefined || a === \"\"\n\nexport const getWalletName = (account: Account, application?: Application) => {\n  const accountLabel = isDefaultLabel(account.label)\n    ? `account ${Number(account.accountId) + 1}`\n    : account.label\n\n  const applicationName =\n    application?.name || account.alias?.[0] || account.domain\n\n  return `${applicationName} ${accountLabel}`\n}\n","import { Principal } from \"@dfinity/principal\"\nimport { principalToAddress } from \"ictool\"\nimport {\n  AppBalance,\n  TokenBalanceSheet,\n} from \"packages/integration/src/lib/asset/types\"\n\nimport { Application, Balance } from \"@nfid/integration\"\n\nimport { AccountBalance } from \"frontend/features/fungable-token/fetch-balances\"\nimport { isDefaultLabel } from \"frontend/integration/identity-manager/account/utils\"\nimport {\n  e8sICPToString,\n  stringICPtoE8s,\n} from \"frontend/integration/wallet/utils\"\n\nexport const sumE8sICPString = (a: string, b: string) => {\n  return e8sICPToString(stringICPtoE8s(a) + stringICPtoE8s(b))\n}\n\nexport const toUSD = (value: number, exchangeRate: number) =>\n  exchangeRate !== 0 ? `$${(exchangeRate * value).toFixed(2)}` : ``\n\ntype MapApplicationBalanceArgs = {\n  toPresentation: (value?: bigint) => number\n  appName: string\n  currentAppTotalBalance: Balance\n  token: string\n  accountBalance: AccountBalance\n  exchangeRate: number\n  applicationMatch?: Application\n  currentApp?: AppBalance\n  isExplicitlyIncluded?: boolean\n}\n\nfunction mapApplicationBalance({\n  toPresentation,\n  appName,\n  currentAppTotalBalance,\n  token,\n  accountBalance,\n  exchangeRate,\n  applicationMatch,\n  currentApp,\n  isExplicitlyIncluded,\n}: MapApplicationBalanceArgs): AppBalance {\n  return {\n    icon: applicationMatch?.icon,\n    appName: appName,\n    tokenBalance: currentAppTotalBalance,\n    accounts: [\n      ...(currentApp?.accounts ?? []),\n      ...(accountBalance.balance[token] > 0 || isExplicitlyIncluded\n        ? [\n            {\n              accountName:\n                isDefaultLabel(accountBalance.account.label) ||\n                !accountBalance.account.label\n                  ? `account ${parseInt(accountBalance.account.accountId) + 1}`\n                  : accountBalance.account.label,\n              principalId: accountBalance.principalId,\n              address: principalToAddress(\n                Principal.fromText(accountBalance.principalId),\n              ),\n              tokenBalance: accountBalance.balance[token],\n              usdBalance: toUSD(\n                toPresentation(accountBalance.balance[token]),\n                exchangeRate,\n              ),\n            },\n          ]\n        : []),\n    ].sort((a, b) => a.accountName.localeCompare(b.accountName)),\n  }\n}\n\ntype ReduceRawToAppAccountBalanceArgs = {\n  toPresentation: (value?: bigint) => number\n  balances: AccountBalance[]\n  applications?: Application[]\n  exchangeRate: number\n  excludeEmpty: boolean\n  includeEmptyApps: string[]\n  label: string\n  token: string\n  icon: string\n}\n/**\n * Returns the balance sheet for all applications and their accounts\n *\n * @param balances - balance of a single account\n * @param applications - list of applications from identity manager\n * @param exchangeRate - exchange rate of Token to USD\n * @param excludeEmpty - if true, exclude applications with no balance\n * @param includeEmptyApps - include apps with given appName or domain even if their balance is 0\n */\nexport const accumulateAppAccountBalance = ({\n  toPresentation,\n  balances,\n  applications = [],\n  exchangeRate,\n  excludeEmpty,\n  includeEmptyApps,\n  label,\n  token,\n  icon,\n}: ReduceRawToAppAccountBalanceArgs): TokenBalanceSheet => {\n  return balances.reduce<TokenBalanceSheet>(\n    (acc, rawBalance) => {\n      const applicationMatch: Application | undefined = applications.find(\n        (a) => a.domain === rawBalance.account.domain,\n      )\n\n      const appName = applicationMatch\n        ? applicationMatch.name\n        : rawBalance.account.domain\n\n      const currentApp: AppBalance | undefined = acc.applications[appName]\n\n      const totalBalanceValue = acc.tokenBalance + rawBalance.balance[acc.token]\n\n      const currentAppTotalBalance =\n        (acc.applications[appName]?.tokenBalance || BigInt(0)) +\n        rawBalance.balance[acc.token]\n\n      const isExplicitlyIncluded =\n        includeEmptyApps.includes(applicationMatch?.domain || \"\") ||\n        includeEmptyApps.includes(applicationMatch?.name || \"\")\n\n      if (\n        excludeEmpty &&\n        !isExplicitlyIncluded &&\n        currentAppTotalBalance === BigInt(0)\n      )\n        return acc\n\n      return {\n        ...acc,\n        icon: acc.icon,\n        tokenBalance: totalBalanceValue,\n        usdBalance: toUSD(toPresentation(totalBalanceValue), exchangeRate),\n        applications: {\n          ...acc.applications,\n          [appName]: mapApplicationBalance({\n            toPresentation,\n            appName,\n            currentAppTotalBalance,\n            token: acc.token,\n            accountBalance: rawBalance,\n            exchangeRate,\n            applicationMatch,\n            currentApp,\n            isExplicitlyIncluded,\n          }),\n        },\n      }\n    },\n    {\n      label,\n      token,\n      icon,\n      tokenBalance: BigInt(0),\n      usdBalance: \"0\",\n      applications: {},\n    },\n  )\n}\n","import { useMemo } from \"react\"\nimport useSWR from \"swr\"\n\nconst COINBASE_RATES_URL = `https://api.coinbase.com/v2/exchange-rates`\nconst NOT_AVAILABLE = \"\"\nconst DEFAULT_EXCHANGE_RATES = [\"ICP\", \"ETH\", \"BTC\"]\nexport interface IRate {\n  [currency: string]: number\n}\n\nexport const useExchangeRates = (tokens = DEFAULT_EXCHANGE_RATES) => {\n  const { data: prices, ...rest } = useSWR(\"exchangeRates\", () =>\n    fetch(COINBASE_RATES_URL).then((res) => res.json()),\n  )\n\n  const rates: IRate = useMemo(() => {\n    if (!prices?.data || !tokens) return {}\n\n    return tokens.reduce((acc, token, index) => {\n      const priceInToken = prices?.data?.rates[token]\n      const priceInUsd = priceInToken\n        ? (1 / priceInToken).toFixed(2)\n        : NOT_AVAILABLE\n\n      acc[token] = Number(parseFloat(priceInUsd).toFixed(2))\n      return acc\n    }, {} as IRate)\n  }, [prices, tokens])\n\n  return { rates, prices, ...rest }\n}\n","import { TokenBalanceSheet } from \"packages/integration/src/lib/asset/types\"\nimport React from \"react\"\n\nimport { toPresentation } from \"@nfid/integration/token/icp\"\n\nimport ICP from \"frontend/assets/dfinity.svg\"\nimport { useApplicationsMeta } from \"frontend/integration/identity-manager/queries\"\nimport { AssetFilter } from \"frontend/ui/connnector/types\"\n\nimport { accumulateAppAccountBalance } from \"../../accumulate-app-account-balances\"\nimport { useAllDip20Token } from \"../../dip-20/hooks/use-all-token-meta\"\nimport { useICPExchangeRate } from \"./use-icp-exchange-rate\"\nimport { useUserBalances } from \"./use-user-balances\"\n\ntype AppAccountBalanceByToken = {\n  [token: string]: TokenBalanceSheet\n}\n\ntype UseBalanceICPAllReturn = {\n  isLoading: boolean\n  appAccountBalance?: AppAccountBalanceByToken\n}\n\n/**\n * returns map of applications and there accumulated balance across all accounts\n *\n * @param excludeEmpty only include applications with non zero balance\n */\nexport const useBalanceICPAll = (\n  excludeEmpty: boolean = true,\n  assetFilters?: AssetFilter[],\n): UseBalanceICPAllReturn => {\n  const { applicationsMeta: applications } = useApplicationsMeta()\n  const { exchangeRate, isValidating: isLoadingICPExchangeRate } =\n    useICPExchangeRate()\n  const { token: dip20Token } = useAllDip20Token()\n\n  const { balances, isLoading: isLoadingBalances } = useUserBalances()\n  console.debug(\"useUserBalances\", { icpBalance: balances })\n\n  const appAccountBalance = React.useMemo(() => {\n    if (\n      isLoadingICPExchangeRate ||\n      isLoadingBalances ||\n      !exchangeRate ||\n      !balances\n    ) {\n      return\n    }\n\n    return {\n      ICP: accumulateAppAccountBalance({\n        balances: assetFilters?.length\n          ? balances.filter((b) =>\n              assetFilters?.find((f) => f.principal === b.principal.toString()),\n            )\n          : balances,\n        applications,\n        exchangeRate,\n        excludeEmpty,\n        includeEmptyApps: [\"nfid.one\", \"https://nns.ic0.app\"],\n        label: \"Internet Computer\",\n        token: \"ICP\",\n        icon: ICP,\n        toPresentation,\n      }),\n      ...(dip20Token\n        ? dip20Token.reduce(\n            (acc, { symbol, name, logo, toPresentation }) => ({\n              ...acc,\n              [symbol]: accumulateAppAccountBalance({\n                toPresentation,\n                balances: assetFilters?.length\n                  ? balances.filter((b) =>\n                      assetFilters?.find(\n                        (f) => f.principal === b.principal.toString(),\n                      ),\n                    )\n                  : balances,\n                applications,\n                icon: logo,\n                exchangeRate: symbol === \"WICP\" ? exchangeRate : 0,\n                excludeEmpty,\n                includeEmptyApps: [\"nfid.one\", \"https://nns.ic0.app\"],\n                label: name,\n                token: symbol,\n              }),\n            }),\n            {},\n          )\n        : {}),\n    }\n  }, [\n    isLoadingICPExchangeRate,\n    isLoadingBalances,\n    exchangeRate,\n    balances,\n    assetFilters,\n    applications,\n    excludeEmpty,\n    dip20Token,\n  ])\n\n  console.debug(\"useBalanceICPAll\", {\n    isLoadingICPExchangeRate,\n    isLoadingPrincipals: isLoadingBalances,\n    exchangeRate,\n    applicationsMeta: applications,\n    appAccountBalance,\n    balanceICPRaw: balances,\n  })\n\n  return {\n    isLoading: isLoadingBalances || isLoadingICPExchangeRate,\n    appAccountBalance,\n  }\n}\n","export const converter = `https://free.currconv.com/api/v7/convert?q=XDR_USD&compact=ultra&apiKey=${\n  CURRCONV_TOKEN ?? \"df6440fc0578491bb13eb2088c4f60c7\"\n}`\n","import { cyclesMinter, restCall } from \"@nfid/integration\"\n\nimport { XdrUsd } from \"frontend/integration/rosetta/rosetta_interface\"\n\nimport { converter } from \"./index\"\n\nexport async function mapToXdrUsd(response: Response): Promise<XdrUsd> {\n  return response.json().then((data) => data as XdrUsd)\n}\n\nexport async function getExchangeRate(): Promise<number> {\n  let xdrToIcp = await cyclesMinter\n    .get_icp_xdr_conversion_rate()\n    .then((x) => x.data.xdr_permyriad_per_icp)\n    .catch((e) => {\n      throw Error(`CyclesMinter failed!: ${e}`, e)\n    })\n  let xdrToUsd: XdrUsd = await restCall(\"GET\", converter)\n    .then(mapToXdrUsd)\n    .catch((e) => {\n      throw Error(`free.currconv.com failed!: ${e}`, e)\n    })\n  return (parseFloat(xdrToUsd.XDR_USD) * Number(xdrToIcp)) / 10000\n}\n","import useSWR from \"swr\"\n\nimport { getExchangeRate } from \"frontend/integration/rosetta/get-exchange-rate\"\n\nexport const useICPExchangeRate = () => {\n  const { data: exchangeRate, ...rest } = useSWR(\n    \"walletExchangeRate\",\n    getExchangeRate,\n    {\n      dedupingInterval: 60_000 * 60,\n      focusThrottleInterval: 60_000 * 60,\n      refreshInterval: 60_000 * 60,\n    },\n  )\n  return {\n    exchangeRate,\n    ...rest,\n  }\n}\n","import { DelegationIdentity } from \"@dfinity/identity\"\nimport { getWalletDelegation } from \"src/integration/facade/wallet\"\nimport { fetchProfile } from \"src/integration/identity-manager\"\nimport {\n  AssetErc20Config,\n  AssetFilter,\n  AssetNativeConfig,\n  IFungibleAssetConnector,\n  TokenConfig,\n} from \"src/ui/connnector/types\"\n\nimport { loadProfileFromLocalStorage } from \"@nfid/integration\"\nimport { TokenStandards } from \"@nfid/integration/token/types\"\n\nexport abstract class FungibleAssetConnector<\n  T extends AssetNativeConfig | AssetErc20Config,\n> implements IFungibleAssetConnector\n{\n  protected config: T\n\n  constructor(config: T) {\n    this.config = config\n  }\n\n  async getTokenConfigs(\n    assetFilter: AssetFilter[],\n  ): Promise<Array<TokenConfig>> {\n    const identity = await this.getIdentity(\n      assetFilter.map((filter) => filter.principal),\n    )\n    return identity.length === 0 ? [] : this.getAccounts(identity)\n  }\n\n  abstract getAccounts(\n    identity: DelegationIdentity[],\n  ): Promise<Array<TokenConfig>>\n\n  getTokenStandard(): TokenStandards {\n    return this.config.tokenStandard\n  }\n\n  protected getIdentity = async (\n    filterPrincipals?: string[],\n  ): Promise<DelegationIdentity[]> => {\n    const profile = loadProfileFromLocalStorage() ?? (await fetchProfile())\n    const identity = await getWalletDelegation(profile.anchor, \"nfid.one\", \"0\")\n\n    return !filterPrincipals?.length ||\n      filterPrincipals?.includes(identity.getPrincipal().toString())\n      ? [identity]\n      : []\n  }\n\n  getCacheTtl(): number {\n    return 30\n  }\n}\n","import { TokenBalanceSheet } from \"packages/integration/src/lib/asset/types\"\nimport { stringICPtoE8s } from \"src/integration/wallet/utils\"\nimport {\n  AssetErc20Config,\n  AssetNativeConfig,\n  TokenConfig,\n} from \"src/ui/connnector/types\"\n\nimport { toPresentation } from \"@nfid/integration/token/icp\"\n\nexport function toNativeTokenConfig(\n  config: AssetNativeConfig,\n  tokenSheet: TokenBalanceSheet,\n): TokenConfig {\n  return {\n    icon: config.icon,\n    tokenStandard: config.tokenStandard,\n    title: config.title,\n    currency: config.feeCurrency,\n    balance: tokenSheet?.tokenBalance,\n    price: tokenSheet?.usdBalance,\n    fee: BigInt(tokenSheet?.fee ?? 0),\n    toPresentation,\n    transformAmount: stringICPtoE8s,\n    blockchain: config.blockchain,\n  }\n}\n\nexport function erc20ToTokenConfig(\n  config: AssetErc20Config,\n  tokenSheet: TokenBalanceSheet,\n): TokenConfig {\n  return {\n    tokenStandard: config.tokenStandard,\n    icon: tokenSheet.icon,\n    title: tokenSheet.label,\n    currency: tokenSheet.token,\n    balance: tokenSheet.tokenBalance,\n    price: tokenSheet.usdBalance,\n    blockchain: config.blockchain,\n    fee: BigInt(0),\n    toPresentation,\n    transformAmount: stringICPtoE8s,\n    feeCurrency: config.feeCurrency,\n    contract: tokenSheet.contract,\n  }\n}\n","import { DelegationIdentity } from \"@dfinity/identity\"\nimport { btcAsset } from \"packages/integration/src/lib/bitcoin-wallet/btc-asset\"\nimport { FungibleAssetConnector } from \"src/ui/connnector/fungible-asset-screen/fungible-asset\"\nimport { toNativeTokenConfig } from \"src/ui/connnector/fungible-asset-screen/util/util\"\nimport {\n  AssetNativeConfig,\n  Blockchain,\n  NativeToken,\n  TokenConfig,\n} from \"src/ui/connnector/types\"\n\nimport { IconSvgBTC } from \"@nfid-frontend/ui\"\nimport { TokenStandards } from \"@nfid/integration/token/types\"\n\nexport class BtcAssetConnector extends FungibleAssetConnector<AssetNativeConfig> {\n  async getAccounts(\n    identity: DelegationIdentity[],\n  ): Promise<Array<TokenConfig>> {\n    return btcAsset.getRootAccount(identity[0], IconSvgBTC).then((token) => {\n      return [toNativeTokenConfig(this.config, token)]\n    })\n  }\n}\n\nexport const btcAssetConnector = new BtcAssetConnector({\n  icon: IconSvgBTC,\n  tokenStandard: TokenStandards.BTC,\n  title: \"Bitcoin\",\n  feeCurrency: NativeToken.BTC,\n  blockchain: Blockchain.BITCOIN,\n})\n","import { DelegationIdentity } from \"@dfinity/identity\"\nimport { FungibleAssetConnector } from \"src/ui/connnector/fungible-asset-screen/fungible-asset\"\nimport { erc20ToTokenConfig } from \"src/ui/connnector/fungible-asset-screen/util/util\"\nimport {\n  AssetErc20Config,\n  Blockchain,\n  NativeToken,\n  TokenConfig,\n} from \"src/ui/connnector/types\"\n\nimport { IconERC20 } from \"@nfid-frontend/ui\"\nimport { ethereumAsset } from \"@nfid/integration\"\nimport { TokenStandards } from \"@nfid/integration/token/types\"\n\nexport class EthereumERC20AssetConnector extends FungibleAssetConnector<AssetErc20Config> {\n  async getAccounts(\n    identity: DelegationIdentity[],\n  ): Promise<Array<TokenConfig>> {\n    return ethereumAsset\n      .getAccounts(identity[0], this.config.icon)\n      .then((ts) => {\n        return ts.map((l) => {\n          return erc20ToTokenConfig(this.config, l)\n        })\n      })\n  }\n}\n\nexport const ethereumERC20AssetConnector = new EthereumERC20AssetConnector({\n  tokenStandard: TokenStandards.ERC20_ETHEREUM,\n  blockchain: Blockchain.ETHEREUM,\n  feeCurrency: NativeToken.ETH,\n  icon: IconERC20,\n})\n","import { DelegationIdentity } from \"@dfinity/identity\"\nimport { FungibleAssetConnector } from \"src/ui/connnector/fungible-asset-screen/fungible-asset\"\nimport { toNativeTokenConfig } from \"src/ui/connnector/fungible-asset-screen/util/util\"\nimport {\n  AssetNativeConfig,\n  Blockchain,\n  NativeToken,\n  TokenConfig,\n} from \"src/ui/connnector/types\"\n\nimport { IconPngEthereum } from \"@nfid-frontend/ui\"\nimport { ethereumAsset } from \"@nfid/integration\"\nimport { TokenStandards } from \"@nfid/integration/token/types\"\n\nexport class EthAssetConnector extends FungibleAssetConnector<AssetNativeConfig> {\n  async getAccounts(\n    identity: DelegationIdentity[],\n  ): Promise<Array<TokenConfig>> {\n    return ethereumAsset\n      .getNativeAccount(identity[0], this.config.icon)\n      .then((matic) => [toNativeTokenConfig(this.config, matic)])\n  }\n}\n\nexport const ethAssetConnector = new EthAssetConnector({\n  icon: IconPngEthereum,\n  tokenStandard: TokenStandards.ETH,\n  title: \"Ethereum\",\n  feeCurrency: NativeToken.ETH,\n  blockchain: Blockchain.ETHEREUM,\n})\n","import { DelegationIdentity } from \"@dfinity/identity\"\nimport { FungibleAssetConnector } from \"src/ui/connnector/fungible-asset-screen/fungible-asset\"\nimport { erc20ToTokenConfig } from \"src/ui/connnector/fungible-asset-screen/util/util\"\nimport {\n  AssetErc20Config,\n  Blockchain,\n  NativeToken,\n  TokenConfig,\n} from \"src/ui/connnector/types\"\n\nimport { PolygonERC20Svg } from \"@nfid-frontend/ui\"\nimport { polygonAsset } from \"@nfid/integration\"\nimport { TokenStandards } from \"@nfid/integration/token/types\"\n\nexport class PolygonERC20AssetConnector extends FungibleAssetConnector<AssetErc20Config> {\n  async getAccounts(\n    identity: DelegationIdentity[],\n  ): Promise<Array<TokenConfig>> {\n    return polygonAsset\n      .getAccounts(identity[0], this.config.icon)\n      .then((ts) => {\n        return ts.map((l) => {\n          return erc20ToTokenConfig(this.config, l)\n        })\n      })\n  }\n}\n\nexport const polygonERC20AssetConnector = new PolygonERC20AssetConnector({\n  tokenStandard: TokenStandards.ERC20_POLYGON,\n  icon: PolygonERC20Svg,\n  blockchain: Blockchain.POLYGON,\n  feeCurrency: NativeToken.MATIC,\n})\n","import { DelegationIdentity } from \"@dfinity/identity\"\nimport { FungibleAssetConnector } from \"src/ui/connnector/fungible-asset-screen/fungible-asset\"\nimport { toNativeTokenConfig } from \"src/ui/connnector/fungible-asset-screen/util/util\"\nimport {\n  AssetNativeConfig,\n  Blockchain,\n  NativeToken,\n  TokenConfig,\n} from \"src/ui/connnector/types\"\n\nimport { MaticSvg } from \"@nfid-frontend/ui\"\nimport { polygonAsset } from \"@nfid/integration\"\nimport { TokenStandards } from \"@nfid/integration/token/types\"\n\nexport class MaticAssetConnector extends FungibleAssetConnector<AssetNativeConfig> {\n  async getAccounts(\n    identity: DelegationIdentity[],\n  ): Promise<Array<TokenConfig>> {\n    return polygonAsset\n      .getNativeAccount(identity[0], this.config.icon)\n      .then((matic) => [toNativeTokenConfig(this.config, matic)])\n  }\n}\n\nexport const maticAssetConnector = new MaticAssetConnector({\n  icon: MaticSvg,\n  tokenStandard: TokenStandards.MATIC,\n  title: \"Matic\",\n  feeCurrency: NativeToken.MATIC,\n  blockchain: Blockchain.POLYGON,\n})\n","import { ConnectorFactory } from \"src/ui/connnector/connector-factory\"\nimport { btcAssetConnector } from \"src/ui/connnector/fungible-asset-screen/btc/btc-asset\"\nimport { ethereumERC20AssetConnector } from \"src/ui/connnector/fungible-asset-screen/eth/erc20-asset\"\nimport { ethAssetConnector } from \"src/ui/connnector/fungible-asset-screen/eth/eth-asset\"\nimport { FungibleAssetConnector } from \"src/ui/connnector/fungible-asset-screen/fungible-asset\"\nimport { polygonERC20AssetConnector } from \"src/ui/connnector/fungible-asset-screen/polygon/erc20-asset\"\nimport { maticAssetConnector } from \"src/ui/connnector/fungible-asset-screen/polygon/matic-asset\"\nimport {\n  AssetErc20Config,\n  AssetFilter,\n  AssetNativeConfig,\n  TokenConfig,\n} from \"src/ui/connnector/types\"\n\nimport { TokenStandards } from \"@nfid/integration/token/types\"\n\nexport class FungibleAssetFactory extends ConnectorFactory<\n  TokenStandards,\n  FungibleAssetConnector<AssetNativeConfig | AssetErc20Config>\n> {\n  getTokenConfigs = async (\n    key: TokenStandards,\n    assetFilters: AssetFilter[],\n  ): Promise<Array<TokenConfig>> => {\n    return super.process(key, [assetFilters])\n  }\n\n  getCacheKey(\n    key: TokenStandards,\n    functionToCall: Function,\n    args: any[],\n  ): string {\n    return (\n      functionToCall.name +\n      key +\n      (args[0]! as AssetFilter[]).reduce(\n        (acc, { principal }) => `${acc}${principal}`,\n        \"\",\n      )\n    )\n  }\n\n  getFunctionToCall(\n    connector: FungibleAssetConnector<AssetNativeConfig | AssetErc20Config>,\n  ): Function {\n    return connector.getTokenConfigs\n  }\n}\n\nexport const fungibleAssetFactory = new FungibleAssetFactory([\n  btcAssetConnector,\n  maticAssetConnector,\n  polygonERC20AssetConnector,\n  ethereumERC20AssetConnector,\n  ethAssetConnector,\n])\n","import { fungibleAssetFactory } from \"src/ui/connnector/fungible-asset-screen/fungible-asset-factory\"\nimport useSWR from \"swr\"\n\nimport { TokenStandards } from \"@nfid/integration/token/types\"\n\nimport { AssetFilter } from \"../../types\"\n\ntype UseTokenConfig = {\n  assetFilters: AssetFilter[]\n  tokens: TokenStandards[]\n}\n\nexport const useTokenConfig = ({ assetFilters, tokens }: UseTokenConfig) => {\n  const { data: configs, ...rest } = useSWR(\n    [tokens, assetFilters, \"tokenConfig\"],\n    ([tokens, assetFilters]) =>\n      Promise.all(\n        tokens.map(async (token) => {\n          try {\n            return await fungibleAssetFactory.getTokenConfigs(\n              token,\n              assetFilters,\n            )\n          } catch (e) {\n            // FIXME: handle case when request fails\n            console.error(\"useTokenConfig\", e)\n            return []\n          }\n        }),\n      ),\n  )\n\n  return { configs: configs?.flat() || [], ...rest }\n}\n","import { useAllDip20Token } from \"src/features/fungable-token/dip-20/hooks/use-all-token-meta\"\nimport { useBalanceICPAll } from \"src/features/fungable-token/icp/hooks/use-balance-icp-all\"\nimport { stringICPtoE8s } from \"src/integration/wallet/utils\"\nimport { AssetFilter, TokenConfig } from \"src/ui/connnector/types\"\n\nimport { IconSvgDfinity } from \"@nfid-frontend/ui\"\nimport { toPresentation, WALLET_FEE_E8S } from \"@nfid/integration/token/icp\"\nimport { TokenStandards } from \"@nfid/integration/token/types\"\n\nexport const useICTokens = (assetFilter: AssetFilter[]): TokenConfig[] => {\n  const { appAccountBalance } = useBalanceICPAll(true, assetFilter)\n  const { token: dip20Token } = useAllDip20Token()\n\n  return [\n    {\n      icon: IconSvgDfinity,\n      tokenStandard: TokenStandards.ICP,\n      title: \"Internet Computer\",\n      currency: \"ICP\",\n      balance: appAccountBalance?.ICP.tokenBalance,\n      price: appAccountBalance?.ICP.usdBalance,\n      fee: BigInt(WALLET_FEE_E8S),\n      toPresentation,\n      transformAmount: stringICPtoE8s,\n      blockchain: \"Internet Computer\",\n    },\n    ...(dip20Token\n      ? dip20Token.map(({ symbol, name, logo, ...rest }) => ({\n          tokenStandard: TokenStandards.DIP20,\n          icon: logo,\n          title: name,\n          currency: symbol,\n          balance: appAccountBalance?.[symbol].tokenBalance,\n          price: appAccountBalance?.[symbol].usdBalance,\n          blockchain: \"Internet Computer\",\n          ...rest,\n        }))\n      : []),\n  ]\n}\n","import React from \"react\"\nimport { fungibleAssetFactory } from \"src/ui/connnector/fungible-asset-screen/fungible-asset-factory\"\nimport { useTokenConfig } from \"src/ui/connnector/fungible-asset-screen/hooks/use-token-config\"\nimport { useICTokens } from \"src/ui/connnector/fungible-asset-screen/ic/hooks/use-icp\"\nimport { AssetFilter, TokenConfig } from \"src/ui/connnector/types\"\n\nexport const useAllToken = (\n  assetFilters: AssetFilter[] = [],\n): { token: TokenConfig[] } => {\n  const tokens = fungibleAssetFactory.getKeys()\n  const { configs: tokenConfigs } = useTokenConfig({ tokens, assetFilters })\n\n  const icTokenConfigs = useICTokens(assetFilters)\n\n  const token: TokenConfig[] = React.useMemo(() => {\n    return [...tokenConfigs, ...icTokenConfigs]\n  }, [tokenConfigs, icTokenConfigs])\n\n  console.debug(\"useAllToken\", { token })\n  return { token }\n}\n","import { Principal } from \"@dfinity/principal\"\nimport {\n  decodeTokenIdentifier,\n  encodeTokenIdentifier,\n  principalToAddress,\n} from \"ictool\"\n\nimport { Account } from \"@nfid/integration\"\n\nimport { mapToNFTData } from \"./mapper\"\nimport {\n  CollectionCache,\n  DisplayFormat,\n  EntrepotCollection,\n  EntrepotDisplayFormat,\n  EntrepotToken,\n  TokenCache,\n  UserNFTDetails,\n} from \"./types\"\n\nconst API = \"https://us-central1-entrepot-api.cloudfunctions.net/api\"\nconst TREASURECANISTER = \"yigae-jqaaa-aaaah-qczbq-cai\"\n\nlet collectionsCache: Promise<CollectionCache>\nconst tokenCache: TokenCache = {}\n\n/**\n * Fetch and cache all known NFT collections from entrepot API.\n */\nexport async function fetchCollections(): Promise<CollectionCache> {\n  if (!collectionsCache) {\n    collectionsCache = fetch(`${API}/collections`)\n      .then((r) => r.json())\n      .then((r: EntrepotCollection[]) =>\n        r.reduce(\n          (agg, x) => ({\n            ...agg,\n            [x.id]: x,\n          }),\n          {},\n        ),\n      )\n  }\n  return collectionsCache\n}\n\n/**\n * Fetch a specific collection from the cache.\n */\nexport async function fetchCollection(\n  canisterId: string,\n): Promise<EntrepotCollection> {\n  const collection = (await fetchCollections())[canisterId]\n  if (!collection) throw new Error(`Unknown collection ${canisterId}`)\n  return collection\n}\n\n/**\n * Fetch and cache all tokens from a specific token canister.\n */\nexport async function fetchCollectionTokens(\n  collectionId: string,\n): Promise<EntrepotToken[]> {\n  if (!tokenCache[collectionId]) {\n    const tokens: EntrepotToken[] = await fetch(\n      `${API}/maddies/getNftCollection/${collectionId}`,\n    ).then((r) => r.json())\n    tokenCache[collectionId] = tokens\n  }\n  return tokenCache[collectionId]\n}\n\n/**\n * Determines asset path using compatability code from Entrepot source.\n */\nfunction entrepotAsset(\n  collection: EntrepotCollection,\n  token: EntrepotToken,\n  fullSize: boolean,\n) {\n  const { index } = decodeTokenIdentifier(token.tokenId)\n  if (collection.id === \"jeghr-iaaaa-aaaah-qco7q-cai\")\n    return `https://fl5nr-xiaaa-aaaai-qbjmq-cai.raw.ic0.app/nft/${index}`\n  if (collection.id === \"bxdf4-baaaa-aaaah-qaruq-cai\")\n    return `https://qcg3w-tyaaa-aaaah-qakea-cai.raw.ic0.app/Token/${index}`\n  if (collection.id === \"y3b7h-siaaa-aaaah-qcnwa-cai\")\n    return `https://4nvhy-3qaaa-aaaah-qcnoq-cai.raw.ic0.app/Token/${index}`\n  if (collection.id === \"3db6u-aiaaa-aaaah-qbjbq-cai\")\n    return `https://d3ttm-qaaaa-aaaai-qam4a-cai.raw.ic0.app?tokenId=${index}`\n  if (collection.id === \"q6hjz-kyaaa-aaaah-qcama-cai\") return icpbunnyimg(index)\n  if (collection.id === \"pk6rk-6aaaa-aaaae-qaazq-cai\") {\n    if (fullSize) {\n      return `https://${collection.id}.raw.ic0.app/?tokenid=${token.tokenId}`\n    } else {\n      return `https://images.entrepot.app/t/7budn-wqaaa-aaaah-qcsba-cai/${token.tokenId}`\n    }\n  }\n  if (collection.id === \"dhiaa-ryaaa-aaaae-qabva-cai\") {\n    if (fullSize) {\n      return `https://${collection.id}.raw.ic0.app/?tokenid=${token.tokenId}`\n    } else {\n      return `https://images.entrepot.app/tnc/qtejr-pqaaa-aaaah-qcyvq-cai/${token.tokenId}`\n    }\n  }\n  if (collection.id === \"skjpp-haaaa-aaaae-qac7q-cai\") {\n    if (fullSize) {\n      return `https://${collection.id}.raw.ic0.app/?tokenid=${token.tokenId}`\n    } else {\n      return `https://images.entrepot.app/tnc/wtwf2-biaaa-aaaam-qauoq-cai/${token.tokenId}`\n    }\n  }\n  if (collection.id === TREASURECANISTER) {\n    if (!fullSize) {\n      return \"/earn/loading.png\"\n    }\n  }\n  if (fullSize) {\n    return `https://${collection.id}.raw.ic0.app/?tokenid=${token.tokenId}`\n  } else {\n    //add collections with wearables or other dynamic traits here\n    //these images will not be cached\n    if (collection.id === \"rxrsz-5aaaa-aaaam-qaysa-cai\")\n      return `https://images.entrepot.app/tnc/${collection.id}/${token.tokenId}`\n    if (collection.id === \"sbcwr-3qaaa-aaaam-qamoa-cai\")\n      return `https://images.entrepot.app/tnc/${collection.id}/${token.tokenId}`\n    if (collection.id === \"yrdz3-2yaaa-aaaah-qcvpa-cai\")\n      return `https://images.entrepot.app/tnc/${collection.id}/${token.tokenId}`\n    if (collection.id === \"rw7qm-eiaaa-aaaak-aaiqq-cai\")\n      return `https://images.entrepot.app/tnc/${collection.id}/${token.tokenId}`\n    if (collection.id === \"5movr-diaaa-aaaak-aaftq-cai\")\n      return `https://images.entrepot.app/tnc/${collection.id}/${token.tokenId}`\n    if (collection.id === \"dhyds-jaaaa-aaaao-aaiia-cai\")\n      return `https://images.entrepot.app/tnc/${collection.id}/${token.tokenId}`\n    //end of section\n\n    if (collection.id === \"6wih6-siaaa-aaaah-qczva-cai\")\n      return `https://${\n        collection.id\n      }.raw.ic0.app/?cc${Date.now()}&type=thumbnail&tokenid=${token.tokenId}`\n    if (collection.id === \"kss7i-hqaaa-aaaah-qbvmq-cai\")\n      return `https://${collection.id}.raw.ic0.app/?type=thumbnail&tokenid=${token.tokenId}`\n    return `https://images.entrepot.app/t/${collection.id}/${token.tokenId}`\n  }\n}\n\nexport function getEntrepotDisplayFormat(\n  collection: EntrepotCollection,\n  token: EntrepotToken,\n): EntrepotDisplayFormat {\n  const { index } = decodeTokenIdentifier(token.tokenId)\n  // Motoko Mechs specific\n  if (token.canisterId === \"ugdkf-taaaa-aaaak-acoia-cai\") {\n    return \"motoko_mechs\"\n  }\n\n  if (index === 99 && token.canisterId === \"kss7i-hqaaa-aaaah-qbvmq-cai\")\n    return \"interactive_nfts_or_videos\"\n\n  if (collection.detailpage) return collection.detailpage\n\n  return \"default\"\n}\n\nexport function getDisplayFormat(format: EntrepotDisplayFormat): DisplayFormat {\n  switch (format) {\n    case \"interactive_nfts_or_videos\":\n      return \"iframe\"\n    case \"videos_that_dont_fit_in_frame\":\n      return \"video\"\n    case \"\":\n    case \"default\":\n    case \"asset_canisters\":\n    case \"generative_assets_on_nft_canister\":\n    case \"motoko_mechs\":\n    default:\n      return \"img\"\n  }\n}\n\n/**\n * Retrieve preview image asset for NFT.\n */\nexport function assetPreview(\n  collection: EntrepotCollection,\n  token: EntrepotToken,\n): string {\n  return entrepotAsset(collection, token, false)\n}\n\n/**\n * Retrieve fullsize asset for NFT. Assets have variable mime types and  must be rendered correctly based on returned type.\n */\nexport async function assetFullsize(\n  collection: EntrepotCollection,\n  token: EntrepotToken,\n): Promise<{\n  url: string\n  format: DisplayFormat\n}> {\n  const url = entrepotAsset(collection, token, true)\n  const _format = getEntrepotDisplayFormat(collection, token)\n  const format = getDisplayFormat(_format)\n  if (_format === \"default\") {\n    return { url: assetPreview(collection, token), format }\n  }\n  if (_format === \"asset_canisters\") {\n    return { url: await getImageDetailsUrl(url), format }\n  }\n  if (_format === \"videos_that_dont_fit_in_frame\") {\n    return { url: await getVideoDetailsUrl(url), format }\n  }\n  return { url, format }\n}\n\n/**\n * Determines canister ID for given ICP Bunnies token index.\n */\nfunction icpbunnyimg(index: number) {\n  const icbstorage = [\n    \"efqhu-yqaaa-aaaaf-qaeda-cai\",\n    \"ecrba-viaaa-aaaaf-qaedq-cai\",\n    \"fp7fo-2aaaa-aaaaf-qaeea-cai\",\n    \"fi6d2-xyaaa-aaaaf-qaeeq-cai\",\n    \"fb5ig-bqaaa-aaaaf-qaefa-cai\",\n    \"fg4os-miaaa-aaaaf-qaefq-cai\",\n    \"ft377-naaaa-aaaaf-qaega-cai\",\n    \"fu2zl-ayaaa-aaaaf-qaegq-cai\",\n    \"f5zsx-wqaaa-aaaaf-qaeha-cai\",\n    \"f2yud-3iaaa-aaaaf-qaehq-cai\",\n  ]\n  return `https://${icbstorage[index % 10]}.raw.ic0.app/Token/${index}`\n}\n\n/**\n * Retrieve primary link to NFT. This is some hard-coded stuff taken from Entrepot source code to improve compatability.\n */\nexport function getTokenLink(canister: string, index: number): string {\n  const id = encodeTokenIdentifier(canister, index)\n  if (canister === \"jeghr-iaaaa-aaaah-qco7q-cai\")\n    return `https://fl5nr-xiaaa-aaaai-qbjmq-cai.raw.ic0.app/nft/${index}`\n  if (canister === \"bxdf4-baaaa-aaaah-qaruq-cai\")\n    return `https://qcg3w-tyaaa-aaaah-qakea-cai.raw.ic0.app/Token/${index}`\n  if (canister === \"y3b7h-siaaa-aaaah-qcnwa-cai\")\n    return `https://4nvhy-3qaaa-aaaah-qcnoq-cai.raw.ic0.app/Token/${index}`\n  if (canister === \"3db6u-aiaaa-aaaah-qbjbq-cai\")\n    return `https://d3ttm-qaaaa-aaaai-qam4a-cai.raw.ic0.app?tokenId=${index}`\n  if (canister === \"q6hjz-kyaaa-aaaah-qcama-cai\") return icpbunnyimg(index)\n  return `https://${canister}.raw.ic0.app/?tokenid=${id}`\n}\n\n/**\n * Extract usable image from\n */\nexport async function getImageDetailsUrl(url: string): Promise<string> {\n  const regExp = /image href=\"([^\"]+)\"/\n  const response = await fetch(url)\n  const blob = await response.blob()\n  const text = await blob.text()\n  const simplifiedText = text.replace(\"\\n\", \" \").replace(/\\s{2,}/, \" \")\n  const result = simplifiedText.match(regExp)?.[1]\n  if (!result) throw new Error(\"Could not extract image\")\n  return result\n}\n\nexport async function getVideoDetailsUrl(url: string) {\n  const regExp = /source src=\"([^\"]+)\"/\n  const regExp2 = 'URL=([^\"]+)\"'\n  const response = await fetch(url)\n  const blob = await response.blob()\n  const text = await blob.text()\n  const simplifiedText = text.replace(\"\\n\", \" \").replace(/\\s{2,}/, \" \")\n  if (simplifiedText.includes(\"URL=\")) {\n    const result = simplifiedText.match(regExp2)?.[1]\n    if (!result) throw new Error(\"Could not extract video\")\n    return result\n  } else if (simplifiedText.includes(\"source\")) {\n    const result = simplifiedText.match(regExp)?.[1]\n    if (!result) throw new Error(\"Could not extract video\")\n    return result\n  } else {\n    const result = url\n    if (!result) throw new Error(\"Could not extract video\")\n    return result\n  }\n}\n\nexport async function fetchNFTsOfPrincipals(\n  inputData: { principal: Principal; account: Account }[],\n): Promise<UserNFTDetails[]> {\n  const response = await Promise.all(\n    inputData.map(async ({ principal, account }) => {\n      const address: string = principalToAddress(principal as any)\n      return await fetch(`${API}/maddies/getAllNfts/${address}`)\n        .then((r) => r.json())\n        .then((r: EntrepotToken[]) => mapToNFTData(r, principal, account))\n    }),\n  )\n  return response\n    .flat()\n    .map((nft) => ({ ...nft, blockchain: \"Internet Computer\" }))\n}\n","import { Principal } from \"@dfinity/principal\"\nimport { decodeTokenIdentifier } from \"ictool\"\n\nimport { Account } from \"@nfid/integration\"\n\nimport { collection, token } from \".\"\nimport { EntrepotToken, UserNFTDetails } from \"./types\"\n\nexport async function mapToNFTData(\n  response: EntrepotToken[],\n  principal: Principal,\n  account: Account,\n): Promise<UserNFTDetails[]> {\n  return (\n    await Promise.all(\n      response.map(async (entrepotNFT) => {\n        let _token\n\n        try {\n          const _collection = await collection(entrepotNFT.canisterId)\n          const { index } = decodeTokenIdentifier(entrepotNFT.tokenId)\n          _token = await token(_collection, response, index)\n        } catch (e) {\n          console.log(\"mapToNFTData\", { e })\n        }\n\n        return { ..._token, principal, account } as UserNFTDetails\n      }),\n    )\n  ).filter((nft) => nft?.tokenId && nft?.collection?.id)\n}\n","import { Principal } from \"@dfinity/principal\"\nimport { encodeTokenIdentifier } from \"ictool\"\n\nimport { Account } from \"@nfid/integration\"\n\nimport {\n  assetFullsize,\n  assetPreview,\n  fetchCollection,\n  fetchCollections,\n  fetchCollectionTokens,\n  fetchNFTsOfPrincipals,\n  getTokenLink,\n} from \"./lib\"\nimport type {\n  EntrepotCollection,\n  EntrepotToken,\n  NFTDetails,\n  UserNFTDetails,\n} from \"./types\"\n\n/**\n * Retrieve all known NFT collections.\n */\nexport async function collections(): Promise<EntrepotCollection[]> {\n  return Object.values(await fetchCollections())\n}\n\n/**\n * Retrieve details for a specific collection.\n * @param id Canister ID of the collection.\n */\nexport async function collection(id: string): Promise<EntrepotCollection> {\n  return fetchCollection(id)\n}\n\n/**\n * Retrieve details for a specific token.\n */\nexport async function token(\n  collection: EntrepotCollection,\n  tokens: EntrepotToken[],\n  index: number,\n): Promise<NFTDetails> {\n  const tokenId = encodeTokenIdentifier(collection.id, index)\n  const token = tokens.find((token) => token.tokenId === tokenId)\n  if (!token) {\n    throw new Error(\n      `Could not find token #${index} of ${collection.name} (${collection.id})`,\n    )\n  }\n  return {\n    collection,\n    canisterId: collection.id,\n    index,\n    tokenId,\n    name: `${collection.name} #${index}`,\n    assetPreview: assetPreview(collection, token),\n    assetFullsize: await assetFullsize(collection, token),\n    blockchain: \"Internet Computer\",\n  }\n}\n\n/**\n * Retrieve tokens for a given collection.\n */\nexport async function tokens(\n  collection: EntrepotCollection,\n): Promise<EntrepotToken[]> {\n  return Promise.all(await fetchCollectionTokens(collection.id))\n}\n\n/**\n * Retrieve link to NFT.\n */\nexport function link(canister: string, index: number): string {\n  return getTokenLink(canister, index)\n}\n\n/**\n * Retrieve all NFTs for the given principals.\n */\nexport async function principalTokens(\n  inputData: { principal: Principal; account: Account }[],\n): Promise<UserNFTDetails[]> {\n  return (await fetchNFTsOfPrincipals(inputData)).flat()\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface CenterEllipsisProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  value: string\n  trailingChars: number\n  leadingChars: number\n  id?: string\n}\n\nexport const CenterEllipsis = React.forwardRef<\n  HTMLDivElement,\n  CenterEllipsisProps\n>(({ value, leadingChars, trailingChars, ...divProps }, ref) => {\n  const splitAt = value.length - trailingChars\n  return (\n    <div ref={ref} className=\"flex min-w-0\" {...divProps}>\n      <div\n        id={\"first_part\"}\n        className={clsx(\"overflow-hidden whitespace-nowrap\")}\n      >\n        {value.slice(0, leadingChars)}\n      </div>\n      <div>...</div>\n      <div id={\"second_part\"} className=\"flex-shrink-0\">\n        {value.slice(splitAt)}\n      </div>\n    </div>\n  )\n})\n","import { CacheContainer } from \"node-ts-cache\"\nimport { MemoryStorage } from \"node-ts-cache-storage-memory\"\n\nexport const connectorCache = new CacheContainer(new MemoryStorage())\n","import { connectorCache } from \"src/ui/connnector/cache\"\nimport { Cacheable, StandardizedToken } from \"src/ui/connnector/types\"\n\nexport abstract class ConnectorFactory<\n  N,\n  T extends StandardizedToken<N> & Cacheable,\n> {\n  connectors: any\n  connectorsStorage: Map<N, T>\n\n  constructor(connectors: any) {\n    this.connectors = connectors\n    this.connectorsStorage = this.toMap(this.connectors)\n  }\n\n  getKeys(): N[] {\n    return Array.from(this.connectorsStorage.keys())\n  }\n\n  async process(key: N, args: any[]) {\n    const connector = this.getConnector(key)\n    if (!connector) throw Error(key + \" not supported\")\n    const cacheKey = this.getCacheKey(\n      key,\n      this.getFunctionToCall(connector),\n      args,\n    )\n    return this.processCacheable(\n      cacheKey,\n      connector,\n      this.getFunctionToCall(connector),\n      args,\n    )\n  }\n\n  protected abstract getCacheKey(\n    key: N,\n    functionToCall: Function,\n    args: any[],\n  ): string\n\n  protected abstract getFunctionToCall(connector: T): Function\n\n  private toMap(connectors: T[]): Map<N, T> {\n    const connectorsMap = new Map<N, T>()\n    connectors.forEach((connector) => {\n      connectorsMap.set(connector.getTokenStandard(), connector)\n    })\n    return connectorsMap\n  }\n\n  private getConnector(key: N) {\n    return this.connectorsStorage.get(key)\n  }\n\n  private async processCacheable(\n    cacheKey: string,\n    connector: T,\n    a: Function,\n    args: any[],\n  ) {\n    const cachedNftConfig = await connectorCache.getItem(cacheKey)\n    if (cachedNftConfig) {\n      return cachedNftConfig\n    }\n    const response = await a.apply(connector, args)\n    await connectorCache.setItem(cacheKey, response, {\n      ttl: connector.getCacheTtl(),\n    })\n    return response\n  }\n}\n","import {\n  TokenBalanceSheet,\n  TransferResponse,\n} from \"packages/integration/src/lib/asset/types\"\nimport { UserNonFungibleToken } from \"src/features/non-fungable-token/types\"\n\nimport { NonFungibleAsset } from \"@nfid/integration\"\nimport { TokenStandards } from \"@nfid/integration/token/types\"\n\nexport type IFungibleAssetConnector = StandardizedToken<TokenStandards> &\n  Cacheable & {\n    getTokenConfigs(assetFilter: AssetFilter[]): Promise<Array<TokenConfig>>\n  }\n\nexport type INonFungibleAssetConnector = StandardizedToken<Blockchain> &\n  Cacheable & {\n    getNonFungibleItems(\n      assetFilter: AssetFilter[],\n    ): Promise<Array<UserNonFungibleToken>>\n  }\n\nexport type IFungibleAssetDetailsConnector = StandardizedToken<TokenStandards> &\n  Cacheable & {\n    getAssetDetails(): Promise<Array<TokenBalanceSheet>>\n  }\n\nexport type StandardizedToken<T> = {\n  getTokenStandard(): T\n}\n\nexport type Cacheable = {\n  getCacheTtl(): number\n}\n\nexport type NftConnectorConfig = {\n  defaultLogo: string\n  blockchain: Blockchain\n  assetService: NonFungibleAsset<TransferResponse>\n}\n\nexport type TokenDetailsConfig = {\n  tokenStandard: TokenStandards\n  icon: string\n}\n\nexport type AssetErc20Config = {\n  tokenStandard: TokenStandards\n  icon: string\n  blockchain: Blockchain\n  feeCurrency: NativeToken\n}\n\nexport type AssetNativeConfig = AssetErc20Config & {\n  title: string\n}\n\nexport enum Blockchain {\n  ETHEREUM = \"Ethereum\",\n  POLYGON = \"Polygon\",\n  IC = \"Internet Computer\",\n  BITCOIN = \"Bitcoin\",\n}\n\nexport enum NativeToken {\n  ETH = \"ETH\",\n  MATIC = \"MATIC\",\n  ICP = \"ICP\",\n  BTC = \"BTC\",\n}\n\nexport interface TokenConfig {\n  balance: bigint | undefined\n  currency: string\n  fee: bigint\n  icon: string\n  price: string | undefined\n  title: string\n  canisterId?: string\n  tokenStandard: TokenStandards\n  toPresentation: (value?: bigint) => number\n  transformAmount: (value: string) => number\n  blockchain: string\n  feeCurrency?: string\n  contract?: string\n}\n\nexport interface AssetFilter {\n  principal: string\n}\n","import clsx from \"clsx\"\nimport { useEffect, useState } from \"react\"\n\ninterface IToggleButton {\n  className?: string\n  firstValue: string\n  secondValue: string\n  onChange: (value: boolean) => void\n  defaultValue?: boolean\n}\n\nexport const ToggleButton: React.FC<IToggleButton> = ({\n  firstValue,\n  secondValue,\n  className,\n  onChange,\n  defaultValue,\n}) => {\n  const [value, setValue] = useState(defaultValue ?? false)\n\n  useEffect(() => {\n    onChange(value)\n  }, [onChange, value])\n\n  return (\n    <div\n      className={clsx(\n        \"w-full h-7 rounded-md bg-gray-100 cursor-pointer\",\n        \"grid grid-cols-2 relative select-none\",\n        className,\n      )}\n      onClick={() => setValue(!value)}\n    >\n      <div\n        className={clsx(\n          \"text-center text-black\",\n          \"font-semibold text-xs leading-7\",\n        )}\n      >\n        {firstValue}\n      </div>\n      <div\n        className={clsx(\n          \"text-center text-black\",\n          \"font-semibold text-xs leading-7\",\n        )}\n      >\n        {secondValue}\n      </div>\n      <div\n        className={clsx(\n          \"absolute h-7 w-1/2 rounded-md\",\n          \"bg-blue-600 leading-7 text-xs\",\n          \"text-center text-white font-semibold\",\n          \"transition-transform\",\n          value && \"translate-x-full\",\n        )}\n      >\n        {!value ? firstValue : secondValue}\n      </div>\n    </div>\n  )\n}\n","import { useMemo } from \"react\"\nimport { useErc20Polygon } from \"src/features/fungable-token/erc-20/hooks/use-erc-20-polygon\"\n\nimport {\n  IconPngEthereum,\n  IconSvgBTC,\n  IconSvgDfinity,\n  IGroupedOptions,\n} from \"@nfid-frontend/ui\"\n\nimport { useAllDip20Token } from \"frontend/features/fungable-token/dip-20/hooks/use-all-token-meta\"\nimport { useErc20 } from \"frontend/features/fungable-token/erc-20/hooks/use-erc-20\"\n\nexport const useTokenOptions = () => {\n  const { token: dip20Tokens } = useAllDip20Token()\n  const { erc20 } = useErc20()\n  const { erc20: erc20Polygon } = useErc20Polygon()\n\n  const tokenOptions: IGroupedOptions[] = useMemo(() => {\n    return [\n      {\n        label: \"Internet Computer\",\n        options: [\n          {\n            icon: IconSvgDfinity,\n            title: \"ICP\",\n            subTitle: \"Internet Computer\",\n            value: \"ICP\",\n          },\n        ].concat(\n          dip20Tokens?.map((token) => ({\n            icon: token.logo,\n            title: token.symbol,\n            subTitle: token.name,\n            value: token.symbol,\n          })) ?? [],\n        ),\n      },\n      {\n        label: \"Ethereum\",\n        options: [\n          {\n            icon: IconPngEthereum,\n            title: \"ETH\",\n            subTitle: \"Ethereum\",\n            value: \"ETH\",\n          },\n        ].concat(\n          erc20?.map((token) => ({\n            icon: token.icon,\n            title: token.token,\n            subTitle: token.label,\n            value: token.token,\n          })) ?? [],\n        ),\n      },\n      {\n        label: \"Polygon\",\n        options: [\n          {\n            icon: IconSvgBTC,\n            title: \"MATIC\",\n            subTitle: \"Polygon\",\n            value: \"MATIC\",\n          },\n        ].concat(\n          erc20Polygon?.map((token) => ({\n            icon: token.icon,\n            title: token.token,\n            subTitle: token.label,\n            value: token.token,\n          })) ?? [],\n        ),\n      },\n      {\n        label: \"Bitcoin\",\n        options: [\n          {\n            icon: IconSvgBTC,\n            title: \"BTC\",\n            subTitle: \"Bitcoin\",\n            value: \"BTC\",\n          },\n        ],\n      },\n    ] as IGroupedOptions[]\n  }, [dip20Tokens, erc20, erc20Polygon])\n\n  return { tokenOptions }\n}\n","import { Principal } from \"@dfinity/principal\"\nimport { TokenBalanceSheet } from \"packages/integration/src/lib/asset/types\"\n\nimport { IGroupedOptions } from \"@nfid-frontend/ui\"\nimport { groupArrayByField, truncateString } from \"@nfid-frontend/utils\"\nimport { toPresentation } from \"@nfid/integration/token/icp\"\n\nimport { toUSD } from \"frontend/features/fungable-token/accumulate-app-account-balances\"\nimport { IRate } from \"frontend/features/fungable-token/eth/hooks/use-eth-exchange-rate\"\nimport { TokenBalance } from \"frontend/features/fungable-token/fetch-balances\"\n\nexport const mapAccountBalancesToOptions = (\n  wallets: {\n    principal: Principal\n    principalId: string\n    balance: TokenBalance\n    label: string\n    accountId: string\n    domain: string\n    isVaultWallet?: boolean\n    address?: string\n    vaultId?: bigint\n    vaultName?: string\n    ethAddress?: string\n    btcAddress?: string\n  }[],\n  selectedToken: string,\n  rates: IRate,\n  erc20: TokenBalanceSheet[],\n  erc20Polygon: TokenBalanceSheet[],\n) => {\n  if (!wallets) return []\n\n  if (selectedToken === \"ETH\" || selectedToken === \"MATIC\")\n    return [\n      {\n        label: \"Public\",\n        options: [\n          {\n            title: \"NFID Account 1\",\n            value: wallets[0]?.ethAddress,\n            subTitle: truncateString(wallets[0]?.ethAddress ?? \"\", 10),\n            innerTitle: `${toPresentation(\n              wallets[0]?.balance[selectedToken],\n            )} ${selectedToken}`,\n            innerSubtitle: toUSD(\n              toPresentation(wallets[0]?.balance[selectedToken]),\n              rates[selectedToken],\n            ),\n          },\n        ],\n      },\n    ] as IGroupedOptions[]\n\n  if (selectedToken === \"BTC\")\n    return [\n      {\n        label: \"Public\",\n        options: [\n          {\n            title: \"NFID Account 1\",\n            value: wallets[0]?.btcAddress,\n            subTitle: truncateString(wallets[0]?.btcAddress ?? \"\", 10),\n            innerTitle: `${toPresentation(\n              wallets[0]?.balance[selectedToken],\n            )} ${selectedToken}`,\n            innerSubtitle: toUSD(\n              toPresentation(wallets[0]?.balance[selectedToken]),\n              rates[selectedToken],\n            ),\n          },\n        ],\n      },\n    ] as IGroupedOptions[]\n\n  const erc20token = erc20.find((l) => l.token === selectedToken)\n  if (erc20token) {\n    return [\n      {\n        label: \"Public\",\n        options: [\n          {\n            title: \"NFID Account 1\",\n            value: wallets[0]?.ethAddress,\n            subTitle: truncateString(wallets[0]?.ethAddress ?? \"\", 10),\n            innerTitle: `${toPresentation(\n              erc20token.tokenBalance,\n            )} ${selectedToken}`,\n            innerSubtitle: erc20token.usdBalance,\n          },\n        ],\n      },\n    ] as IGroupedOptions[]\n  }\n  const erc20PolygonToken = erc20Polygon.find((l) => l.token === selectedToken)\n\n  if (erc20PolygonToken) {\n    return [\n      {\n        label: \"Public\",\n        options: [\n          {\n            title: \"NFID Account 1\",\n            value: wallets[0]?.ethAddress,\n            subTitle: truncateString(wallets[0]?.ethAddress ?? \"\", 10),\n            innerTitle: `${toPresentation(\n              erc20PolygonToken.tokenBalance,\n            )} ${selectedToken}`,\n            innerSubtitle: erc20PolygonToken.usdBalance,\n          },\n        ],\n      },\n    ] as IGroupedOptions[]\n  }\n\n  const formattedOptions = wallets.map((wallet) => ({\n    title: wallet.label ?? \"\",\n    value: wallet.isVaultWallet\n      ? wallet.address ?? \"\"\n      : wallet.principal?.toText(),\n    subTitle: truncateString(wallet.principalId, 5),\n    innerTitle: `${toPresentation(\n      wallet.balance[selectedToken],\n    )} ${selectedToken}`,\n    innerSubtitle: toUSD(\n      toPresentation(wallet.balance[selectedToken]),\n      rates[selectedToken],\n    ),\n    isVaultWallet: wallet.isVaultWallet,\n    vaultId: wallet.vaultId,\n    vaultName: wallet.vaultName,\n  }))\n\n  const publicWallets = formattedOptions.filter((w) => !w.isVaultWallet)\n  const vaultWallets = formattedOptions.filter((w) => w.isVaultWallet)\n  const vaultGroups =\n    selectedToken === \"ICP\"\n      ? groupArrayByField(vaultWallets, \"vaultId\").map((group) => ({\n          label: group[0]?.vaultName,\n          options: group,\n        }))\n      : []\n\n  return [\n    {\n      label: \"Public\",\n      options: publicWallets,\n    },\n    ...vaultGroups,\n  ] as IGroupedOptions[]\n}\n","// Recursion with callback util\n// It goes one by one in array with await\nexport function processArray<T>(\n  array: T[],\n  processElement: (element: T, done: () => void) => void,\n  callback: () => void,\n) {\n  if (array.length > 0) {\n    const currentElement = array.shift()\n    if (currentElement !== undefined) {\n      processElement(currentElement, () => {\n        processArray(array, processElement, callback)\n      })\n    }\n  } else {\n    callback()\n  }\n}\n\nexport function groupArrayByField<T>(data: T[], fieldName: keyof T): T[][] {\n  const groupedData: Record<string, T[]> = data.reduce(\n    (acc: Record<string, T[]>, item: T) => {\n      const fieldValue = item[fieldName]\n      if (fieldValue == null) {\n        return acc\n      }\n      const key = fieldValue.toString()\n      if (!acc[key]) {\n        acc[key] = []\n      }\n      acc[key].push(item)\n      return acc\n    },\n    {},\n  )\n  return Object.values(groupedData)\n}\n","import { useMemo } from \"react\"\nimport { useErc20 } from \"src/features/fungable-token/erc-20/hooks/use-erc-20\"\nimport { useErc20Polygon } from \"src/features/fungable-token/erc-20/hooks/use-erc-20-polygon\"\n\nimport { useExchangeRates } from \"frontend/features/fungable-token/eth/hooks/use-eth-exchange-rate\"\nimport { useAllWallets } from \"frontend/integration/wallet/hooks/use-all-wallets\"\n\nimport { mapAccountBalancesToOptions } from \"../utils/map-balances-to-options\"\n\nexport const useWalletOptions = (selectedToken: string) => {\n  const { wallets } = useAllWallets()\n  const { rates } = useExchangeRates()\n  const { erc20 } = useErc20()\n  const { erc20: erc20Polygon } = useErc20Polygon()\n\n  const walletOptions = useMemo(() => {\n    return mapAccountBalancesToOptions(\n      wallets,\n      selectedToken,\n      rates,\n      erc20 ?? [],\n      erc20Polygon ?? [],\n    )\n  }, [rates, selectedToken, wallets, erc20, erc20Polygon])\n\n  return { walletOptions }\n}\n","import { useCallback, useEffect, useMemo } from \"react\"\nimport { TokenConfig } from \"src/ui/connnector/types\"\n\nimport { ChooseModal, Copy, QRCode } from \"@nfid-frontend/ui\"\nimport { TokenStandards } from \"@nfid/integration/token/types\"\n\nimport { useAllToken } from \"frontend/features/fungable-token/use-all-token\"\nimport { useAllWallets } from \"frontend/integration/wallet/hooks/use-all-wallets\"\nimport { CenterEllipsis } from \"frontend/ui/atoms/center-ellipsis\"\n\nimport { useTokenOptions } from \"../hooks/use-token-options\"\nimport { useWalletOptions } from \"../hooks/use-wallets-options\"\n\ninterface ITransferReceive {\n  selectedToken?: TokenConfig\n  selectedSourceWallet?: string\n  assignSourceWallet: (value: string) => void\n  assignSelectedToken: (value: TokenConfig) => void\n}\n\nexport const TransferReceive = ({\n  selectedToken,\n  selectedSourceWallet,\n  assignSourceWallet,\n  assignSelectedToken,\n}: ITransferReceive) => {\n  const { tokenOptions } = useTokenOptions()\n  const { walletOptions } = useWalletOptions(selectedToken?.currency ?? \"ICP\")\n  const { wallets } = useAllWallets()\n  const { token: allTokens } = useAllToken()\n\n  const selectedWallet = useMemo(() => {\n    if (!selectedSourceWallet) return\n\n    return wallets.find((w) =>\n      [\n        w.principal.toText(),\n        w.address,\n        w.ethAddress,\n        w.principalId,\n        w.btcAddress,\n      ].includes(selectedSourceWallet),\n    )\n  }, [selectedSourceWallet, wallets])\n\n  const selectedAddress = useMemo(() => {\n    switch (selectedToken?.tokenStandard) {\n      case \"ETH\":\n        return selectedWallet?.ethAddress\n      case \"MATIC\":\n        return selectedWallet?.ethAddress\n      case \"ERC20_POLYGON\":\n        return selectedWallet?.ethAddress\n      case \"ERC20_ETHEREUM\":\n        return selectedWallet?.ethAddress\n      case \"BTC\":\n        return selectedWallet?.btcAddress\n      case \"ICP\":\n        return selectedWallet?.address\n    }\n  }, [\n    selectedToken?.tokenStandard,\n    selectedWallet?.address,\n    selectedWallet?.ethAddress,\n    selectedWallet?.btcAddress,\n  ])\n\n  const handleSelectToken = useCallback(\n    (value: string) => {\n      const token = allTokens.find((t) => t.currency === value)\n      if (!token) return\n\n      assignSelectedToken(token)\n    },\n    [allTokens, assignSelectedToken],\n  )\n\n  useEffect(() => {\n    assignSourceWallet(walletOptions[0].options[0]?.value)\n  }, [walletOptions]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className=\"space-y-3 text-xs\">\n      <ChooseModal\n        label=\"Asset\"\n        title={\"Choose an asset\"}\n        optionGroups={tokenOptions}\n        iconClassnames=\"!w-6 !h-auto !object-contain\"\n        preselectedValue={selectedToken?.currency}\n        onSelect={handleSelectToken}\n        type=\"small\"\n      />\n      <ChooseModal\n        label=\"Account\"\n        optionGroups={walletOptions}\n        title={\"Choose an account\"}\n        onSelect={(value) => assignSourceWallet(value)}\n        preselectedValue={selectedSourceWallet}\n        type=\"small\"\n      />\n      {Object.values(TokenStandards).includes(selectedToken!.tokenStandard) && (\n        <div>\n          <p className=\"mb-1 text-gray-400\">\n            {selectedToken?.tokenStandard === \"ETH\" ||\n            selectedToken?.tokenStandard === \"BTC\" ||\n            selectedToken?.tokenStandard === \"ERC20_ETHEREUM\" ||\n            selectedToken?.tokenStandard === \"MATIC\" ||\n            selectedToken?.tokenStandard === \"ERC20_POLYGON\"\n              ? \"Wallet address\"\n              : \"Account ID\"}\n          </p>\n          <div className=\"rounded-md bg-gray-100 text-gray-400 flex items-center justify-between px-2.5 h-10\">\n            <CenterEllipsis\n              value={selectedAddress ?? \"\"}\n              leadingChars={29}\n              trailingChars={5}\n              id={\"principal\"}\n            />\n            <Copy value={selectedAddress ?? \"\"} />\n          </div>\n        </div>\n      )}\n\n      {[\"ICP\", \"DIP20\"].includes(selectedToken?.tokenStandard ?? \"\") && (\n        <div>\n          <p className=\"mb-1 text-gray-400\">Principal ID</p>\n          <div className=\"rounded-md bg-gray-100 text-gray-400 flex items-center justify-between px-2.5 h-10\">\n            <CenterEllipsis\n              value={selectedWallet?.principal.toText() ?? \"\"}\n              leadingChars={29}\n              trailingChars={5}\n              id={\"address\"}\n            />\n            <Copy value={selectedWallet?.principal.toText() ?? \"\"} />\n          </div>\n        </div>\n      )}\n      <div className=\"w-[150px] my-4 mx-auto\">\n        <QRCode\n          options={{ width: 150, margin: 0 }}\n          content={selectedAddress ?? selectedWallet?.principal.toText() ?? \"\"}\n        />\n      </div>\n    </div>\n  )\n}\n","import { Principal } from \"@dfinity/principal\"\nimport { principalToAddress } from \"ictool\"\n\nimport { isHex } from \"@nfid-frontend/utils\"\nimport { TokenStandards } from \"@nfid/integration/token/types\"\n\nexport const transformToAddress = (\n  toAddress: string,\n  tokenStandard: TokenStandards,\n): string => {\n  if (tokenStandard === TokenStandards.ICP) {\n    return isHex(toAddress)\n      ? toAddress\n      : principalToAddress(Principal.fromText(toAddress))\n  }\n\n  if (tokenStandard === TokenStandards.DIP20 && isHex(toAddress))\n    throw new Error(\n      `For tokenStandard ${TokenStandards.DIP20} only pricipals are allowed. Invalid address: ${toAddress}`,\n    )\n\n  return toAddress\n}\n","import { Principal } from \"@dfinity/principal\"\n\nimport { isHex } from \"@nfid-frontend/utils\"\nimport { TokenStandards } from \"@nfid/integration/token/types\"\n\nconst PRINCIPAL_LENGTH = 63\nconst IC_ADDRESS_LENGTH = 64\nconst ETH_ADDRESS_LENGTH = 42\n\nexport const validateAddressField = (string: string) => {\n  if (!string.length) return \"This field cannot be empty\"\n  const value = string.replace(/\\s/g, \"\")\n  if (isHex(value) && value.length === 64) return true\n\n  try {\n    if (!!Principal.fromText(value) && value.length === 63) return true\n  } catch {\n    return \"Incorrect account or principal ID\"\n  }\n}\n\nexport const isNotEmpty = (value: string) => {\n  if (value.length) return true\n  return \"This field cannot be empty\"\n}\n\nexport const isValidAddress = (value: string) => {\n  if (isHex(value)) return true\n  return \"Not a valid address\"\n}\n\nexport const isValidPrincipalId = (value: string) => {\n  try {\n    if (Principal.fromText(value)) return true\n  } catch {\n    return \"Not a valid principal ID\"\n  }\n  return \"Not a valid principal ID\"\n}\n\nexport const validateTransferAmountField =\n  (balance?: number | string) => (value: string | number) => {\n    if (Number(value) < 0) return \"Transfer amount can't be negative value\"\n    if (Number(value) === 0) return \"You can't send 0\"\n    if (balance && Number(balance) < Number(value)) return \"Insufficient funds\"\n    return true\n  }\n\nexport const makeAddressFieldValidation =\n  (type: TokenStandards) => (value: string) => {\n    if (typeof isNotEmpty(value) !== \"boolean\") return isNotEmpty(value)\n\n    switch (type) {\n      case TokenStandards.ETH:\n        return typeof isHex(value) === \"boolean\" &&\n          value.length === ETH_ADDRESS_LENGTH\n          ? true\n          : \"Incorrect address\"\n      case TokenStandards.ERC20_ETHEREUM:\n        return typeof isHex(value) === \"boolean\" &&\n          value.length === ETH_ADDRESS_LENGTH\n          ? true\n          : \"Incorrect address\"\n      case TokenStandards.ERC20_POLYGON:\n        return typeof isHex(value) === \"boolean\" &&\n          value.length === ETH_ADDRESS_LENGTH\n          ? true\n          : \"Incorrect address\"\n      case TokenStandards.MATIC:\n        return typeof isHex(value) === \"boolean\" &&\n          value.length === ETH_ADDRESS_LENGTH\n          ? true\n          : \"Incorrect address\"\n      case TokenStandards.BTC:\n        return typeof isHex(value) === \"boolean\" &&\n          value.length > 25 &&\n          value.length < 36\n          ? true\n          : \"Incorrect BTC address\"\n      case TokenStandards.DIP20:\n        return typeof isValidPrincipalId(value) === \"boolean\" &&\n          value.length === PRINCIPAL_LENGTH\n          ? true\n          : \"For DIP20 only principal address allowed\"\n      default:\n        return (typeof isHex(value) === \"boolean\" &&\n          value.length === IC_ADDRESS_LENGTH) ||\n          typeof isValidPrincipalId(value) === \"boolean\"\n          ? true\n          : \"Incorrect account or principal ID\"\n    }\n  }\n","import clsx from \"clsx\"\nimport { useCallback, useEffect } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { toast } from \"react-toastify\"\nimport { TokenConfig } from \"src/ui/connnector/types\"\n\nimport {\n  BlurredLoader,\n  Button,\n  ChooseModal,\n  IconCmpArrow,\n  IconCmpArrowRight,\n  Image,\n  sumRules,\n} from \"@nfid-frontend/ui\"\nimport { TokenStandards } from \"@nfid/integration/token/types\"\n\nimport { useAllToken } from \"frontend/features/fungable-token/use-all-token\"\nimport {\n  useAllWallets,\n  Wallet,\n} from \"frontend/integration/wallet/hooks/use-all-wallets\"\n\nimport { useTokenOptions } from \"../hooks/use-token-options\"\nimport { useWalletOptions } from \"../hooks/use-wallets-options\"\nimport { transformToAddress } from \"../utils/transform-to-address\"\nimport {\n  makeAddressFieldValidation,\n  validateTransferAmountField,\n} from \"../utils/validations\"\n\ninterface ITransferFT {\n  assignToken: (token: TokenConfig) => void\n  assignSourceWallet: (value: string) => void\n  assignReceiverWallet: (value: string) => void\n  assignFromAccount: (value: Wallet) => void\n  assignAmount: (value: string) => void\n  selectedToken?: TokenConfig\n  selectedSourceWallet?: string\n  selectedSourceAccount?: Wallet\n  selectedReceiverWallet?: string\n  onSubmit: () => void\n}\n\nexport const TransferFT = ({\n  assignToken,\n  assignSourceWallet,\n  assignReceiverWallet,\n  assignFromAccount,\n  assignAmount,\n  selectedToken,\n  selectedSourceWallet,\n  selectedReceiverWallet,\n  selectedSourceAccount,\n  onSubmit,\n}: ITransferFT) => {\n  const { walletOptions } = useWalletOptions(selectedToken?.currency ?? \"ICP\")\n  const { tokenOptions } = useTokenOptions()\n  const { token: allTokens } = useAllToken()\n  const { wallets } = useAllWallets()\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    setValue,\n    setError,\n    resetField,\n  } = useForm({\n    mode: \"all\",\n    defaultValues: {\n      amount: undefined as any as number,\n      from: selectedSourceWallet ?? \"\",\n      to: selectedReceiverWallet ?? \"\",\n    },\n  })\n\n  const setFullAmount = useCallback(() => {\n    if (!selectedToken || !selectedToken.balance)\n      return toast.error(\"No selected token or selected token has no balance\", {\n        toastId: \"unexpectedTransferError\",\n      })\n\n    const amount =\n      BigInt(\n        selectedSourceAccount?.balance[selectedToken.currency] ??\n          selectedToken.fee,\n      ) - selectedToken.fee\n\n    if (!amount || typeof amount !== \"bigint\")\n      return toast.error(\"Amount is invalid\", {\n        toastId: \"unexpectedTransferError\",\n      })\n\n    if (amount < 0) {\n      setValue(\"amount\", 0)\n      setError(\"amount\", { message: \"Insufficient funds\" })\n      setTimeout(() => {\n        resetField(\"amount\")\n      }, 2000)\n    } else {\n      resetField(\"amount\")\n      setValue(\"amount\", Number(selectedToken.toPresentation(amount)))\n    }\n  }, [\n    selectedToken,\n    selectedSourceAccount?.balance,\n    setValue,\n    setError,\n    resetField,\n  ])\n\n  const handleSelectToken = useCallback(\n    (value: string) => {\n      const token = allTokens.find((t) => t.currency === value)\n      if (!token) return\n\n      assignToken(token)\n      setValue(\"from\", walletOptions[0].options[0]?.value)\n    },\n    [allTokens, assignToken, setValue, walletOptions],\n  )\n  const handleSelectWallet = useCallback(\n    (value: string) => {\n      const account = wallets?.find((w) =>\n        [\n          w.principal.toText(),\n          w.ethAddress,\n          w.btcAddress,\n          w.accountId,\n        ].includes(value),\n      )\n      if (!account) return\n\n      assignFromAccount(account)\n      assignSourceWallet(value)\n    },\n    [assignFromAccount, assignSourceWallet, wallets],\n  )\n\n  const submit = useCallback(\n    (values: any) => {\n      if (!selectedToken)\n        return toast.error(\n          \"No selected token or selected token has no balance\",\n          {\n            toastId: \"unexpectedTransferError\",\n          },\n        )\n      if (values.from === values.to)\n        return setError(\"to\", {\n          type: \"value\",\n          message: \"You can't transfer to the same wallet\",\n        })\n      assignAmount(values.amount)\n      assignReceiverWallet(\n        transformToAddress(values.to, selectedToken?.tokenStandard),\n      )\n\n      onSubmit()\n    },\n    [assignAmount, assignReceiverWallet, onSubmit, selectedToken, setError],\n  )\n\n  useEffect(() => {\n    if (!selectedToken && allTokens.length) assignToken(allTokens[0])\n  }, [allTokens, assignToken, selectedToken])\n\n  useEffect(() => {\n    assignSourceWallet(walletOptions[0].options[0]?.value)\n  }, [walletOptions]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <BlurredLoader\n      className=\"!p-0 text-xs\"\n      overlayClassnames=\"rounded-xl\"\n      isLoading={!selectedSourceWallet}\n    >\n      <p className=\"mb-1\">Amount to send</p>\n      <div\n        className={clsx(\n          \"border rounded-md flex items-center justify-between pl-4 pr-5 h-20\",\n          errors.amount ? \"ring border-red-600 ring-red-100\" : \"border-black\",\n        )}\n      >\n        <input\n          className={clsx(\n            \"min-w-0 text-3xl placeholder:text-black\",\n            \"outline-none border-none h-[66px] focus:ring-0\",\n            \"p-0\",\n          )}\n          placeholder=\"0.00\"\n          type=\"number\"\n          id=\"amount\"\n          min={0.0}\n          {...register(\"amount\", {\n            required: sumRules.errorMessages.required,\n            validate: validateTransferAmountField(\n              selectedToken?.toPresentation(\n                selectedSourceAccount?.balance[selectedToken.currency],\n              ),\n            ),\n            valueAsNumber: true,\n          })}\n        />\n        <ChooseModal\n          optionGroups={tokenOptions}\n          title=\"Choose an asset\"\n          type=\"trigger\"\n          onSelect={handleSelectToken}\n          isFirstPreselected={false}\n          trigger={\n            <div\n              id={`token_${selectedToken?.currency}`}\n              className=\"flex items-center cursor-pointer shrink-0\"\n            >\n              <Image\n                className=\"w-[26px] mr-1.5\"\n                src={selectedToken?.icon}\n                alt={selectedToken?.currency}\n              />\n              <p className=\"text-lg font-semibold\">{selectedToken?.currency}</p>\n              <IconCmpArrowRight className=\"ml-4\" />\n            </div>\n          }\n        />\n      </div>\n      <div className=\"flex items-center justify-between mt-2 mb-3.5\">\n        <p\n          id={\"balance\"}\n          className={clsx(errors.amount ? \"text-red-600\" : \"text-gray-400\")}\n        >\n          Balance:{\" \"}\n          <span\n            className=\"text-black underline cursor-pointer decoration-dotted\"\n            onClick={setFullAmount}\n          >\n            {selectedToken?.toPresentation(\n              selectedSourceAccount?.balance[selectedToken.currency],\n            )}\n          </span>\n        </p>\n        <p id={\"transfer_fee\"} className=\"text-gray-400\">\n          Transfer fee:{\" \"}\n          {`${selectedToken?.toPresentation(selectedToken?.fee)} ${\n            selectedToken?.feeCurrency ?? selectedToken?.currency\n          }`}\n        </p>\n      </div>\n      <div className=\"mt-4 space-y-5\">\n        <ChooseModal\n          optionGroups={walletOptions}\n          preselectedValue={selectedSourceWallet}\n          label=\"From\"\n          title={\"Choose an account\"}\n          onSelect={(value) => {\n            setValue(\"from\", value)\n            handleSelectWallet(value)\n          }}\n        />\n        <ChooseModal\n          label=\"To\"\n          optionGroups={walletOptions}\n          title={\"Choose an account\"}\n          onSelect={(value) => {\n            resetField(\"to\")\n            setValue(\"to\", value)\n          }}\n          type=\"input\"\n          placeholder={\n            selectedToken?.tokenStandard === \"ICP\"\n              ? \"Recipient principal or account ID\"\n              : \"Recipient principal\"\n          }\n          isFirstPreselected={false}\n          errorText={errors.to?.message}\n          registerFunction={register(\"to\", {\n            required: \"This field cannot be empty\",\n            validate: makeAddressFieldValidation(\n              selectedToken?.tokenStandard ?? TokenStandards.ICP,\n            ),\n          })}\n        />\n        <Button\n          className=\"text-base !mt-[35px]\"\n          type=\"primary\"\n          id={\"sendFT\"}\n          block\n          onClick={handleSubmit(submit)}\n          icon={<IconCmpArrow className=\"rotate-[135deg]\" />}\n        >\n          Send\n        </Button>\n      </div>\n    </BlurredLoader>\n  )\n}\n","import { IGroupedOptions, IGroupOption } from \"@nfid-frontend/ui\"\nimport { Application, getWalletName } from \"@nfid/integration\"\n\nimport { UserNFTDetails } from \"frontend/integration/entrepot/types\"\n\nexport const mapUserNFTDetailsToGroupedOptions = (\n  userNFTDetailsArray: UserNFTDetails[],\n  applications: Application[],\n): IGroupedOptions[] => {\n  // First, group the UserNFTDetails by wallet name\n  const groupedByWallet = userNFTDetailsArray.reduce(\n    (acc: { [key: string]: UserNFTDetails[] }, current) => {\n      const walletName = getWalletName(\n        applications,\n        current.account.domain,\n        current.account.accountId,\n      )\n      if (!acc[walletName]) {\n        acc[walletName] = []\n      }\n      acc[walletName].push(current)\n      return acc\n    },\n    {},\n  )\n\n  // Then, map each group to an IGroupedOptions object\n  const mappedGroups = Object.entries(groupedByWallet).map(\n    ([walletName, userNFTDetails]) => {\n      const options = userNFTDetails.map(\n        (nft) =>\n          ({\n            title: nft.name,\n            subTitle: nft.collection.name,\n            value: nft.tokenId,\n            icon: nft.assetPreview,\n          } as IGroupOption),\n      )\n      return {\n        label: walletName,\n        options,\n      }\n    },\n  )\n\n  return mappedGroups\n}\n","import { useMemo } from \"react\"\n\nimport { useAllNFTs } from \"frontend/apps/identity-manager/profile/assets/hooks\"\nimport { useApplicationsMeta } from \"frontend/integration/identity-manager/queries\"\n\nimport { mapUserNFTDetailsToGroupedOptions } from \"../utils/map-nfts-to-options\"\n\nexport const useNFTsOptions = () => {\n  const { nfts } = useAllNFTs()\n  const { applicationsMeta } = useApplicationsMeta()\n\n  const nftsOptions = useMemo(() => {\n    return mapUserNFTDetailsToGroupedOptions(nfts, applicationsMeta ?? [])\n  }, [applicationsMeta, nfts])\n\n  return { nftsOptions }\n}\n","import clsx from \"clsx\"\nimport { useCallback, useMemo, useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\n\nimport {\n  Button,\n  ChooseModal,\n  IconCmpArrow,\n  IconCmpArrowRight,\n  IconCmpNFTPreview,\n  IconPngEthereum,\n  IconSvgDfinity,\n  Image,\n} from \"@nfid-frontend/ui\"\nimport { truncateString } from \"@nfid-frontend/utils\"\nimport { getWalletName } from \"@nfid/integration\"\nimport { TokenStandards } from \"@nfid/integration/token/types\"\n\nimport { useAllNFTs } from \"frontend/apps/identity-manager/profile/assets/hooks\"\nimport { UserNonFungibleToken } from \"frontend/features/non-fungable-token/types\"\nimport { useApplicationsMeta } from \"frontend/integration/identity-manager/queries\"\n\nimport { useNFTsOptions } from \"../hooks/use-nfts-options\"\nimport { useWalletOptions } from \"../hooks/use-wallets-options\"\nimport { makeAddressFieldValidation } from \"../utils/validations\"\n\ninterface ITransferNFT {\n  assignReceiverWallet: (value: string) => void\n  assignSelectedNFT: (value: UserNonFungibleToken) => void\n  selectedReceiverWallet?: string\n  onSubmit: () => void\n}\n\nexport const TransferNFT = ({\n  selectedReceiverWallet,\n  assignSelectedNFT,\n  assignReceiverWallet,\n  onSubmit,\n}: ITransferNFT) => {\n  const { applicationsMeta } = useApplicationsMeta()\n  const { nftsOptions } = useNFTsOptions()\n  const { nfts } = useAllNFTs()\n  const [selectedNFTId, setSelectedNFTId] = useState(\"\")\n\n  const selectedNFT = useMemo(() => {\n    return nfts?.find((nft) => nft.tokenId === selectedNFTId)\n  }, [nfts, selectedNFTId])\n\n  const { walletOptions } = useWalletOptions(\n    selectedNFT?.blockchain === \"Ethereum\" ? \"ETH\" : \"ICP\",\n  )\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    setValue,\n\n    resetField,\n  } = useForm({\n    mode: \"all\",\n    defaultValues: {\n      to: selectedReceiverWallet ?? \"\",\n    },\n  })\n\n  const submit = useCallback(\n    (values: any) => {\n      if (!selectedNFT) throw new Error(\"No selected nft\")\n      assignSelectedNFT(selectedNFT)\n      assignReceiverWallet(values.to)\n\n      onSubmit()\n    },\n    [assignReceiverWallet, assignSelectedNFT, onSubmit, selectedNFT],\n  )\n\n  return (\n    <div className=\"-mt-2 space-y-2 text-xs\">\n      <ChooseModal\n        label=\"NFT to transfer\"\n        optionGroups={nftsOptions}\n        title={\"Choose an NFT\"}\n        onSelect={(value) => setSelectedNFTId(value)}\n        iconClassnames=\"!w-12 !h-12 !object-cover rounded-md\"\n        trigger={\n          <div className=\"flex items-center justify-between w-full h-[131px] p-2 pr-5 border border-black rounded-md\">\n            <div className=\"flex items-center\">\n              <div className=\"relative flex items-center mr-2.5\">\n                {selectedNFT?.assetPreview ? (\n                  <Image\n                    className=\"object-cover rounded-sm w-28 h-28\"\n                    src={selectedNFT?.assetPreview}\n                    alt={\"\"}\n                  />\n                ) : (\n                  <IconCmpNFTPreview className=\"text-gray-100 rounded-sm w-28 h-28\" />\n                )}\n\n                <div\n                  className={clsx(\n                    \"absolute w-6 h-6 bg-white rounded-full bottom-1 right-1\",\n                    \"flex items-center justify-center\",\n                    !selectedNFT && \"hidden\",\n                  )}\n                >\n                  <Image\n                    className=\"w-4\"\n                    src={\n                      selectedNFT?.blockchain === \"Ethereum\"\n                        ? IconPngEthereum\n                        : IconSvgDfinity\n                    }\n                    alt=\"\"\n                  />\n                </div>\n              </div>\n              {!selectedNFT ? (\n                <p className=\"leading-3 text-gray-400\">Choose NFT</p>\n              ) : (\n                <div>\n                  <p className=\"mb-1 text-sm\">{selectedNFT.name}</p>\n                  <p className=\"text-xs leading-3 text-gray-400\">\n                    {selectedNFT.collection.name}\n                  </p>\n                </div>\n              )}\n            </div>\n            <div className=\"cursor-pointer\">\n              <IconCmpArrowRight />\n            </div>\n          </div>\n        }\n        type=\"trigger\"\n      />\n      <div className=\"text-gray-400\">\n        <p className=\"mb-1\">From</p>\n        <div className={clsx(\"rounded-md bg-gray-100 px-2.5 h-14 mt-1\")}>\n          {selectedNFT ? (\n            <div className=\"flex flex-col justify-center h-full\">\n              <p className=\"text-black mb-[3px]\">\n                {getWalletName(\n                  applicationsMeta ?? [],\n                  selectedNFT?.account.domain ?? \"\",\n                  selectedNFT?.account.accountId ?? \"\",\n                )}\n              </p>\n              <p>{truncateString(selectedNFT.owner, 40)}</p>\n            </div>\n          ) : (\n            <p className=\"leading-[56px] text-sm\">Your NFT account address</p>\n          )}\n        </div>\n      </div>\n      <ChooseModal\n        label=\"To\"\n        optionGroups={walletOptions}\n        title={\"Choose an account\"}\n        onSelect={(value) => {\n          resetField(\"to\")\n          setValue(\"to\", value)\n        }}\n        type=\"input\"\n        placeholder={`Recipient ${\n          selectedNFT?.blockchain ?? \"blockchain\"\n        } address`}\n        isFirstPreselected={false}\n        errorText={errors.to?.message}\n        registerFunction={register(\"to\", {\n          required: \"This field cannot be empty\",\n          validate: makeAddressFieldValidation(\n            selectedNFT?.blockchain === \"Ethereum\"\n              ? TokenStandards.ETH\n              : TokenStandards.ICP,\n          ),\n        })}\n      />\n      <Button\n        className=\"text-base !mt-[35px]\"\n        type=\"primary\"\n        block\n        onClick={handleSubmit(submit)}\n        icon={<IconCmpArrow className=\"rotate-[135deg]\" />}\n      >\n        Send\n      </Button>\n    </div>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\nimport { Button, Image, ImagePngSuccess } from \"@nfid-frontend/ui\"\n\ninterface ITransferModalSuccess {\n  transactionMessage: string\n  transactionRoute?: string\n  onClose: () => void\n}\n\nexport const TransferSuccess: React.FC<ITransferModalSuccess> = ({\n  transactionMessage,\n  transactionRoute,\n  onClose,\n}) => {\n  return (\n    <div\n      id={\"success_window\"}\n      className={clsx(\n        \"text-black text-center\",\n        \"flex flex-grow flex-col justify-between\",\n      )}\n    >\n      <div className=\"flex-grow\">\n        <Image\n          className=\"w-[240px] mx-auto\"\n          src={ImagePngSuccess}\n          alt=\"success\"\n        />\n        <p className=\"text-xl font-bold\">Transaction successful</p>\n        <p className=\"font-bold mt-[10px] mb-3\">{transactionMessage}</p>\n        <p className={clsx(\"text-sm\", !transactionRoute?.length && \"hidden\")}>\n          You can view transaction details in the <br />\n          <a\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            href={transactionRoute}\n            onClick={onClose}\n            className=\"transition-opacity cursor-pointer text-blue hover:opacity-75\"\n          >\n            Transaction history\n          </a>\n          .\n        </p>\n      </div>\n      <Button type=\"primary\" block className=\"mt-[36px]\" onClick={onClose}>\n        Close\n      </Button>\n    </div>\n  )\n}\n","import { IconCmpArrow, ITab } from \"@nfid-frontend/ui\"\n\nexport const transferTabs: ITab[] = [\n  {\n    label: \"Send\",\n    value: \"send\",\n    icon: <IconCmpArrow className=\"rotate-[135deg]\" />,\n  },\n  {\n    label: \"Receive\",\n    value: \"receive\",\n    icon: <IconCmpArrow className=\"-rotate-[45deg]\" />,\n  },\n]\n","import { useActor } from \"@xstate/react\"\nimport clsx from \"clsx\"\nimport { ToggleButton } from \"packages/ui/src/molecules/toggle-button\"\nimport React, { useCallback, useContext, useMemo } from \"react\"\nimport { toast } from \"react-toastify\"\n\nimport { BlurredLoader, Tabs } from \"@nfid-frontend/ui\"\n\nimport { ProfileContext } from \"frontend/provider\"\n\nimport { TransferReceive } from \"./components/receive\"\nimport { TransferFT } from \"./components/send-ft\"\nimport { TransferNFT } from \"./components/send-nft\"\nimport { TransferSuccess } from \"./components/success\"\nimport { transferTabs } from \"./constants\"\n\nexport const TransferModalCoordinator = () => {\n  const globalServices = useContext(ProfileContext)\n\n  const [state, send] = useActor(globalServices.transferService)\n\n  React.useEffect(\n    () =>\n      console.log(\"TransferModalCoordinator\", {\n        context: state.context,\n        state: state.value,\n      }),\n    [state.value, state.context],\n  )\n\n  React.useEffect(() => {\n    if (state.context.error?.message?.length) {\n      toast.error(state.context?.error.message, {\n        toastId: \"unexpectedTransferError\",\n      })\n\n      setTimeout(() => {\n        send({ type: \"ASSIGN_ERROR\", data: \"\" })\n      }, 5000)\n    }\n  }, [send, state.context.error])\n\n  const Component = useMemo(() => {\n    switch (true) {\n      case state.matches(\"SendMachine.SendFT\"):\n        return (\n          <TransferFT\n            selectedToken={state.context?.selectedFT}\n            selectedReceiverWallet={state.context?.receiverWallet}\n            selectedSourceWallet={state.context?.sourceWalletAddress}\n            selectedSourceAccount={state.context?.sourceAccount}\n            assignToken={(token) =>\n              send({ type: \"ASSIGN_SELECTED_FT\", data: token })\n            }\n            assignSourceWallet={(value) =>\n              send({ type: \"ASSIGN_SOURCE_WALLET\", data: value })\n            }\n            assignReceiverWallet={(value) =>\n              send({ type: \"ASSIGN_RECEIVER_WALLET\", data: value })\n            }\n            assignAmount={(value) =>\n              send({ type: \"ASSIGN_AMOUNT\", data: value })\n            }\n            assignFromAccount={(value) =>\n              send({ type: \"ASSIGN_SOURCE_ACCOUNT\", data: value })\n            }\n            onSubmit={() => send({ type: \"ON_SUBMIT\" })}\n          />\n        )\n      case state.matches(\"SendMachine.SendNFT\"):\n        return (\n          <TransferNFT\n            assignReceiverWallet={(value) =>\n              send({ type: \"ASSIGN_RECEIVER_WALLET\", data: value })\n            }\n            onSubmit={() => send({ type: \"ON_SUBMIT\" })}\n            assignSelectedNFT={(value) =>\n              send({ type: \"ASSIGN_SELECTED_NFT\", data: value })\n            }\n          />\n        )\n      case state.matches(\"ReceiveMachine\"):\n        return (\n          <TransferReceive\n            assignSelectedToken={(token) =>\n              send({ type: \"ASSIGN_SELECTED_FT\", data: token })\n            }\n            assignSourceWallet={(value) =>\n              send({ type: \"ASSIGN_SOURCE_WALLET\", data: value })\n            }\n            selectedToken={state.context?.selectedFT}\n            selectedSourceWallet={state.context?.sourceWalletAddress}\n          />\n        )\n      case state.matches(\"Success\"):\n        return (\n          <TransferSuccess\n            transactionMessage={state.context.successMessage}\n            onClose={() => send({ type: \"HIDE\" })}\n          />\n        )\n      default:\n        return <BlurredLoader overlayClassnames=\"z-10 rounded-xl\" isLoading />\n    }\n  }, [send, state])\n\n  const onModalTypeChange = useCallback(\n    (value: string) => {\n      // TODO: send receive\n      return send({ type: \"CHANGE_DIRECTION\", data: value as any })\n    },\n    [send],\n  )\n\n  const onTokenTypeChange = useCallback(\n    (isNFT: boolean) => {\n      return send({ type: \"CHANGE_TOKEN_TYPE\", data: isNFT ? \"nft\" : \"ft\" })\n    },\n    [send],\n  )\n\n  if (state.matches(\"Hidden\")) return null\n\n  return (\n    <div\n      className={clsx([\n        \"transition ease-in-out delay-150 duration-300\",\n        \"z-40 top-0 left-0 w-full h-screen\",\n        \"fixed bg-opacity-75 bg-gray-600\",\n      ])}\n      style={{ margin: 0 }}\n      onClick={() => send(\"HIDE\")}\n    >\n      <div\n        className={clsx(\n          \"rounded-xl shadow-lg p-5 text-black\",\n          \"z-20 bg-white absolute flex flex-col\",\n          \"left-1/2 -translate-x-1/2 top-1/2 -translate-y-1/2\",\n          \"w-[95%] sm:w-[450px] h-[540px]\",\n        )}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {!state.matches(\"Success\") && (\n          <Tabs\n            tabs={transferTabs}\n            defaultValue={state.context.direction}\n            onValueChange={onModalTypeChange}\n            isFitLine={false}\n          />\n        )}\n        {state.context.direction === \"send\" && !state.matches(\"Success\") && (\n          <ToggleButton\n            firstValue=\"Token\"\n            secondValue=\"Collectible\"\n            className=\"mb-6\"\n            onChange={onTokenTypeChange}\n            defaultValue={state.context.tokenType === \"nft\"}\n          />\n        )}\n        {Component}\n      </div>\n    </div>\n  )\n}\n","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgSendReceive(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.99999 2.00001L10 2.00001M10 2.00001L10 7.00002M10 2.00001L2.49998 9.50003\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 11L8 16M8 16L13 16M8 16L15.5 8.49998\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSendReceive);\nexport default __webpack_public_path__ + \"static/media/send_receive.2189706c6d7fa8a1b884ebd5e7bce44d.svg\";\nexport { ForwardRef as ReactComponent };","import { useActor } from \"@xstate/react\"\nimport clsx from \"clsx\"\nimport { useContext } from \"react\"\n\nimport { Button, Image } from \"@nfid-frontend/ui\"\n\nimport { ProfileContext } from \"frontend/provider\"\n\nimport SendReceiveIcon from \"./send_receive.svg\"\n\nexport const SendReceiveButton = () => {\n  const globalServices = useContext(ProfileContext)\n\n  const [, send] = useActor(globalServices.transferService)\n  return (\n    <div id=\"sendReceiveButton\">\n      <Button\n        className={clsx(\"px-[10px] py-[11px] hidden md:flex z-10\")}\n        id=\"sendReceiveButton\"\n        onClick={() => send(\"SHOW\")}\n        icon={<Image src={SendReceiveIcon} alt=\"send/receive\" />}\n      >\n        Send / Receive\n      </Button>\n      <div\n        className={clsx(\n          \"md:hidden fixed bottom-3 right-3 w-12 h-12\",\n          \"bg-blue-600 flex items-center justify-center\",\n          \"rounded-full shadow-blueLight shadow-blue-600\",\n          \"cursor-pointer z-30\",\n        )}\n        onClick={() => send(\"SHOW\")}\n      >\n        <Image className=\"w-6 h-6\" src={SendReceiveIcon} alt=\"transaction\" />\n      </div>\n    </div>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface LogoTextProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const LogoText: React.FC<LogoTextProps> = ({ className }) => {\n  return (\n    <svg\n      width=\"70\"\n      height=\"37\"\n      viewBox=\"0 0 70 37\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={clsx(\"\", className)}\n    >\n      <path\n        d=\"M13.9423 10.0312C14.2583 10.0312 14.4163 10.0312 14.537 10.0956C14.6432 10.1521 14.7295 10.2424 14.7836 10.3534C14.8451 10.4796 14.8451 10.6448 14.8451 10.9752V25.4014C14.8451 25.7319 14.8451 25.8971 14.7836 26.0233C14.7295 26.1343 14.6432 26.2245 14.537 26.2811C14.4163 26.3454 14.2583 26.3454 13.9423 26.3454H11.6363C11.4803 26.3454 11.4023 26.3454 11.3301 26.325C11.2661 26.307 11.2056 26.2772 11.1515 26.2372C11.0904 26.1921 11.0406 26.1293 10.9411 26.0036L4.80368 18.2574C4.65611 18.0711 4.58232 17.978 4.51784 17.9682C4.46199 17.9598 4.40579 17.9809 4.36795 18.0247C4.32426 18.0753 4.32426 18.1962 4.32426 18.438V25.4014C4.32426 25.7319 4.32426 25.8971 4.26276 26.0233C4.20866 26.1343 4.12234 26.2245 4.01617 26.2811C3.89547 26.3454 3.73746 26.3454 3.42144 26.3454H0.902817C0.586801 26.3454 0.428793 26.3454 0.308091 26.2811C0.201919 26.2245 0.115598 26.1343 0.0615007 26.0233C0 25.8971 0 25.7319 0 25.4014V10.9752C0 10.6448 0 10.4796 0.0615007 10.3534C0.115598 10.2424 0.201919 10.1521 0.308091 10.0956C0.428793 10.0312 0.586801 10.0312 0.902816 10.0312H3.20881C3.36481 10.0312 3.44281 10.0312 3.51506 10.0516C3.57906 10.0697 3.63952 10.0994 3.69367 10.1394C3.75477 10.1846 3.80453 10.2474 3.90405 10.373L10.0415 18.1193C10.189 18.3055 10.2628 18.3987 10.3273 18.4084C10.3831 18.4169 10.4393 18.3957 10.4772 18.352C10.5209 18.3014 10.5209 18.1805 10.5209 17.9386V10.9752C10.5209 10.6448 10.5209 10.4796 10.5824 10.3534C10.6365 10.2424 10.7228 10.1521 10.829 10.0956C10.9497 10.0312 11.1077 10.0312 11.4237 10.0312H13.9423Z\"\n        fill=\"black\"\n      />\n      <path\n        d=\"M22.4022 13.5971C22.3074 13.5971 22.26 13.5971 22.2237 13.6164C22.1919 13.6333 22.166 13.6604 22.1498 13.6937C22.1313 13.7316 22.1313 13.7811 22.1313 13.8802V16.903C22.1313 17.0021 22.1313 17.0517 22.1498 17.0895C22.166 17.1228 22.1919 17.1499 22.2237 17.1669C22.26 17.1862 22.3074 17.1862 22.4022 17.1862H28.1161C28.4321 17.1862 28.5901 17.1862 28.7108 17.2505C28.817 17.307 28.9033 17.3973 28.9574 17.5083C29.0189 17.6345 29.0189 17.7997 29.0189 18.1301V19.808C29.0189 20.1384 29.0189 20.3036 28.9574 20.4299C28.9033 20.5409 28.817 20.6311 28.7108 20.6877C28.5901 20.752 28.4321 20.752 28.1161 20.752H22.4022C22.3074 20.752 22.26 20.752 22.2237 20.7713C22.1919 20.7882 22.166 20.8153 22.1498 20.8486C22.1313 20.8865 22.1313 20.936 22.1313 21.0352V25.4014C22.1313 25.7319 22.1313 25.8971 22.0698 26.0233C22.0157 26.1343 21.9294 26.2245 21.8232 26.2811C21.7025 26.3454 21.5445 26.3454 21.2285 26.3454H18.6207C18.3047 26.3454 18.1467 26.3454 18.026 26.2811C17.9198 26.2245 17.8335 26.1343 17.7794 26.0233C17.7179 25.8971 17.7179 25.7319 17.7179 25.4014V10.9752C17.7179 10.6448 17.7179 10.4796 17.7794 10.3534C17.8335 10.2424 17.9198 10.1521 18.026 10.0956C18.1467 10.0312 18.3047 10.0312 18.6207 10.0312H29.0523C29.3683 10.0312 29.5263 10.0312 29.647 10.0956C29.7532 10.1521 29.8395 10.2424 29.8936 10.3534C29.9551 10.4796 29.9551 10.6448 29.9551 10.9752V12.6531C29.9551 12.9835 29.9551 13.1487 29.8936 13.2749C29.8395 13.3859 29.7532 13.4762 29.647 13.5328C29.5263 13.5971 29.3683 13.5971 29.0523 13.5971H22.4022Z\"\n        fill=\"black\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M44.2751 2.05897C44.7399 2.00715 45.0766 1.57116 45.027 1.08516C44.9774 0.599165 44.5605 0.24719 44.0957 0.299006L42.3671 0.491699C41.4815 0.590417 40.7712 0.669594 40.1943 0.778949C39.6 0.891604 39.0907 1.0456 38.6177 1.32278C37.8497 1.77281 37.213 2.43227 36.7756 3.23088C36.5062 3.72285 36.3545 4.25376 36.2418 4.87364C36.1323 5.47528 36.0507 6.21649 35.9489 7.14043L35.9445 7.18023L35.7748 8.94512C35.7281 9.43142 36.0672 9.86528 36.5323 9.91418C36.9974 9.96308 37.4123 9.6085 37.4591 9.1222L37.6276 7.37003C37.7335 6.40833 37.8085 5.73352 37.9047 5.20436C37.9992 4.68504 38.1047 4.36599 38.2447 4.11035C38.5296 3.59007 38.9445 3.16021 39.4453 2.86678C39.6914 2.72253 39.9981 2.61494 40.4963 2.52049C41.005 2.42406 41.6536 2.3512 42.5785 2.2481L44.2751 2.05897ZM60.744 1.08516C60.6944 1.57116 61.0311 2.00715 61.4959 2.05897L63.1925 2.2481C64.1174 2.3512 64.766 2.42406 65.2747 2.52049C65.7729 2.61494 66.0796 2.72253 66.3257 2.86678C66.8265 3.16021 67.2414 3.59007 67.5263 4.11035C67.6663 4.36599 67.7718 4.68504 67.8663 5.20436C67.9625 5.73352 68.0375 6.40833 68.1434 7.37003L68.3119 9.1222C68.3587 9.6085 68.7736 9.96308 69.2387 9.91418C69.7038 9.86528 70.0429 9.43142 69.9962 8.94512L69.8265 7.18023L69.8221 7.14043C69.7203 6.21649 69.6387 5.47528 69.5292 4.87364C69.4165 4.25376 69.2648 3.72285 68.9953 3.23088C68.558 2.43227 67.9213 1.77281 67.1533 1.32278C66.6803 1.0456 66.171 0.891604 65.5767 0.778949C64.9998 0.669594 64.2895 0.590417 63.4039 0.491699L61.6753 0.299006C61.2105 0.24719 60.7935 0.599165 60.744 1.08516ZM60.7435 35.2913C60.6939 34.8053 61.0306 34.3693 61.4954 34.3175L63.192 34.1284C64.1169 34.0253 64.7655 33.9524 65.2742 33.856C65.7724 33.7615 66.0791 33.6539 66.3252 33.5097C66.826 33.2163 67.2409 32.7864 67.5259 32.2661C67.6658 32.0105 67.7713 31.6914 67.8658 31.1721C67.962 30.6429 68.037 29.9681 68.1429 29.0064L68.3114 27.2543C68.3582 26.768 68.7731 26.4134 69.2382 26.4623C69.7033 26.5112 70.0425 26.945 69.9957 27.4313L69.826 29.1962L69.8216 29.236C69.7198 30.16 69.6382 30.9012 69.5287 31.5028C69.416 32.1227 69.2643 32.6536 68.9949 33.1456C68.5575 33.9442 67.9208 34.6037 67.1528 35.0537C66.6798 35.3309 66.1705 35.4849 65.5762 35.5975C64.9993 35.7069 64.289 35.786 63.4034 35.8848L61.6749 36.0775C61.21 36.1293 60.7931 35.7773 60.7435 35.2913ZM45.027 35.2912C45.0766 34.8052 44.7399 34.3692 44.2751 34.3174L42.5785 34.1283C41.6536 34.0252 41.005 33.9523 40.4963 33.8559C39.9981 33.7614 39.6914 33.6538 39.4453 33.5096C38.9445 33.2162 38.5296 32.7863 38.2447 32.266C38.1047 32.0104 37.9992 31.6913 37.9047 31.172C37.8085 30.6428 37.7335 29.968 37.6276 29.0063L37.4591 27.2542C37.4123 26.7679 36.9974 26.4133 36.5323 26.4622C36.0672 26.5111 35.7281 26.9449 35.7748 27.4312L35.9445 29.1961L35.9489 29.2359C36.0507 30.1599 36.1323 30.9011 36.2418 31.5027C36.3545 32.1226 36.5062 32.6535 36.7756 33.1455C37.213 33.9441 37.8497 34.6036 38.6177 35.0536C39.0907 35.3308 39.6 35.4848 40.1943 35.5974C40.7712 35.7068 41.4815 35.7859 42.3671 35.8847L44.0957 36.0774C44.5605 36.1292 44.9774 35.7772 45.027 35.2912ZM44.8358 11.3653C44.2836 11.3653 43.8358 11.813 43.8358 12.3653V24.2729C43.8358 24.8252 44.2836 25.2729 44.8358 25.2729H46.5982C47.1505 25.2729 47.5982 24.8252 47.5982 24.2729V12.3653C47.5982 11.813 47.1505 11.3653 46.5982 11.3653H44.8358ZM51.0701 11.3653C50.5178 11.3653 50.0701 11.813 50.0701 12.3653V24.2729C50.0701 24.8252 50.5178 25.2729 51.0701 25.2729H56.3597C57.8166 25.2729 59.1087 24.9881 60.2361 24.4186C61.3636 23.849 62.2377 23.041 62.8584 21.9947C63.4791 20.9483 63.7895 19.7231 63.7895 18.3191C63.7895 16.9151 63.4791 15.6899 62.8584 14.6435C62.2377 13.5971 61.3636 12.7891 60.2361 12.2196C59.1087 11.65 57.8166 11.3653 56.3597 11.3653H51.0701ZM58.944 21.1205C58.2599 21.796 57.3478 22.1337 56.2077 22.1337H54.1325C53.9668 22.1337 53.8325 21.9994 53.8325 21.8337V14.8044C53.8325 14.6387 53.9668 14.5044 54.1325 14.5044H56.2077C57.3478 14.5044 58.2599 14.8422 58.944 15.5177C59.6407 16.1932 59.9891 17.127 59.9891 18.3191C59.9891 19.5111 59.6407 20.4449 58.944 21.1205Z\"\n        fill=\"url(#paint0_linear_2608_11359)\"\n      />\n      <defs>\n        <linearGradient\n          id=\"paint0_linear_2608_11359\"\n          x1=\"43.9989\"\n          y1=\"12.2042\"\n          x2=\"56.4702\"\n          y2=\"29.5414\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"#CC5CDC\" />\n          <stop offset=\"0.244792\" stopColor=\"#7B66FF\" />\n          <stop offset=\"0.520833\" stopColor=\"#1F8AF0\" />\n          <stop offset=\"0.760417\" stopColor=\"#00D1FF\" />\n          <stop offset=\"1\" stopColor=\"#3DEDD7\" />\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\nimport { LogoText } from \"./logo-text\"\n\ninterface LogoProps extends React.HTMLAttributes<HTMLDivElement> {\n  nav?: boolean\n}\n\nexport const Logo: React.FC<LogoProps> = ({ className, nav = false }) => {\n  return (\n    <a\n      href={nav ? \"/\" : \"#\"}\n      className={clsx(\n        \"flex items-center space-x-2 font-black tracking-wide text-black select-none\",\n        nav\n          ? \"hover:scale-110 transition-all duration-300 text-2xl\"\n          : \"pointer-events-none text-3xl\",\n        className,\n      )}\n    >\n      <LogoText />\n    </a>\n  )\n}\n","var _path, _path2, _path3;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgMenu(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23 20H1\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20 12H1\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23 4H1\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMenu);\nexport default __webpack_public_path__ + \"static/media/menu.29cb4cd98126e26e0cdc0154987b1478.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from \"clsx\"\nimport React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport { getImageUrl } from \"@nfid-frontend/ui\"\n\ninterface IProfileSidebarItem extends React.HTMLAttributes<HTMLDivElement> {\n  icon?: string\n  title: string\n  to: string\n  isActive?: boolean\n}\n\nconst ProfileSidebarItem: React.FC<IProfileSidebarItem> = ({\n  icon,\n  title,\n  onClick,\n  className,\n  isActive,\n  to,\n  id,\n}) => {\n  return (\n    <Link\n      id={id}\n      to={to}\n      className={clsx(\n        \"h-[50px] flex items-center space-x-2.5 px-2.5 rounded-[4px]\",\n        \"hover:bg-gray-100 transition-colors cursor-pointer\",\n        \"md:w-[50px] md:justify-center\",\n        \"lg:w-auto lg:justify-start\",\n        isActive && \"bg-gray-100\",\n      )}\n    >\n      <div\n        className={clsx(\"w-6 h-6\", isActive ? \"bg-blue-600\" : \"bg-gray-700\")}\n        style={{\n          mask: `url(${getImageUrl(icon as string)})`,\n          WebkitMask: `url(${getImageUrl(icon as string)})`,\n        }}\n      />\n      <span\n        className={clsx(\n          className ?? \"text-sm font-semibold text-gray-700\",\n          \"sm:block md:hidden lg:block\",\n        )}\n      >\n        {title}\n      </span>\n    </Link>\n  )\n}\n\nexport default ProfileSidebarItem\n","import clsx from \"clsx\"\nimport React from \"react\"\n\nimport { profileSidebarItems } from \"frontend/apps/identity-manager/profile/routes\"\n\nimport ProfileSidebarItem from \"./sidebar-item\"\n\ninterface IProfileSidebar extends React.HTMLAttributes<HTMLDivElement> {\n  id: string\n}\n\nconst ProfileSidebar: React.FC<IProfileSidebar> = ({ id, className }) => {\n  return (\n    <div id={id} className={clsx(\"sticky top-4\", className)}>\n      {profileSidebarItems.map((item, index) => (\n        <ProfileSidebarItem\n          icon={item.icon}\n          title={item.title}\n          to={item.link}\n          key={`sidebarItem_${index}`}\n          isActive={window.location.pathname.includes(item.link)}\n          id={item.id}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default ProfileSidebar\n","import clsx from \"clsx\"\nimport React from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport User from \"src/assets/userpics/userpic_6.svg\"\n\nimport { Image } from \"@nfid-frontend/ui\"\n\nimport { useAuthentication } from \"frontend/apps/authentication/use-authentication\"\nimport { SendReceiveButton } from \"frontend/apps/identity-manager/profile/send-receive-button\"\nimport { useVaultDelegation } from \"frontend/features/vaults/hooks/use-vault-delegation\"\nimport { useProfile } from \"frontend/integration/identity-manager/queries\"\nimport { Accordion } from \"frontend/ui/atoms/accordion\"\nimport { Logo } from \"frontend/ui/atoms/images/logo\"\nimport { ButtonMenu } from \"frontend/ui/atoms/menu\"\nimport useClickOutside from \"frontend/ui/utils/use-click-outside\"\n\nimport MenuIcon from \"./assets/menu.svg\"\n\nimport AuthenticatedPopup from \"../navigation-popup\"\nimport ProfileSidebar from \"../profile-sidebar\"\n\ninterface IProfileHeader extends React.HTMLAttributes<HTMLDivElement> {\n  anchor?: number\n}\n\nconst ProfileHeader: React.FC<IProfileHeader> = ({ className }) => {\n  const [isPopupVisible, setIsPopupVisible] = React.useState(false)\n  const popupRef = useClickOutside(() => setIsPopupVisible(false))\n  const { profile } = useProfile()\n  const { logout } = useAuthentication()\n  const navigate = useNavigate()\n  useVaultDelegation(profile?.anchor)\n\n  return (\n    <div\n      className={clsx(\n        \"w-full h-28 flex justify-between items-center pt-14\",\n        \"md:h-[70px] md:pt-0\",\n        className,\n      )}\n    >\n      <Logo />\n      <div className={clsx(\"hidden\", \"md:flex md:space-x-5 md:h-10\")}>\n        <SendReceiveButton />\n        <div className={clsx(\"relative\")} ref={popupRef} id=\"profile\">\n          <Image\n            className={clsx(\"cursor-pointer w-10\")}\n            src={User}\n            alt=\"profile icon\"\n            onClick={() => setIsPopupVisible(!isPopupVisible)}\n          />\n          {isPopupVisible && (\n            <AuthenticatedPopup\n              onSignOut={logout}\n              anchor={profile?.anchor ?? 0}\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"md:hidden\">\n        <ButtonMenu\n          buttonElement={\n            <Image\n              id=\"mobile-menu\"\n              src={MenuIcon}\n              alt=\"menu\"\n              className={clsx(\"transform rotate-180\", \"md:hidden\")}\n            />\n          }\n        >\n          {(toggleMenu) => (\n            <div\n              className={clsx(\n                \"pl-2 pt-20 font-bold bg-white rounded w-[70vw] z-50\",\n              )}\n            >\n              <Accordion\n                isBorder={false}\n                style={{ padding: 0 }}\n                detailsClassName=\"pb-0\"\n                title={\n                  <div\n                    className=\"h-[60px] items-center flex p-2.5\"\n                    id=\"profile-mobile\"\n                  >\n                    <div\n                      className=\"flex items-center justify-center w-10 h-10 rounded-full bg-blue-base shrink-0\"\n                      onClick={toggleMenu}\n                    >\n                      <Image src={User} alt=\"user\" className=\"cursor-pointer\" />\n                    </div>\n                    <p className=\"text-sm text-gray-700 px-2.5 w-full\">\n                      {profile?.name ?? profile?.anchor ?? \"\"}\n                    </p>\n                  </div>\n                }\n                details={\n                  <div\n                    className=\"text-sm font-light text-black pl-[60px]\"\n                    id=\"profile-mobile-details\"\n                  >\n                    <div\n                      className=\"flex items-center h-10\"\n                      onClick={() => navigate(`/faq`)}\n                    >\n                      Help\n                    </div>\n                    <div className=\"flex items-center h-10\" onClick={logout}>\n                      Log out\n                    </div>\n                  </div>\n                }\n              />\n              <ProfileSidebar id=\"mobile\" className=\"mt-5\" />\n            </div>\n          )}\n        </ButtonMenu>\n        <SendReceiveButton />\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileHeader\n","import clsx from \"clsx\"\nimport React from \"react\"\n\nimport { ArrowButton, Tooltip } from \"@nfid-frontend/ui\"\nimport { Image } from \"@nfid-frontend/ui\"\n\nimport { TransferModalCoordinator } from \"frontend/features/transfer-modal/coordinator\"\nimport { Loader } from \"frontend/ui/atoms/loader\"\nimport ProfileHeader from \"frontend/ui/organisms/profile-header\"\nimport ProfileSidebar from \"frontend/ui/organisms/profile-sidebar\"\n\ninterface IProfileTemplate extends React.HTMLAttributes<HTMLDivElement> {\n  pageTitle?: string\n  icon?: string\n  showBackButton?: boolean\n  onIconClick?: () => void\n  headerClassName?: string\n  containerClassName?: string\n  isLoading?: boolean\n  headerMenu?: React.ReactNode\n  iconTooltip?: string\n}\n\nconst ProfileTemplate: React.FC<IProfileTemplate> = ({\n  pageTitle,\n  icon,\n  showBackButton,\n  onIconClick,\n  children,\n  className,\n  headerClassName,\n  containerClassName,\n  isLoading = false,\n  headerMenu,\n  iconTooltip,\n}) => {\n  const handleNavigateBack = React.useCallback(() => {\n    window.history.back()\n  }, [])\n\n  return (\n    <div className={clsx(\"relative min-h-screen overflow-hidden\")}>\n      <ProfileHeader className={clsx(\"px-4 sm:px-[30px]\", headerClassName)} />\n      <TransferModalCoordinator />\n      <div\n        className={clsx(\n          \"h-[calc(100vh-70px)] relative z-1 px-4\",\n          \"sm:gap-[30px] sm:px-[30px]\",\n          \"md:grid md:grid-cols-[50px,1fr]\",\n          \"lg:grid-cols-[256px,1fr]\",\n          \"overflow-auto\",\n          containerClassName,\n        )}\n      >\n        <div className={clsx(\"hidden mt-5 -ml-3 md:block relative\")}>\n          <ProfileSidebar id=\"desktop\" />\n        </div>\n        <section className={clsx(\"relative\", className)}>\n          <div className=\"flex justify-between h-[70px] items-start mt-5\">\n            <div className=\"sticky left-0 flex items-center space-x-2\">\n              {showBackButton && <ArrowButton onClick={handleNavigateBack} />}\n              <p className=\"text-[28px] block\" id={\"page_title\"}>\n                {pageTitle}\n              </p>\n            </div>\n\n            {icon && onIconClick && (\n              <Tooltip tip={iconTooltip}>\n                <Image\n                  src={icon}\n                  alt=\"icon\"\n                  onClick={onIconClick}\n                  className=\"w-6 h-6 transition-all cursor-pointer hover:opacity-70\"\n                />\n              </Tooltip>\n            )}\n            {headerMenu}\n          </div>\n          {children}\n        </section>\n      </div>\n      <Loader isLoading={isLoading} />\n    </div>\n  )\n}\n\nexport default ProfileTemplate\n","export const truncateString = (\n  str: string,\n  leadingChars: number,\n  trailingChars?: number,\n): string => {\n  if (str.length < leadingChars) return str\n  if (trailingChars) {\n    const splitAt = str.length - trailingChars\n    return `${str.slice(0, leadingChars)}...${str.slice(splitAt)}`\n  }\n\n  return `${str.slice(0, leadingChars)}...`\n}\n\nexport const copyToClipboard = (\n  e: { stopPropagation: () => void },\n  value?: string,\n  callback?: () => void,\n) => {\n  e.stopPropagation()\n  navigator.clipboard.writeText(value ?? \"\")\n  callback && callback()\n}\n"],"names":["NonFungibleAssetConnector","constructor","config","getIdentity","async","profile","loadProfileFromLocalStorage","fetchProfile","identity","getWalletDelegation","anchor","filterPrincipals","length","includes","getPrincipal","toString","this","assetFilter","identities","map","filter","principal","nfts","Promise","all","userNFTS","assetService","getItemsByUser","items","nft","conf","account","domain","label","accountId","assetFullsize","url","image","defaultLogo","format","assetPreview","thumbnail","MaticSvg","blockchainLogo","blockchain","collection","description","id","name","contractName","standard","tokenType","clipboardText","contractId","contract","index","title","tokenId","toUserNFT","getTokenStandard","getCacheTtl","ethereumNftConnector","Blockchain","IconPngEthereum","ethereumAsset","polygonNftConnector","polygonAsset","NftFactory","ConnectorFactory","getNFToken","assetFilters","process","getCacheKey","key","functionToCall","args","reduce","acc","getFunctionToCall","connector","getNonFungibleItems","nftFactory","useAllNFTs","supportedBlockchains","getKeys","configs","tokens","blockchains","data","rest","useSWR","e","console","error","flat","useNFTConfig","principals","useAllPrincipals","applicationsMeta","useApplicationsMeta","isLoading","isValidating","principalTokens","dedupingInterval","focusThrottleInterval","revalidateIfStale","React","walletName","getWalletName","canisterId","owner","toText","link","Number","ICPLogo","find","f","concat","isDefaultLabel","a","test","undefined","toUSD","value","exchangeRate","toFixed","mapApplicationBalance","toPresentation","appName","currentAppTotalBalance","token","accountBalance","applicationMatch","currentApp","isExplicitlyIncluded","icon","tokenBalance","accounts","balance","accountName","parseInt","principalId","address","principalToAddress","Principal","usdBalance","sort","b","localeCompare","accumulateAppAccountBalance","balances","applications","excludeEmpty","includeEmptyApps","rawBalance","totalBalanceValue","BigInt","COINBASE_RATES_URL","DEFAULT_EXCHANGE_RATES","useExchangeRates","prices","fetch","then","res","json","rates","useMemo","priceInToken","priceInUsd","parseFloat","useBalanceICPAll","isLoadingICPExchangeRate","useICPExchangeRate","dip20Token","useAllDip20Token","isLoadingBalances","useUserBalances","debug","icpBalance","appAccountBalance","ICP","symbol","logo","isLoadingPrincipals","balanceICPRaw","converter","CURRCONV_TOKEN","mapToXdrUsd","response","getExchangeRate","xdrToIcp","cyclesMinter","x","xdr_permyriad_per_icp","catch","Error","xdrToUsd","restCall","XDR_USD","refreshInterval","FungibleAssetConnector","getAccounts","tokenStandard","toNativeTokenConfig","tokenSheet","currency","feeCurrency","price","fee","transformAmount","stringICPtoE8s","erc20ToTokenConfig","btcAssetConnector","btcAsset","IconSvgBTC","TokenStandards","NativeToken","ethereumERC20AssetConnector","ts","l","IconERC20","ethAssetConnector","matic","polygonERC20AssetConnector","PolygonERC20Svg","maticAssetConnector","FungibleAssetFactory","getTokenConfigs","super","fungibleAssetFactory","useTokenConfig","useICTokens","IconSvgDfinity","WALLET_FEE_E8S","useAllToken","tokenConfigs","icTokenConfigs","API","collectionsCache","fetchCollection","r","agg","fetchCollections","entrepotAsset","fullSize","decodeTokenIdentifier","icpbunnyimg","Date","now","_format","detailpage","getEntrepotDisplayFormat","getDisplayFormat","getImageDetailsUrl","getVideoDetailsUrl","blob","result","text","replace","match","regExp","simplifiedText","fetchNFTsOfPrincipals","inputData","_token","_collection","entrepotNFT","log","mapToNFTData","encodeTokenIdentifier","canister","getTokenLink","CenterEllipsis","ref","leadingChars","trailingChars","divProps","splitAt","className","clsx","slice","connectorCache","CacheContainer","MemoryStorage","connectors","connectorsStorage","toMap","Array","from","keys","getConnector","cacheKey","processCacheable","connectorsMap","Map","forEach","set","get","cachedNftConfig","getItem","apply","setItem","ttl","ToggleButton","firstValue","secondValue","onChange","defaultValue","setValue","useState","useEffect","onClick","useTokenOptions","dip20Tokens","erc20","useErc20","erc20Polygon","useErc20Polygon","tokenOptions","options","subTitle","mapAccountBalancesToOptions","wallets","selectedToken","ethAddress","truncateString","innerTitle","innerSubtitle","btcAddress","erc20token","erc20PolygonToken","formattedOptions","wallet","isVaultWallet","vaultId","vaultName","publicWallets","w","vaultWallets","fieldName","groupedData","item","fieldValue","push","Object","values","groupArrayByField","group","useWalletOptions","useAllWallets","walletOptions","TransferReceive","selectedSourceWallet","assignSourceWallet","assignSelectedToken","allTokens","selectedWallet","selectedAddress","handleSelectToken","useCallback","t","optionGroups","iconClassnames","preselectedValue","onSelect","type","width","margin","content","isNotEmpty","isValidPrincipalId","makeAddressFieldValidation","isHex","TransferFT","assignToken","assignReceiverWallet","assignFromAccount","assignAmount","selectedReceiverWallet","selectedSourceAccount","onSubmit","register","formState","errors","handleSubmit","setError","resetField","useForm","mode","defaultValues","amount","to","setFullAmount","toast","toastId","message","setTimeout","handleSelectWallet","submit","toAddress","transformToAddress","overlayClassnames","placeholder","min","required","sumRules","validate","valueAsNumber","isFirstPreselected","trigger","src","alt","errorText","registerFunction","block","useNFTsOptions","nftsOptions","userNFTDetailsArray","groupedByWallet","current","entries","userNFTDetails","mapUserNFTDetailsToGroupedOptions","TransferNFT","assignSelectedNFT","selectedNFTId","setSelectedNFTId","selectedNFT","TransferSuccess","transactionMessage","transactionRoute","onClose","ImagePngSuccess","target","rel","href","transferTabs","TransferModalCoordinator","globalServices","useContext","ProfileContext","state","send","useActor","transferService","context","Component","matches","selectedFT","receiverWallet","sourceWalletAddress","sourceAccount","successMessage","onModalTypeChange","onTokenTypeChange","isNFT","style","stopPropagation","tabs","direction","onValueChange","isFitLine","SendReceiveButton","SendReceiveIcon","LogoText","height","viewBox","fill","xmlns","d","fillRule","clipRule","x1","y1","x2","y2","gradientUnits","stopColor","offset","Logo","nav","isActive","mask","getImageUrl","WebkitMask","profileSidebarItems","window","location","pathname","isPopupVisible","setIsPopupVisible","popupRef","useClickOutside","useProfile","logout","useAuthentication","navigate","useNavigate","useVaultDelegation","User","onSignOut","buttonElement","MenuIcon","toggleMenu","isBorder","padding","detailsClassName","details","pageTitle","showBackButton","onIconClick","children","headerClassName","containerClassName","headerMenu","iconTooltip","handleNavigateBack","history","back","tip","str"],"sourceRoot":""}