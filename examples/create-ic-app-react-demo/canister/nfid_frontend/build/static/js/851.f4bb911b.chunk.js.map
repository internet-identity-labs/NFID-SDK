{"version":3,"file":"static/js/851.f4bb911b.chunk.js","mappings":"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","sources":["integration/wallet/hooks/use-wallet-delegation.ts","integration/wallet/hooks/use-transfer.ts","ui/pages/request-transfer/index.tsx","apps/identity-manager/request-transfer/index.tsx","state/machines/wallet/request-transfer.ts","coordination/wallet/request-transfer.tsx","features/fungable-token/dip-20/hooks/use-all-token-meta.ts","features/fungable-token/fetch-balances.ts","features/fungable-token/icp/hooks/use-icp-exchange-rate.ts","features/fungable-token/icp/hooks/use-user-balances.ts","features/vaults/hooks/use-vault-delegation.ts","integration/adapters/delegations.ts","integration/facade/wallet.ts","integration/internet-identity/queries.ts","integration/wallet/hooks/use-all-wallets.ts","features/vaults/hooks/use-vaults-wallets-balances.ts","ui/atoms/copy/copied.svg","ui/atoms/copy/copy.svg","ui/atoms/copy/index.tsx","ui/utils/sorting.ts","ui/utils/use-timer.ts","../../../packages/integration/src/lib/token/dip-20/actor.ts","../../../packages/integration/src/lib/token/dip-20/get-metadata.ts","../../../packages/integration/src/lib/token/dip-20/get-all-token.ts","../../../packages/integration/src/lib/token/dip-20/get-balance.ts","../../../packages/integration/src/lib/token/dip-20/transfer.ts","../../../packages/integration/src/lib/token/dip-20/dip-20.ts","../../../packages/utils/src/lib/validation.ts"],"sourcesContent":["import useSWR from \"swr\"\n\nimport { WALLET_SESSION_TTL_2_MIN_IN_NS } from \"@nfid/config\"\n\nimport { getWalletDelegation } from \"frontend/integration/facade/wallet\"\n\nexport const useWalletDelegation = (\n  userNumber?: number,\n  hostName?: string,\n  personaId?: string,\n) => {\n  console.debug(\"useWalletDelegation\", { userNumber })\n  return useSWR(\n    userNumber ? [userNumber, hostName, personaId] : null,\n    ([userNumber, hostName, personaId]) =>\n      getWalletDelegation(userNumber, hostName, personaId),\n    {\n      dedupingInterval: WALLET_SESSION_TTL_2_MIN_IN_NS / 2,\n      focusThrottleInterval: WALLET_SESSION_TTL_2_MIN_IN_NS / 2,\n    },\n  )\n}\n","import { DelegationIdentity } from \"@dfinity/identity\"\nimport React from \"react\"\n\nimport { transfer as transferDIP20 } from \"@nfid/integration/token/dip-20\"\nimport { transfer as transferICP } from \"@nfid/integration/token/icp\"\n\nimport { useProfile } from \"frontend/integration/identity-manager/queries\"\n\nimport { TokenTransferConfig } from \".\"\nimport { useWalletDelegation } from \"./use-wallet-delegation\"\n\ninterface Transfer {\n  to: string\n  amount: string\n  delegationIdentity: DelegationIdentity\n  canisterId?: string\n  transformAmount: (amount: string) => number\n}\n\nconst handleTokenTransfer = async ({\n  to,\n  amount,\n  delegationIdentity,\n  transformAmount,\n  canisterId,\n}: Transfer) => {\n  if (canisterId) {\n    return await transferDIP20({\n      canisterId,\n      amount: transformAmount(amount),\n      to,\n      sourceIdentity: delegationIdentity,\n    })\n  }\n  return await transferICP(transformAmount(amount), to, delegationIdentity)\n}\n\nexport const useTransfer = ({\n  domain,\n  accountId,\n  tokenCanisterId,\n  transformAmount,\n}: TokenTransferConfig) => {\n  const { profile } = useProfile()\n  const { data: walletDelegation, isValidating: isValidatingWalletDelegation } =\n    useWalletDelegation(profile?.anchor, domain, accountId)\n\n  const queuedTransfer = React.useRef<{\n    to: string\n    amount: string\n    domain?: string\n    accountId?: string\n    rejectTransfer?: (reason: any) => void\n    executeTransfer?: (\n      walletDelegation: DelegationIdentity,\n      to: string,\n      amount: string,\n    ) => void\n  } | null>(null)\n\n  // This effect makes sure that we're resetting the queuedTransfer when\n  // domain or accountId are changing\n  React.useEffect(() => {\n    if (\n      queuedTransfer.current?.domain !== domain ||\n      queuedTransfer.current?.accountId !== accountId\n    ) {\n      queuedTransfer.current?.rejectTransfer &&\n        queuedTransfer.current.rejectTransfer(\n          \"domain or accountId has been changed\",\n        )\n      queuedTransfer.current = null\n    }\n  }, [domain, accountId])\n\n  // This effect calls the pending transfer when walletDelegations settles\n  // and the queued parameter domain and accountId matching there current values.\n  React.useEffect(() => {\n    if (queuedTransfer.current) {\n      const {\n        amount,\n        to,\n        executeTransfer,\n        domain: queuedDomain,\n        accountId: queuedAccountId,\n      } = queuedTransfer.current\n      if (\n        walletDelegation &&\n        executeTransfer &&\n        queuedDomain === domain &&\n        queuedAccountId === accountId\n      ) {\n        executeTransfer(walletDelegation, to, amount)\n        queuedTransfer.current = null\n      }\n    }\n  }, [accountId, domain, walletDelegation])\n\n  const handleTransfer = React.useCallback(\n    async (to: string, amount: string) => {\n      if (queuedTransfer.current) throw new Error(\"there is a pending transfer\")\n\n      return new Promise<bigint>((resolve, reject) => {\n        if (!walletDelegation) {\n          queuedTransfer.current = {\n            to,\n            amount,\n            domain,\n            accountId,\n            rejectTransfer: reject,\n            executeTransfer: (walletDelegation, to, amount) => {\n              handleTokenTransfer({\n                amount: amount,\n                to,\n                delegationIdentity: walletDelegation,\n                canisterId: tokenCanisterId,\n                transformAmount,\n              })\n                .then((value) => resolve(value))\n                .catch((reason) => reject(reason))\n            },\n          }\n        } else {\n          return handleTokenTransfer({\n            amount: amount,\n            to,\n            delegationIdentity: walletDelegation,\n            canisterId: tokenCanisterId,\n            transformAmount,\n          })\n            .then((value) => resolve(value))\n            .catch((reason) => reject(reason))\n        }\n      })\n    },\n    [accountId, domain, tokenCanisterId, transformAmount, walletDelegation],\n  )\n\n  console.debug(\"useTransfer\", { isValidatingWalletDelegation })\n  return {\n    isValidatingWalletDelegation,\n    transfer: handleTransfer,\n  }\n}\n","import clsx from \"clsx\"\n\nimport {\n  DropdownSelect,\n  IOption,\n  ApproveTemplate,\n  SDKStatusbar,\n} from \"@nfid-frontend/ui\"\nimport { WALLET_FEE } from \"@nfid/integration/token/icp\"\n\nimport { Copy } from \"frontend/ui/atoms/copy\"\n\nexport interface IRequestTransferPage {\n  applicationName: string\n  applicationLogo: string\n  amountICP: number\n  amountUSD: string\n  walletOptions: IOption[]\n  selectedWallets: string[]\n  setSelectedWallets: (value: string[]) => void\n  onReject: () => void\n  onApprove: () => void\n  isLoading?: boolean\n  destinationAddress: string\n  successTimer: number\n  isInsufficientFunds: boolean\n}\n\nexport const RequestTransferPage: React.FC<IRequestTransferPage> = ({\n  applicationName,\n  applicationLogo,\n  amountICP,\n  amountUSD,\n  walletOptions,\n  selectedWallets,\n  setSelectedWallets,\n  onReject,\n  onApprove,\n  isLoading = false,\n  destinationAddress,\n  successTimer,\n  isInsufficientFunds,\n}) => {\n  return (\n    <ApproveTemplate\n      applicationName={applicationName}\n      applicationLogo={applicationLogo}\n      onReject={onReject}\n      onApprove={!isInsufficientFunds ? onApprove : () => {}}\n      isLoading={isLoading}\n      successTimer={successTimer}\n    >\n      <SDKStatusbar isLoading={isLoading} isSuccess={successTimer !== -1}>\n        <div className=\"flex items-center justify-between w-full\">\n          <p className=\"text-sm font-semibold\">Transfer</p>\n          <p className=\"text-sm\">\n            {amountICP}\n            {\" ICP \"}\n            <span className=\"text-xs text-secondary\">≈ {amountUSD} </span>\n          </p>\n        </div>\n      </SDKStatusbar>\n      <p className=\"mb-1 text-sm\">From</p>\n      <DropdownSelect\n        disabled={isLoading || successTimer !== -1}\n        isSearch\n        isMultiselect={false}\n        options={walletOptions}\n        selectedValues={selectedWallets}\n        setSelectedValues={setSelectedWallets}\n        firstSelected\n        errorText={isInsufficientFunds ? \"Insufficient funds\" : undefined}\n      />\n      <p className=\"mt-2 mb-1 text-sm\">To</p>\n      <div\n        className={clsx(\n          \"h-10 text-secondary bg-gray-100 rounded-md\",\n          \"flex items-center justify-between px-2.5 space-x-2\",\n        )}\n        id=\"account-id\"\n      >\n        <p className=\"overflow-hidden text-sm text-ellipsis whitespace-nowrap\">\n          {destinationAddress}\n        </p>\n        <Copy\n          className=\"w-[18px] h-[18px] flex-shrink-0\"\n          value={destinationAddress}\n        />\n      </div>\n      {/* FIXME: support dip-20 */}\n      <div className=\"text-xs text-secondary mt-2.5\">\n        Transfer fee: {WALLET_FEE} ICP\n      </div>\n    </ApproveTemplate>\n  )\n}\n","import { Principal } from \"@dfinity/principal\"\nimport { principalToAddress } from \"ictool\"\nimport { useMemo, useState } from \"react\"\nimport { toast } from \"react-toastify\"\n\nimport { IOption } from \"@nfid-frontend/ui\"\nimport { isHex } from \"@nfid-frontend/utils\"\nimport { toPresentation } from \"@nfid/integration/token/icp\"\n\nimport { toUSD } from \"frontend/features/fungable-token/accumulate-app-account-balances\"\nimport { useICPExchangeRate } from \"frontend/features/fungable-token/icp/hooks/use-icp-exchange-rate\"\nimport { useAllWallets } from \"frontend/integration/wallet/hooks/use-all-wallets\"\nimport { useTransfer } from \"frontend/integration/wallet/hooks/use-transfer\"\nimport { stringICPtoE8s } from \"frontend/integration/wallet/utils\"\nimport { RequestTransferPage } from \"frontend/ui/pages/request-transfer\"\nimport { useTimer } from \"frontend/ui/utils/use-timer\"\n\ninterface IRequestTransfer {\n  applicationName?: string\n  applicationLogo?: string\n  amountICP: number\n  onSuccess: (blockIndex: bigint) => void\n  to: string\n}\n\nexport const RequestTransfer = ({\n  amountICP,\n  applicationLogo,\n  applicationName,\n  onSuccess,\n  to,\n}: IRequestTransfer) => {\n  const [selectedWallets, setSelectedWallets] = useState<string[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const { counter, setCounter } = useTimer({ defaultCounter: -1 })\n\n  const { wallets } = useAllWallets()\n  const { exchangeRate } = useICPExchangeRate()\n\n  const selectedWallet = useMemo(() => {\n    return wallets?.find(\n      (wallet) => wallet.principal.toString() === selectedWallets[0],\n    )\n  }, [selectedWallets, wallets])\n\n  // FIXME: support dip-20\n  const { transfer } = useTransfer({\n    accountId: selectedWallet?.accountId,\n    domain: selectedWallet?.domain,\n    transformAmount: stringICPtoE8s,\n  })\n\n  const walletsOptions: IOption[] | undefined = useMemo(() => {\n    return (\n      wallets\n        // Added filtering there to avoid changes which should require a lot of re-testing\n        ?.filter((wallet) => !wallet.isVaultWallet)\n        ?.map((wallet) => ({\n          label: wallet.label ?? \"\",\n          value: wallet.principal?.toText() ?? \"\",\n          // FIXME: support dip-20\n          afterLabel: toPresentation(wallet.balance[\"ICP\"]),\n          disabled: Number(wallet.balance) <= Number(amountICP),\n        }))\n        .sort((a, b) => Number(a?.disabled) - Number(b?.disabled))\n    )\n  }, [amountICP, wallets])\n\n  const amountUSD = useMemo(() => {\n    if (!exchangeRate) return \"0\"\n    return toUSD(amountICP, exchangeRate)\n  }, [amountICP, exchangeRate])\n\n  const onApprove = async () => {\n    let validAddress = isHex(to)\n      ? to\n      : principalToAddress(Principal.fromText(to) as any)\n\n    try {\n      setIsLoading(true)\n      const blockIndex = await transfer(validAddress, String(amountICP))\n      setCounter(5)\n      setTimeout(() => {\n        return onSuccess(blockIndex)\n      }, 5000)\n    } catch (e: any) {\n      if (e.message === \"InsufficientFunds\")\n        toast.error(\"You don't have enough ICP for this transaction\", {\n          toastId: \"insufficientFundsError\",\n        })\n      else\n        toast.error(\"Unexpected error: The transaction has been cancelled\", {\n          toastId: \"unexpectedTransferError\",\n        })\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const isInsufficientFunds = useMemo(() => {\n    if (!walletsOptions?.length) return false\n    return !walletsOptions?.filter((option) => option.disabled !== true).length\n  }, [walletsOptions])\n\n  return (\n    <RequestTransferPage\n      amountICP={amountICP}\n      amountUSD={amountUSD}\n      walletOptions={walletsOptions ?? []}\n      selectedWallets={selectedWallets}\n      setSelectedWallets={setSelectedWallets}\n      onReject={() => window.close()}\n      onApprove={onApprove}\n      isLoading={isLoading}\n      applicationLogo={applicationLogo ?? \"\"}\n      applicationName={applicationName ?? \"\"}\n      destinationAddress={to}\n      successTimer={counter}\n      isInsufficientFunds={isInsufficientFunds}\n    />\n  )\n}\n","import { ActorRefFrom, assign, createMachine } from \"xstate\"\n\nimport {\n  registerRequestTransferHandler,\n  RequestTransferParams,\n} from \"@nfid/wallet\"\n\nimport AuthenticationMachine from \"frontend/features/authentication/root/root-machine\"\nimport { AuthSession } from \"frontend/state/authentication\"\nimport { AuthorizingAppMeta } from \"frontend/state/authorization\"\n\n// State local to the machine.\ninterface Context {\n  appMeta?: AuthorizingAppMeta\n  authSession?: AuthSession\n  requestTransfer?: RequestTransferParams\n  amount?: number\n  to?: string\n  isLoading?: boolean\n  blockHeight?: bigint\n}\n\nlet _blockHeight: number | null = null\n\n// Definition of events usable in the machine.\ntype Events =\n  | {\n      type: \"done.invoke.AuthenticationMachine\"\n      data: AuthSession\n    }\n  | {\n      type: \"done.invoke.registerRequestTransferHandler\"\n      data: RequestTransferParams\n    }\n  | { type: \"CONSENT\" }\n  | { type: \"CONFIRM\"; blockHeight?: bigint }\n  | { type: \"REJECT\" }\n  | { type: \"END\" }\n\n// The machine. Install xstate vscode extension for best results.\n/** @xstate-layout N4IgpgJg5mDOIC5QAUAWB7AdmAcgVwFsAjMAJwGFTIxMAXASwEMAbZU9AN3ojIDoAlMIwgBPAMSJQAB3Sx6DLJJAAPRAEYAHGt4AWNQHYtAViMAGHRv2mATABoQI9UYCcO3mYDMpo-o-PNvjoAvkH2aFi4hCQUVDx0TKzsXDykvACCeLSoNAwAxoy0YGIQEbz0mBzoANZg6ZnZ8fkKmACyjLmo5WBKMnLNSqoIHgBs1rymw0Y6HnrOGhoeGs72jggGBrwapmomaqb6JjrbIWEY2PjEZJTU8SxsnNx8AOJgtOHnUc+vAKLK9LAMTBQd6RS6kYqlcqVGq8ABmrw6IIu0R6snk9EUSBUiD0Gl4gQ8Oxcw1Gww8RhWiGspg0Yw0OmsHl8RnJTI0wxOICRnxiNwYdySj1SLzeZ1B0V43zoZG5YLE3xwABVvvwAPrIAASAHkcN9VTgAKotABCKtRfQxmAGOI8Hk2fn0zn01mcpgmrkpCGsemGvGGmnpajUzhdk05sui1zi-MSDxSvBFEb4ADUyPRYSIk+CStgyhVqrUOGmM1mAMpkLi5bpY3rozGgQZ+ZzuJ3DN1LbY+fSe6zMzZGSwWdlePwc0JcsXIq6xHIJe7JL6iiJT1Kp0jpzOTnliMjsVJSZgFWHoUgEXhF9clrdg8ukSvV6Ro-pYwZqHRuPx6czDWnmObDHsLDtd9TGcIx-QOPYNHDa9IxnW5YwXYVXizSVpVIUsWlLRUC0wMRyA1NIcCePVNR1PVDRNM0ayfS1rTWbRnC8XtJkdNRqSDDQe2GfR9D9SxrB8Ix2JDXwYOXHko1nAU40XVCpUKDCsJwmo8IVZU1Uw0tVUVLUAGkFXNOsrRfHFhM2fQ9m2HjaQHZYHCpZwf10LRTBHIxvV7aDxyzKSEPnIUExQ2C+AUsgtJUmgxH4b5SwVAARIznwbKkpnxBl-F8QTvQmLiHK9fQdCMdwNDMXw1CZYkPHEj4wT8mMAvjRMQtXFhuAKMAItwiFcyhAtz2LERSwIWBb3vJK6NMhB6VMdwZi2LZhlcFkdB7fRRk2Ax5msLR2SDIwavFac+TnQUmuCiSwV4ZM2ogDqutUndSD3XgDyPE8zwvDdhtGit6CrCb62xL1rG0eYbDA70RjfHQAPyl1ePxQlvBcZ0eLmQ6V3q07ZOQpdauiHragBDreF8+CGrOuSWsBkyUoQOZtEmW09jbRYys9AxGV4W0HSc6xBJMA7OUwdAeHgLFyZOmSkIEIRRFp+iAFo9nGVndtAgcXRmTnwLtN0vAZLRYcdaxMckimcdljIslnJoHxAWtkuBrxZrbPWyRMb93118yDZR3saUEsdTkuuDpcQwLmrDxdfn+QFgRpmiLSBxtYd4ZbA6WSYnPs1Zg00XgBZMKwQymNyQ4nGPeWjK2o4ugnQvQrNFam99m0seY7Nmck8tWRlrF9H8jltFx2eqnyWuxmX6-xo7V0Glvk+M+iZl9TOrGz1HzB7cDfTUEkmPmZwnKWc26stmfzrnlc0MUh6aFb+nYbcL2luDKZ2Rsbt4csO0BaWK6L8zonTn3DrXK+1Nq7XVuvdZSuEn4ux0M2f0Hhg7bF4vtVa+UvBLTmhMaky0eLrTAcdCBkdr7yUwBARBr5QL7y3gyEw3oGQ9gqs2cCbkQy2mdDoMSk9q7TwoVAxupBaGIBVmMd0zoZjUksHMWknN6S+mLuBEMewPLC1DqIoRjU+BsDgDkIR4iGbeAzoPXibpvBHF7LrDang3KCxGHMYIAidGX2EWI5eztBhKxGOMJaMiGQ0kdPMTmfDmz+y0NSN0jJXEhCAA */\nconst RequestTransferMachine = createMachine(\n  {\n    context: {} as Context,\n    tsTypes: {} as import(\"./request-transfer.typegen\").Typegen0,\n    schema: { events: {} as Events },\n    id: \"RequestTransferProvider\",\n    initial: \"Ready\",\n    states: {\n      Ready: {\n        invoke: {\n          src: \"registerRequestTransferHandler\",\n          id: \"registerRequestTransferHandler\",\n          onDone: {\n            target: \"Authenticate\",\n            actions: \"assignRequestTransferRequest\",\n          },\n        },\n      },\n      Authenticate: {\n        invoke: {\n          src: \"AuthenticationMachine\",\n          id: \"AuthenticationMachine\",\n          onDone: [{ target: \"RequestTransfer\", actions: \"assignAuthSession\" }],\n          data: (context) => ({\n            appMeta: context.appMeta,\n          }),\n        },\n      },\n      RequestTransfer: {\n        on: {\n          CONFIRM: { target: \"Confirm\", actions: \"assignBlockHeight\" },\n        },\n      },\n      Confirm: {\n        onEntry: \"setBlockHeight\",\n      },\n      End: {\n        type: \"final\",\n      },\n    },\n  },\n  {\n    actions: {\n      assignAuthSession: assign((_, event) => ({\n        authSession: event.data,\n      })),\n      assignRequestTransferRequest: assign({\n        requestTransfer: (_, event) => event.data,\n      }),\n      setBlockHeight: ({ blockHeight }) => {\n        _blockHeight = Number(blockHeight)\n      },\n      assignBlockHeight: assign({\n        blockHeight: (_, event) => event.blockHeight,\n      }),\n    },\n    services: {\n      async registerRequestTransferHandler() {\n        const params = await registerRequestTransferHandler(() => {\n          return new Promise((resolve) => {\n            setInterval(() => {\n              _blockHeight &&\n                resolve({\n                  status: \"SUCCESS\",\n                  height: _blockHeight,\n                })\n            }, 1000)\n          })\n        })\n        console.debug(\"registerRequestTransferHandler\", { params })\n        return params\n      },\n      AuthenticationMachine,\n    },\n    guards: {},\n  },\n)\n\nexport default RequestTransferMachine\n\nexport type RequestTransferMachineActor = ActorRefFrom<\n  typeof RequestTransferMachine\n>\nexport type RequestTransferMachineType = typeof RequestTransferMachine\n","import { useMachine } from \"@xstate/react\"\nimport { useEffect } from \"react\"\nimport { useSearchParams } from \"react-router-dom\"\n\nimport { ScreenResponsive } from \"@nfid-frontend/ui\"\n\nimport { RequestTransfer } from \"frontend/apps/identity-manager/request-transfer\"\nimport AuthenticationCoordinator from \"frontend/features/authentication/root/coordinator\"\nimport { AuthenticationMachineActor } from \"frontend/features/authentication/root/root-machine\"\nimport RequestTransferMachine, {\n  RequestTransferMachineType,\n} from \"frontend/state/machines/wallet/request-transfer\"\nimport { BlurredLoader } from \"frontend/ui/molecules/blurred-loader\"\n\ninterface Props {\n  machine?: RequestTransferMachineType\n}\n\nexport default function RequestTransferCoordinator({ machine }: Props) {\n  const [searchParams] = useSearchParams()\n  const applicationName = searchParams.get(\"applicationName\")\n  const applicationLogo = searchParams.get(\"applicationLogo\")\n\n  const [state, send] = useMachine(\n    machine ||\n      RequestTransferMachine.withConfig(\n        {},\n        {\n          appMeta: { name: applicationName || \"\", logo: applicationLogo || \"\" },\n        },\n      ),\n  )\n\n  useEffect(() => {\n    console.debug(\"RequestTransferCoordinator\", { state: state.value })\n  }, [state])\n\n  switch (true) {\n    case state.matches(\"Ready\"):\n      return (\n        <BlurredLoader\n          isLoading\n          loadingMessage={`Connecting to ${\n            state.context.appMeta?.name ?? \"the application\"\n          }`}\n        />\n      )\n    case state.matches(\"Authenticate\"):\n      return (\n        <ScreenResponsive>\n          <AuthenticationCoordinator\n            actor={\n              state.children.AuthenticationMachine as AuthenticationMachineActor\n            }\n          />\n        </ScreenResponsive>\n      )\n    case state.matches(\"RequestTransfer\"):\n      return (\n        <RequestTransfer\n          applicationName={searchParams.get(\"applicationName\") ?? \"\"}\n          applicationLogo={searchParams.get(\"applicationLogo\") ?? \"\"}\n          to={state.context.requestTransfer?.to ?? \"\"}\n          amountICP={state.context.requestTransfer?.amount ?? 0}\n          onSuccess={(blockIndex) => {\n            send({ type: \"CONFIRM\", blockHeight: blockIndex })\n          }}\n        />\n      )\n    default:\n      console.debug(\n        `PhoneCredentialCoordinator rendering loader, unknown state: ${JSON.stringify(\n          state.value,\n        )}`,\n      )\n      return <BlurredLoader isLoading />\n  }\n}\n","import useSWR from \"swr\"\n\nimport { getAllToken } from \"@nfid/integration/token/dip-20\"\n\nexport const useAllDip20Token = () => {\n  const { data: token, isValidating } = useSWR(\"dip20AllToken\", getAllToken, {\n    dedupingInterval: 60_000 * 60,\n    focusThrottleInterval: 60_000 * 60,\n  })\n\n  console.debug(\"useAllDip20Token\", { token })\n\n  return { token, isValidating }\n}\n","import { Principal } from \"@dfinity/principal\"\nimport { fromHexString, principalToAddress } from \"ictool\"\n\nimport { Account, Balance, PrincipalAccount, Wallet } from \"@nfid/integration\"\nimport { getBalance as getICPBalance } from \"@nfid/integration\"\nimport { getDIP20Balance, TokenMetadata } from \"@nfid/integration/token/dip-20\"\n\ntype FetchBalanceArgs = {\n  principals: PrincipalAccount[]\n  dip20Token: TokenMetadata[]\n}\n\nexport type Token = string\n\nexport type TokenBalance = {\n  [token: Token]: Balance\n}\n\nexport type AccountBalance = {\n  principal: Principal\n  principalId: string\n  account: Account\n  balance: TokenBalance\n  address?: string\n  vaultId?: bigint\n  vaultName?: string\n}\n\nexport async function fetchBalances({\n  principals,\n  dip20Token,\n}: FetchBalanceArgs): Promise<AccountBalance[]> {\n  return await Promise.all(\n    principals.map(async ({ principal, account }) => {\n      const token = await Promise.all<TokenBalance>([\n        // mapping over this static list only to keep the same shape as the dip20Token\n        ...[\"ICP\"].map(async (token) => ({\n          [token]: await getICPBalance(principalToAddress(principal)),\n        })),\n        // ...[\"ETH\"].map(async (token) => ({\n        //   [token]: (await getEthBalance()).tokenBalance,\n        // })),\n        // ...[\"BTC\"].map(async (token) => ({\n        //   [token]: (await getAccounts()).tokenBalance,\n        // })),\n        // ...[\"MATIC\"].map(async (token) => ({\n        //   [token]: (await getAccountsMatic()).tokenBalance,\n        // })),\n        ...dip20Token.map(async ({ symbol: token, canisterId }) => ({\n          [token]: await getDIP20Balance({\n            canisterId,\n            principalId: principal.toText(),\n          }),\n        })),\n        // ...erc20.map(async (token) => ({\n        //   [token.token]: token.tokenBalance,\n        // })),\n        // ...erc20Polygon.map(async (token) => ({\n        //   [token.token]: token.tokenBalance,\n        // })),\n      ])\n\n      return {\n        principal,\n        principalId: principal.toText(),\n        account,\n        // pulling only token key value pairs and drop array specific\n        // properties from the result to keep clean return interface\n        balance: token.reduce((acc, cur) => ({ ...acc, ...cur }), {}),\n      }\n    }),\n  )\n}\n\nexport async function fetchVaultsWalletsBalances(\n  wallets: Wallet[],\n): Promise<AccountBalance[]> {\n  return await Promise.all(\n    wallets.map(async (wallet) => {\n      const principal = Principal.fromText(VAULT_CANISTER_ID)\n\n      const address = principalToAddress(principal, fromHexString(wallet.uid))\n      const balance = await getICPBalance(address)\n\n      return {\n        principal: principal,\n        account: {\n          domain: \"nfid.vaults\",\n          label: wallet.name ?? \"\",\n          accountId: wallet.uid,\n        },\n        principalId: principal.toText(),\n        address: address,\n        balance: { ICP: balance },\n        vaultId: wallet?.vaultId,\n        vaultName: wallet?.vaultName,\n      }\n    }),\n  )\n}\n\nexport async function fetchVaultWalletsBalances(\n  wallets: Wallet[],\n): Promise<Wallet[]> {\n  return await Promise.all(\n    wallets.map(async (wallet) => {\n      const principal = Principal.fromText(VAULT_CANISTER_ID)\n      const balance = await getICPBalance(\n        principalToAddress(principal, fromHexString(wallet.uid)),\n      )\n\n      return {\n        ...wallet,\n        address: principalToAddress(principal, fromHexString(wallet.uid)),\n        balance: { ICP: balance },\n      }\n    }),\n  )\n}\n","import useSWR from \"swr\"\n\nimport { getExchangeRate } from \"frontend/integration/rosetta/get-exchange-rate\"\n\nexport const useICPExchangeRate = () => {\n  const { data: exchangeRate, ...rest } = useSWR(\n    \"walletExchangeRate\",\n    getExchangeRate,\n    {\n      dedupingInterval: 60_000 * 60,\n      focusThrottleInterval: 60_000 * 60,\n      refreshInterval: 60_000 * 60,\n    },\n  )\n  return {\n    exchangeRate,\n    ...rest,\n  }\n}\n","import useSWR from \"swr\"\n\nimport { fetchBalances } from \"frontend/features/fungable-token/fetch-balances\"\nimport { useAllPrincipals } from \"frontend/integration/internet-identity/queries\"\n\nimport { useAllDip20Token } from \"../../dip-20/hooks/use-all-token-meta\"\n\nexport const useUserBalances = () => {\n  const { principals } = useAllPrincipals()\n  const { token: dip20Token } = useAllDip20Token()\n\n  const {\n    data: balances,\n    isValidating: isLoading,\n    mutate: refreshBalances,\n  } = useSWR(\n    dip20Token && principals ? [principals, dip20Token, `AllBalanceRaw`] : null,\n    async ([principals, dip20Token]) => {\n      console.debug(\"AllBalanceRaw\", { principals, dip20Token })\n      return await fetchBalances({\n        principals,\n        dip20Token,\n      })\n    },\n    { dedupingInterval: 30_000, refreshInterval: 60_000 },\n  )\n\n  return { balances: balances, isLoading, refreshBalances }\n}\n","import useSWR from \"swr\"\n\nimport { WALLET_SESSION_TTL_1_MIN_IN_MS } from \"@nfid/config\"\nimport { replaceActorIdentity, vault } from \"@nfid/integration\"\n\nimport { getWalletDelegationAdapter } from \"frontend/integration/adapters/delegations\"\n\nexport const useVaultDelegation = () => {\n  return useSWR(\"vaultDelegation\", () => getWalletDelegationAdapter(), {\n    refreshInterval: WALLET_SESSION_TTL_1_MIN_IN_MS,\n    onSuccess: async (data) => {\n      if (data) await replaceActorIdentity(vault, data)\n      return data\n    },\n  })\n}\n","import { DelegationIdentity } from \"@dfinity/identity\"\nimport { Chain, getGlobalKeys } from \"packages/integration/src/lib/lambda/ecdsa\"\n\nimport { RootWallet, accessList, authState } from \"@nfid/integration\"\n\nimport { getWalletDelegation } from \"../facade/wallet\"\nimport { fetchProfile } from \"../identity-manager\"\n\nexport const getWalletDelegationAdapter = async (\n  domain = \"nfid.one\",\n  accountId = \"0\",\n  targetCanisters: string[] = [],\n): Promise<DelegationIdentity> => {\n  const profile = await fetchProfile()\n  if (accountId !== \"-1\" && profile.wallet === RootWallet.II)\n    return await getWalletDelegation(profile.anchor, domain, accountId)\n  else\n    return await getGlobalKeys(\n      authState.get().delegationIdentity!,\n      Chain.IC,\n      accessList.concat(targetCanisters),\n    )\n}\n","import { DelegationIdentity } from \"@dfinity/identity\"\nimport { Principal } from \"@dfinity/principal\"\nimport { Chain } from \"packages/integration/src/lib/lambda/ecdsa\"\n\nimport { WALLET_SCOPE, WALLET_SESSION_TTL_2_MIN_IN_NS } from \"@nfid/config\"\nimport {\n  getScope,\n  getLocalStorageOverride,\n  delegationState,\n} from \"@nfid/integration\"\n\nimport { fetchPrincipal } from \"frontend/integration/internet-identity\"\n\nexport async function getWalletPrincipal(anchor: number): Promise<Principal> {\n  return fetchPrincipal(anchor, WALLET_SCOPE).catch((e) => {\n    throw Error(`Getting of Wallet Principal failed!: ${e}`, e)\n  })\n}\n\nexport async function getWalletDelegation(\n  userNumber: number,\n  hostName?: string,\n  personaId?: string,\n  chain: Chain = Chain.IC,\n): Promise<DelegationIdentity> {\n  const scope =\n    typeof hostName === \"undefined\" || hostName === \"nfid.one\"\n      ? WALLET_SCOPE\n      : getScope(hostName, personaId)\n\n  return delegationState.getDelegation(\n    userNumber,\n    scope,\n    BigInt(\n      getLocalStorageOverride(\n        WALLET_SESSION_TTL_2_MIN_IN_NS,\n        \"NFID_WALLET_DELEGATION_TTL_NS\",\n      ),\n    ),\n  )\n}\n","import React from \"react\"\nimport useSWRImmutable from \"swr/immutable\"\n\nimport {\n  RootWallet,\n  extendWithFixedAccounts,\n  fetchPrincipals,\n} from \"@nfid/integration\"\n\nimport {\n  useAccounts,\n  useApplicationsMeta,\n  useProfile,\n} from \"frontend/integration/identity-manager/queries\"\n\n/**\n * React hook to retrieve user principals.\n */\nexport const useAllPrincipals = () => {\n  const { profile } = useProfile()\n  const { accounts } = useAccounts()\n  const { applicationsMeta } = useApplicationsMeta()\n\n  const allAccounts = React.useMemo(() => {\n    return extendWithFixedAccounts(accounts, applicationsMeta)\n  }, [accounts, applicationsMeta])\n\n  const { data: principals } = useSWRImmutable(\n    profile?.anchor && allAccounts\n      ? [\n          BigInt(profile.anchor),\n          allAccounts,\n          profile.wallet === RootWallet.NFID,\n        ]\n      : null,\n    ([anchor, allAccounts, isNewUser]) =>\n      fetchPrincipals(anchor, allAccounts, isNewUser),\n    { dedupingInterval: 60_000, refreshInterval: 60_000 },\n  )\n\n  console.debug(\"useAllPrincipals\", { principals })\n\n  return { principals }\n}\n","import { Principal } from \"@dfinity/principal\"\nimport { principalToAddress } from \"ictool\"\nimport React from \"react\"\n\nimport { getWalletName } from \"@nfid/integration\"\n\nimport { TokenBalance } from \"frontend/features/fungable-token/fetch-balances\"\nimport { useUserBalances } from \"frontend/features/fungable-token/icp/hooks/use-user-balances\"\nimport { useAllVaultsWallets } from \"frontend/features/vaults/hooks/use-vaults-wallets-balances\"\nimport { useApplicationsMeta } from \"frontend/integration/identity-manager/queries\"\nimport { sortAlphabetic, keepStaticOrder } from \"frontend/ui/utils/sorting\"\n\nexport type Wallet = {\n  principal: Principal\n  principalId: string\n  balance: TokenBalance\n  label: string\n  accountId: string\n  domain: string\n  isVaultWallet?: boolean\n  address?: string\n  vaultId?: bigint\n  vaultName?: string\n  ethAddress?: string\n  btcAddress?: string\n}\n\nexport const useAllWallets = () => {\n  const { balances, isLoading } = useUserBalances()\n  const { balances: vaultsBalances, isLoading: isAllWalletsLoading } =\n    useAllVaultsWallets()\n\n  const applications = useApplicationsMeta()\n\n  const wallets = React.useMemo(() => {\n    if (!balances || !vaultsBalances) return []\n\n    const wallets = balances\n      ?.map(({ principal, account, ...rest }) => ({\n        label: getWalletName(\n          applications.applicationsMeta ?? [],\n          account.domain,\n          account.accountId,\n        ),\n        accountId: account.accountId,\n        domain: account.domain,\n        principal,\n        address: principalToAddress(principal),\n\n        ...rest,\n      }))\n      .sort(sortAlphabetic(({ label }) => label ?? \"\"))\n      .concat(\n        vaultsBalances?.map(({ principal, account, address, ...rest }) => ({\n          label: account.label,\n          accountId: account.accountId,\n          domain: account.domain,\n          principal,\n          address: address ?? account.accountId,\n          isVaultWallet: true,\n          ...rest,\n        })) ?? [],\n      )\n    return keepStaticOrder<Wallet>(\n      ({ label }) => label ?? \"\",\n      [\"NFID\", \"NNS\"],\n    )(wallets || [])\n  }, [applications.applicationsMeta, balances, vaultsBalances])\n\n  return { wallets, isLoading: isLoading || isAllWalletsLoading }\n}\n","import useSWR from \"swr\"\n\nimport { getVaults, getWallets, ObjectState } from \"@nfid/integration\"\n\nimport { fetchVaultsWalletsBalances } from \"frontend/features/fungable-token/fetch-balances\"\n\nimport { useVaultDelegation } from \"./use-vault-delegation\"\n\nexport const useAllVaultsWallets = () => {\n  const { data: vaultDelegation } = useVaultDelegation()\n\n  const { data: allVaultsWallets, isLoading: isAllWalletsLoading } = useSWR(\n    vaultDelegation ? \"allVaultsWallets\" : null,\n    async () => {\n      const vaults = await getVaults()\n\n      const promisesArray = vaults?.map(async (vault) => {\n        const result = await getWallets(vault.id)\n        return result.map((wallet) => ({\n          ...wallet,\n          vaultId: vault.id,\n          vaultName: vault.name,\n        }))\n      })\n\n      return (await Promise.all(promisesArray))\n        .flat(1)\n        .filter((wallet) => wallet.state !== ObjectState.ARCHIVED)\n    },\n  )\n\n  const { data: balances, isValidating: isBalancesLoading } = useSWR(\n    allVaultsWallets ? [allVaultsWallets, `allVaultsWalletsBalances`] : null,\n    async ([allVaultsWallets]) => {\n      console.debug(\"allVaultsWalletsBalances\", { allVaultsWallets })\n      return await fetchVaultsWalletsBalances(allVaultsWallets)\n    },\n    { dedupingInterval: 30_000, refreshInterval: 60_000 },\n  )\n\n  return {\n    balances,\n    isLoading: isAllWalletsLoading || isBalancesLoading,\n  }\n}\n","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCopied(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_26143_35839)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.6296 7H8.36986C7.61331 7 7 7.62175 7 8.38871L7.00054 15.6113C7.00054 16.3783 7.61384 17 8.3704 17L15.6301 17C16.3867 17 17 16.3783 17 15.6113L16.9997 14\",\n    stroke: \"#10B981\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10 11.5L12.3028 13.6622C12.5023 13.8495 12.8152 13.8417 13.0051 13.6447L17 9.5\",\n    stroke: \"#10B981\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.5 11.4993H2.66667C2.22464 11.4993 1.80072 11.3238 1.48816 11.0112C1.17559 10.6986 1 10.2747 1 9.83268V2.66667C1 2.22464 1.17559 1.80072 1.48816 1.48816C1.80072 1.17559 2.22464 1 2.66667 1L9.83268 1C10.2747 1 10.6986 1.17559 11.0112 1.48816C11.3238 1.80072 11.4993 2.22464 11.4993 2.66667V3.5\",\n    stroke: \"#10B981\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_26143_35839\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18,\n    height: 18,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopied);\nexport default __webpack_public_path__ + \"static/media/copied.7db236d4ed9a8d82463d41f442395067.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCopy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_399_379)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.6296 7H8.36986C7.61331 7 7 7.62175 7 8.38871L7.00054 15.6113C7.00054 16.3783 7.61384 17 8.3704 17L15.6301 17C16.3867 17 17 16.3783 17 15.6113L16.9995 8.38871C16.9995 7.62175 16.3862 7 15.6296 7Z\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.5 11.4993H2.66667C2.22464 11.4993 1.80072 11.3238 1.48816 11.0112C1.17559 10.6986 1 10.2747 1 9.83268V2.66667C1 2.22464 1.17559 1.80072 1.48816 1.48816C1.80072 1.17559 2.22464 1 2.66667 1L9.83268 1C10.2747 1 10.6986 1.17559 11.0112 1.48816C11.3238 1.80072 11.4993 2.22464 11.4993 2.66667V3.5\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_399_379\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18,\n    height: 18,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.fa74bb78f3023163889b69dafbaee228.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from \"clsx\"\nimport React from \"react\"\n\n\nimport { Tooltip } from \"@nfid-frontend/ui\"\n\nimport { ElementProps } from \"frontend/types/react\"\n\nimport CopiedIcon from \"./copied.svg\"\nimport CopyIcon from \"./copy.svg\"\n\ninterface ICopy extends ElementProps<HTMLDivElement> {\n  value: string\n}\n\nexport const Copy: React.FC<ICopy> = ({ value, className }) => {\n  const [copied, setCopied] = React.useState(false)\n\n  const copyToClipboard = React.useCallback(() => {\n    setCopied(true)\n    navigator.clipboard.writeText(value)\n    setTimeout(() => {\n      setCopied(false)\n    }, 2000)\n  }, [value])\n\n  return (\n    <div\n      className={clsx(\n        !copied && \"hover:opacity-50 cursor-pointer transition-opacity\",\n        className,\n      )}\n    >\n      <Tooltip tip=\"Copy\">\n        <img\n          className=\"w-full\"\n          onClick={copyToClipboard}\n          src={copied ? CopiedIcon : CopyIcon}\n          alt=\"copy\"\n        />\n      </Tooltip>\n    </div>\n  )\n}\n","/**\n * sort alphabetically\n *\n * @param accessor - extract the value to sort by\n */\nexport const sortAlphabetic =\n  <T>(accessor: (item: T) => string) =>\n  (a: T, b: T) =>\n    accessor(a).localeCompare(accessor(b), \"en\", { sensitivity: \"base\" })\n\n/**\n * keep the order of predefined static items\n *\n * @param accessor - extract the value to sort by\n * @param staticOrder - the order of the items that should be kept static\n */\nexport const keepStaticOrder =\n  <T>(accessor: (item: T) => string, staticOrder: string[]) =>\n  (items: T[]) => {\n    const start = staticOrder\n      .map((comparator) =>\n        items.find((item) => accessor(item).includes(comparator)),\n      )\n      .filter((item: T | undefined): item is T => Boolean(item))\n    return [\n      ...start,\n      ...items.filter(\n        (item) => !start.find((i) => accessor(i) === accessor(item)),\n      ),\n    ]\n  }\n","import React from \"react\"\n\ninterface useTimerProps {\n  defaultCounter: number\n  frequency?: number\n  loop?: boolean\n  onElapsed?: () => void\n}\n\nexport const useTimer = ({\n  defaultCounter,\n  loop,\n  frequency = 1000,\n  onElapsed,\n}: useTimerProps) => {\n  const [counter, setCounter] = React.useState(defaultCounter)\n  const timer = React.useRef<NodeJS.Timer>()\n  const [elapsed, setElapsed] = React.useState(false)\n\n  const handleInterval = React.useCallback(() => {\n    if (counter > 0) {\n      setCounter(counter - 1)\n    }\n\n    if (counter === 0) {\n      setElapsed(true)\n      onElapsed && onElapsed()\n      clearInterval(Number(timer.current))\n    }\n\n    if (counter === 0 && loop) {\n      setCounter(defaultCounter)\n      timer.current = setInterval(handleInterval, frequency)\n      setElapsed(false)\n    }\n  }, [counter, defaultCounter, frequency, loop, onElapsed])\n\n  React.useEffect(() => {\n    timer.current = setInterval(handleInterval, frequency)\n    return () => clearInterval(Number(timer.current))\n  }, [frequency, handleInterval])\n\n  return { elapsed, setCounter, counter }\n}\n","import { HttpAgent, SignIdentity } from \"@dfinity/agent\"\n\nimport { DIP20, DIP20IDLFactory } from \".\"\nimport { actor, agentBaseConfig } from \"../../actors\"\n\nexport const makeDip20Actor = (canisterId: string, identity?: SignIdentity) =>\n  actor<DIP20>(\n    canisterId,\n    DIP20IDLFactory,\n    identity\n      ? { agent: new HttpAgent({ ...agentBaseConfig, identity }) }\n      : undefined,\n  )\n","import { makeDip20Actor } from \"./actor\"\nimport { Metadata } from \"./dip-20.d\"\n\nexport interface TokenMetadata extends Metadata {\n  canisterId: string\n}\n\nexport async function getMetadata(canisterId: string): Promise<TokenMetadata> {\n  const dip20 = makeDip20Actor(canisterId)\n  return dip20\n    .getMetadata()\n    .then((metadata) => ({\n      canisterId,\n      ...metadata,\n    }))\n    .catch((e) => {\n      throw new Error(`getMetadata: ${e.message}`)\n    })\n}\n","import { TOKEN_CANISTER } from \"./constants\"\nimport { getMetadata, TokenMetadata } from \"./get-metadata\"\n\nconst mapToToken = ({ decimals, ...rest }: TokenMetadata) => ({\n  decimals,\n  toPresentation: (value = BigInt(0)) => {\n    return Number(value) / Number(BigInt(10 ** decimals))\n  },\n  transformAmount: (value: string) =>\n    Number(parseFloat(value) * 10 ** decimals),\n  ...rest,\n})\n\nexport async function getAllToken() {\n  return await Promise.all(TOKEN_CANISTER.map(getMetadata)).then((token) =>\n    token.map(mapToToken),\n  )\n}\n","import { Principal } from \"@dfinity/principal\"\n\nimport { makeDip20Actor } from \"./actor\"\n\ninterface GetBalanceParams {\n  canisterId: string\n  principalId: string\n}\n\nexport const getDIP20Balance = async ({\n  canisterId,\n  principalId,\n}: GetBalanceParams) => {\n  const dip20 = makeDip20Actor(canisterId)\n  return dip20.balanceOf(Principal.fromText(principalId)).catch((e) => {\n    throw new Error(`getBalance: ${e.message}`)\n  })\n}\n","import { SignIdentity } from \"@dfinity/agent\"\nimport { Principal } from \"@dfinity/principal\"\n\nimport { makeDip20Actor } from \"./actor\"\n\ntype TransferArgs = {\n  canisterId: string\n  to: string\n  amount: number\n  sourceIdentity: SignIdentity\n}\n\nexport async function transfer({\n  canisterId,\n  to,\n  amount,\n  sourceIdentity,\n}: TransferArgs) {\n  console.debug(\"transfer\", { canisterId, to, amount })\n  const dip20Actor = makeDip20Actor(canisterId, sourceIdentity)\n  const response = await dip20Actor\n    .transfer(Principal.fromText(to), BigInt(amount))\n    .catch((e) => {\n      throw Error(`transfer failed: ${e}`)\n    })\n\n  if (\"Err\" in response) {\n    if (\"Other\" in response.Err) {\n      throw Error(response.Err.Other)\n    }\n    throw Error(Object.keys(response.Err)[0])\n  }\n\n  console.debug(\"transfer\", { response })\n  return response.Ok\n}\n","export const idlFactory = ({ IDL }: any) => {\n  const TxError = IDL.Variant({\n    InsufficientAllowance: IDL.Null,\n    InsufficientBalance: IDL.Null,\n    ErrorOperationStyle: IDL.Null,\n    Unauthorized: IDL.Null,\n    LedgerTrap: IDL.Null,\n    ErrorTo: IDL.Null,\n    Other: IDL.Text,\n    BlockUsed: IDL.Null,\n    AmountTooSmall: IDL.Null,\n  })\n  const Result = IDL.Variant({ Ok: IDL.Nat, Err: TxError })\n  const Metadata = IDL.Record({\n    fee: IDL.Nat,\n    decimals: IDL.Nat8,\n    owner: IDL.Principal,\n    logo: IDL.Text,\n    name: IDL.Text,\n    totalSupply: IDL.Nat,\n    symbol: IDL.Text,\n  })\n  const TokenInfo = IDL.Record({\n    holderNumber: IDL.Nat64,\n    deployTime: IDL.Nat64,\n    metadata: Metadata,\n    historySize: IDL.Nat64,\n    cycles: IDL.Nat64,\n    feeTo: IDL.Principal,\n  })\n  return IDL.Service({\n    allowance: IDL.Func([IDL.Principal, IDL.Principal], [IDL.Nat], [\"query\"]),\n    approve: IDL.Func([IDL.Principal, IDL.Nat], [Result], []),\n    balanceOf: IDL.Func([IDL.Principal], [IDL.Nat], [\"query\"]),\n    burn: IDL.Func([IDL.Nat], [Result], []),\n    decimals: IDL.Func([], [IDL.Nat8], [\"query\"]),\n    getAllowanceSize: IDL.Func([], [IDL.Nat64], [\"query\"]),\n    getHolders: IDL.Func(\n      [IDL.Nat64, IDL.Nat64],\n      [IDL.Vec(IDL.Tuple(IDL.Principal, IDL.Nat))],\n      [\"query\"],\n    ),\n    getMetadata: IDL.Func([], [Metadata], [\"query\"]),\n    getTokenInfo: IDL.Func([], [TokenInfo], [\"query\"]),\n    getUserApprovals: IDL.Func(\n      [IDL.Principal],\n      [IDL.Vec(IDL.Tuple(IDL.Principal, IDL.Nat))],\n      [\"query\"],\n    ),\n    historySize: IDL.Func([], [IDL.Nat64], [\"query\"]),\n    logo: IDL.Func([], [IDL.Text], [\"query\"]),\n    mint: IDL.Func([IDL.Principal, IDL.Nat], [Result], []),\n    name: IDL.Func([], [IDL.Text], [\"query\"]),\n    owner: IDL.Func([], [IDL.Principal], [\"query\"]),\n    setFee: IDL.Func([IDL.Nat], [], []),\n    setFeeTo: IDL.Func([IDL.Principal], [], []),\n    setLogo: IDL.Func([IDL.Text], [], []),\n    setName: IDL.Func([IDL.Text], [], []),\n    setOwner: IDL.Func([IDL.Principal], [], []),\n    symbol: IDL.Func([], [IDL.Text], [\"query\"]),\n    totalSupply: IDL.Func([], [IDL.Nat], [\"query\"]),\n    transfer: IDL.Func([IDL.Principal, IDL.Nat], [Result], []),\n    transferFrom: IDL.Func(\n      [IDL.Principal, IDL.Principal, IDL.Nat],\n      [Result],\n      [],\n    ),\n  })\n}\nexport const init = ({ IDL }: any) => {\n  return [\n    IDL.Text,\n    IDL.Text,\n    IDL.Text,\n    IDL.Nat8,\n    IDL.Nat,\n    IDL.Principal,\n    IDL.Nat,\n    IDL.Principal,\n    IDL.Principal,\n  ]\n}\n","interface Validation {\n  min?: number\n  max?: number\n  toLowError?: string\n  toBigError?: string\n}\nexport const minMax =\n  ({\n    min,\n    max,\n    toLowError = \"value is too small\",\n    toBigError = \"value is too big\",\n  }: Validation) =>\n  (value: number) => {\n    if (min !== undefined && Number(value) < min) return toLowError\n    if (max !== undefined && Number(value) > max) return toBigError\n    return true\n  }\n\nexport const isHex = (h: string) => {\n  const re = /[0-9A-Fa-f]{6}/g\n  return re.test(h)\n}\n"],"names":["handleTokenTransfer","async","to","amount","delegationIdentity","transformAmount","canisterId","transferDIP20","sourceIdentity","transferICP","useTransfer","domain","accountId","tokenCanisterId","profile","useProfile","data","walletDelegation","isValidating","isValidatingWalletDelegation","userNumber","anchor","hostName","personaId","console","debug","useSWR","getWalletDelegation","dedupingInterval","WALLET_SESSION_TTL_2_MIN_IN_NS","focusThrottleInterval","queuedTransfer","React","current","rejectTransfer","executeTransfer","queuedDomain","queuedAccountId","handleTransfer","Error","Promise","resolve","reject","then","value","catch","reason","transfer","RequestTransferPage","applicationName","applicationLogo","amountICP","amountUSD","walletOptions","selectedWallets","setSelectedWallets","onReject","onApprove","isLoading","destinationAddress","successTimer","isInsufficientFunds","isSuccess","className","disabled","isSearch","isMultiselect","options","selectedValues","setSelectedValues","firstSelected","errorText","undefined","clsx","id","C","WALLET_FEE","RequestTransfer","onSuccess","useState","setIsLoading","counter","setCounter","useTimer","defaultCounter","wallets","useAllWallets","exchangeRate","useICPExchangeRate","selectedWallet","useMemo","find","wallet","principal","toString","stringICPtoE8s","walletsOptions","filter","isVaultWallet","map","label","toText","afterLabel","toPresentation","balance","Number","sort","a","b","toUSD","length","option","window","close","validAddress","isHex","principalToAddress","Principal","blockIndex","String","setTimeout","e","message","toast","toastId","_blockHeight","createMachine","context","tsTypes","schema","events","initial","states","Ready","invoke","src","onDone","target","actions","Authenticate","appMeta","on","CONFIRM","Confirm","onEntry","End","type","assignAuthSession","assign","_","event","authSession","assignRequestTransferRequest","requestTransfer","setBlockHeight","blockHeight","assignBlockHeight","services","params","registerRequestTransferHandler","setInterval","status","height","AuthenticationMachine","guards","RequestTransferCoordinator","machine","searchParams","useSearchParams","get","state","send","useMachine","RequestTransferMachine","name","logo","useEffect","matches","B","loadingMessage","actor","children","JSON","stringify","useAllDip20Token","token","getAllToken","fetchBalances","principals","dip20Token","all","account","getICPBalance","symbol","getDIP20Balance","principalId","reduce","acc","cur","fetchVaultsWalletsBalances","VAULT_CANISTER_ID","address","fromHexString","uid","ICP","vaultId","vaultName","fetchVaultWalletsBalances","rest","getExchangeRate","refreshInterval","useUserBalances","useAllPrincipals","balances","mutate","refreshBalances","useVaultDelegation","getWalletDelegationAdapter","WALLET_SESSION_TTL_1_MIN_IN_MS","replaceActorIdentity","vault","targetCanisters","fetchProfile","RootWallet","getGlobalKeys","authState","Chain","accessList","scope","WALLET_SCOPE","getScope","delegationState","BigInt","getLocalStorageOverride","accounts","useAccounts","applicationsMeta","useApplicationsMeta","allAccounts","extendWithFixedAccounts","useSWRImmutable","isNewUser","fetchPrincipals","vaultsBalances","isAllWalletsLoading","vaultDelegation","allVaultsWallets","vaults","getVaults","promisesArray","getWallets","flat","ObjectState","isBalancesLoading","useAllVaultsWallets","applications","getWalletName","sortAlphabetic","concat","keepStaticOrder","Copy","copied","setCopied","copyToClipboard","navigator","clipboard","writeText","tip","onClick","CopiedIcon","CopyIcon","alt","accessor","localeCompare","sensitivity","staticOrder","items","start","comparator","item","includes","Boolean","i","loop","frequency","onElapsed","timer","elapsed","setElapsed","handleInterval","clearInterval","makeDip20Actor","identity","DIP20IDLFactory","agent","HttpAgent","agentBaseConfig","getMetadata","metadata","mapToToken","decimals","parseFloat","TOKEN_CANISTER","balanceOf","dip20Actor","response","Err","Other","Object","keys","Ok","idlFactory","IDL","TxError","Variant","InsufficientAllowance","Null","InsufficientBalance","ErrorOperationStyle","Unauthorized","LedgerTrap","ErrorTo","Text","BlockUsed","AmountTooSmall","Result","Nat","Metadata","Record","fee","Nat8","owner","totalSupply","TokenInfo","holderNumber","Nat64","deployTime","historySize","cycles","feeTo","Service","allowance","Func","approve","burn","getAllowanceSize","getHolders","Vec","Tuple","getTokenInfo","getUserApprovals","mint","setFee","setFeeTo","setLogo","setName","setOwner","transferFrom","minMax","min","max","toLowError","toBigError","h","test"],"sourceRoot":""}