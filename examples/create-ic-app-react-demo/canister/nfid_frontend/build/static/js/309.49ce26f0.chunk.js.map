{"version":3,"file":"static/js/309.49ce26f0.chunk.js","mappings":"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","sources":["features/vaults/action-bar/index.tsx","features/vaults/hooks/use-vault-delegation.ts","features/vaults/hooks/use-vault-member.ts","features/vaults/services.ts","features/vaults/hooks/use-vault.ts","features/vaults/vaults-details/members-page/modal-add-member/index.tsx","features/vaults/vaults-details/members-page/modal-archive-member/index.tsx","features/vaults/vaults-details/members-page/modal-edit-member/index.tsx","features/vaults/vaults-details/members-page/table/table-header.tsx","features/vaults/vaults-details/members-page/table/table-row.tsx","features/vaults/vaults-details/members-page/table/index.tsx","features/vaults/vaults-details/members-page/index.tsx","features/vaults/hooks/use-vault-wallets.ts","features/vaults/hooks/use-vault-policies.ts","features/vaults/vaults-details/policies-page/info-tooltip.tsx","features/vaults/vaults-details/policies-page/modal-add-policy/index.tsx","features/vaults/vaults-details/policies-page/modal-archive-policy/index.tsx","features/vaults/vaults-details/policies-page/modal-edit-policy/index.tsx","features/vaults/vaults-details/policies-page/table/table-header.tsx","features/vaults/vaults-details/policies-page/table/table-row.tsx","features/vaults/vaults-details/policies-page/table/index.tsx","features/vaults/vaults-details/policies-page/index.tsx","features/vaults/hooks/use-vault-transactions.ts","features/vaults/vaults-details/transactions-page/modal-filters/index.tsx","features/vaults/vaults-details/transactions-page/table/table-header.tsx","features/vaults/vaults-details/transactions-page/table/index.tsx","features/vaults/vaults-details/transactions-page/index.tsx","features/vaults/vaults-details/wallets-page/modal-add-wallet/index.tsx","features/vaults/vaults-details/wallets-page/modal-archive-wallet/index.tsx","features/vaults/vaults-details/wallets-page/table/table-header.tsx","features/vaults/vaults-details/wallets-page/table/table-row.tsx","features/vaults/vaults-details/wallets-page/table/index.tsx","features/vaults/vaults-details/wallets-page/index.tsx","features/vaults/vaults-details/tabs.tsx","features/vaults/vaults-details/index.tsx","features/vaults/vaults-details/transactions-page/table/table-row.tsx","integration/wallet/hooks/use-all-wallets.ts","features/vaults/hooks/use-vaults-wallets-balances.ts","../../../node_modules/date-fns/esm/isAfter/index.js","../../../node_modules/date-fns/esm/isBefore/index.js","../../../packages/utils/src/lib/date.ts"],"sourcesContent":["import clsx from \"clsx\"\nimport React, { ChangeEvent } from \"react\"\n\nimport { IconCmpSearch, Input } from \"@nfid-frontend/ui\"\n\nexport interface VaultActionBarProps {\n  actionButtons: JSX.Element\n  onInputChange?: (event: ChangeEvent<HTMLInputElement>) => void\n  onInputType?: (event: ChangeEvent<HTMLInputElement>) => void\n}\n\nexport const VaultActionBar: React.FC<VaultActionBarProps> = ({\n  actionButtons,\n  onInputChange,\n  onInputType,\n}) => {\n  return (\n    <div\n      className={clsx(\n        \"flex items-center justify-between\",\n        \"bg-gray-50 p-5 rounded-t-xl sm:rounded-b-md\",\n      )}\n    >\n      <Input\n        placeholder=\"Search\"\n        icon={<IconCmpSearch className=\"w-4\" />}\n        onChange={onInputChange}\n        onKeyDown={onInputType}\n        className=\"sm:w-[350px]\"\n      />\n      {actionButtons}\n    </div>\n  )\n}\n","import useSWR from \"swr\"\n\nimport { WALLET_SESSION_TTL_1_MIN_IN_MS } from \"@nfid/config\"\nimport { replaceActorIdentity, vault } from \"@nfid/integration\"\n\nimport { getWalletDelegationAdapter } from \"frontend/integration/adapters/delegations\"\n\nexport const useVaultDelegation = () => {\n  return useSWR(\"vaultDelegation\", () => getWalletDelegationAdapter(), {\n    refreshInterval: WALLET_SESSION_TTL_1_MIN_IN_MS,\n    onSuccess: async (data) => {\n      if (data) await replaceActorIdentity(vault, data)\n      return data\n    },\n  })\n}\n","import { SignIdentity } from \"@dfinity/agent\"\nimport { principalToAddress } from \"ictool\"\nimport { useMemo } from \"react\"\n\nimport { useVaultDelegation } from \"./use-vault-delegation\"\n\nexport const useVaultMember = () => {\n  const {\n    data: UserIIDelegation,\n    isLoading,\n    isValidating,\n  } = useVaultDelegation()\n\n  const userAddress = useMemo(() => {\n    if (!UserIIDelegation) return \"\"\n\n    return principalToAddress(\n      UserIIDelegation.getPrincipal(),\n      Array(32).fill(1),\n    )\n  }, [UserIIDelegation])\n\n  return {\n    address: userAddress,\n    identity: UserIIDelegation as SignIdentity,\n    isLoading: isValidating,\n    isReady: !isLoading,\n  }\n}\n","import { getVaults, replaceActorIdentity, vault } from \"@nfid/integration\"\n\nimport { getWalletDelegationAdapter } from \"frontend/integration/adapters/delegations\"\n\n/**\n * @params vaultId: string\n * @returns vault by id\n */\nexport const getVaultById = async (id: string) => {\n  const vaults = await getVaults()\n\n  return vaults.find((vault) => vault.id === BigInt(id))\n}\n\nexport const getAllVaults = async () => {\n  const delegation = await getWalletDelegationAdapter()\n  await replaceActorIdentity(vault, delegation)\n  return await getVaults()\n}\n","import { useMemo } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport useSWR from \"swr\"\n\nimport { VaultRole } from \"@nfid/integration\"\n\nimport { getVaultById } from \"../services\"\nimport { useVaultMember } from \"./use-vault-member\"\n\nexport const useVault = () => {\n  const { vaultId } = useParams()\n  const { address } = useVaultMember()\n\n  const {\n    data: vault,\n    isLoading,\n    isValidating,\n    mutate,\n  } = useSWR(vaultId ? `vault_${vaultId}` : null, () =>\n    getVaultById(vaultId ?? \"\"),\n  )\n\n  const isAdmin = useMemo(() => {\n    const vaultMember = vault?.members.find(\n      (member) => member.userId === address,\n    )\n\n    return vaultMember?.role === VaultRole.ADMIN\n  }, [address, vault?.members])\n\n  return {\n    isFetching: isLoading || isValidating,\n    refetch: mutate,\n    vault,\n    isAdmin,\n  }\n}\n","import clsx from \"clsx\"\nimport { useState } from \"react\"\nimport React from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { toast } from \"react-toastify\"\n\nimport { IconCmpPlus, Input, ModalAdvanced } from \"@nfid-frontend/ui\"\nimport {\n  ObjectState,\n  storeMember,\n  VaultRole,\n  vaultsTracking,\n} from \"@nfid/integration\"\n\nimport { useVault } from \"frontend/features/vaults/hooks/use-vault\"\nimport { useVaultMember } from \"frontend/features/vaults/hooks/use-vault-member\"\n\ninterface VaultCreateForm {\n  name: string\n  address: string\n}\n\nexport const VaultAddMember = () => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const { vault, refetch } = useVault()\n  const { address: memberAddress } = useVaultMember()\n\n  React.useEffect(() => {\n    if (isModalOpen && vault?.id) {\n      vaultsTracking.addVaultMemberModalOpened(vault.id.toString())\n    }\n  }, [isModalOpen, vault?.id])\n\n  const { register, handleSubmit, formState, resetField, reset } = useForm({\n    defaultValues: {\n      name: \"\",\n      address: \"\",\n    },\n  })\n\n  const onAddMember = async ({ name, address }: VaultCreateForm) => {\n    if (!vault?.id) return\n\n    if (address === memberAddress) {\n      toast.warn(\n        \"You're trying to invite yourself to the vault. Try another address.\",\n      )\n      setIsModalOpen(false)\n      return resetField(\"address\")\n    }\n\n    try {\n      setIsLoading(true)\n      await storeMember({\n        memberAddress: address,\n        name: name,\n        vaultId: vault?.id,\n        role: VaultRole.MEMBER,\n        state: ObjectState.ACTIVE,\n      })\n      toast.success(`Member ${name} successfully added`)\n      reset()\n    } catch (e: any) {\n      toast.error(e.message)\n    } finally {\n      setIsLoading(false)\n      setIsModalOpen(false)\n      await refetch()\n      vaultsTracking.addVaultMemberCreated(vault.id.toString())\n    }\n  }\n\n  return (\n    <ModalAdvanced\n      large\n      title={\"Add member\"}\n      isLoading={isLoading}\n      isModalOpen={isModalOpen}\n      isModalOpenChange={setIsModalOpen}\n      secondaryButton={{ type: \"stroke\", text: \"Cancel\" }}\n      primaryButton={{\n        type: \"primary\",\n        onClick: handleSubmit(onAddMember),\n        text: \"Add\",\n        id: \"add-member-button\",\n      }}\n      trigger={\n        <div\n          className={clsx(\n            \"flex items-center space-x-2 font-bold text-blue-600 cursor-pointer\",\n            \"hover:opacity-50 transition-opacity\",\n          )}\n          id=\"add-member-trigger\"\n        >\n          <IconCmpPlus className=\"w-4\" />\n          <span className=\"hidden text-sm sm:block\">Add member</span>\n        </div>\n      }\n    >\n      <div className=\"space-y-5\">\n        <Input\n          labelText=\"Name\"\n          errorText={formState.errors.name?.message}\n          {...register(\"name\", {\n            required: \"This field cannot be empty\",\n          })}\n        />\n        <Input\n          labelText=\"NFID address\"\n          errorText={formState.errors.address?.message}\n          {...register(\"address\", {\n            required: \"This field cannot be empty\",\n          })}\n        />\n      </div>\n    </ModalAdvanced>\n  )\n}\n","import clsx from \"clsx\"\nimport React, { Dispatch, SetStateAction, useCallback, useState } from \"react\"\nimport { toast } from \"react-toastify\"\n\nimport { IconCmpArchive, ModalAdvanced } from \"@nfid-frontend/ui\"\nimport {\n  ObjectState,\n  storeMember,\n  VaultMember,\n  vaultsTracking,\n} from \"@nfid/integration\"\n\nimport { useVault } from \"frontend/features/vaults/hooks/use-vault\"\n\ninterface VaultArchiveMemberProps {\n  isModalOpen: boolean\n  setIsModalOpen: Dispatch<SetStateAction<boolean>>\n  selectedMember?: VaultMember\n}\n\nexport const VaultArchiveMember: React.FC<VaultArchiveMemberProps> = ({\n  isModalOpen,\n  setIsModalOpen,\n  selectedMember,\n}) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const { vault, refetch } = useVault()\n\n  const onArchiveMember = useCallback(async () => {\n    if (!selectedMember || !vault?.id) return\n\n    try {\n      setIsLoading(true)\n      await storeMember({\n        ...selectedMember,\n        vaultId: BigInt(vault.id),\n        memberAddress: selectedMember.userId,\n        name: selectedMember.name ?? \"\",\n        state: ObjectState.ARCHIVED,\n      })\n    } catch (e: any) {\n      toast.error(e.message)\n    } finally {\n      setIsLoading(false)\n      setIsModalOpen(false)\n      toast.success(\"Vault member archived\")\n      await refetch()\n      vaultsTracking.vaultMemberArchived(vault.id.toString())\n    }\n  }, [refetch, selectedMember, setIsModalOpen, vault?.id])\n\n  return (\n    <ModalAdvanced\n      large\n      title=\"Archive member\"\n      isLoading={isLoading}\n      isModalOpen={isModalOpen}\n      isModalOpenChange={setIsModalOpen}\n      secondaryButton={{ type: \"stroke\", onClick: () => {}, text: \"Cancel\" }}\n      primaryButton={{\n        type: \"red\",\n        text: \"Archive\",\n        onClick: onArchiveMember,\n      }}\n    >\n      <div className=\"flex items-start gap-5\">\n        <div\n          className={clsx(\n            \"w-16 h-16 flex items-center justify-center shrink-0\",\n            \"bg-gradient-to-br from-red-50 to-white rounded-3xl\",\n          )}\n        >\n          <IconCmpArchive className=\"text-red-500 w-7\" />\n        </div>\n        <p className=\"text-sm\">\n          This member will be excluded from this vault, and any pending\n          transactions requiring their approval will need to be resubmitted.\n          <br />\n          <br />\n          Archive <strong>{selectedMember?.name}</strong>?\n        </p>\n      </div>\n    </ModalAdvanced>\n  )\n}\n","import React, {\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { toast } from \"react-toastify\"\n\nimport { Input, ModalAdvanced } from \"@nfid-frontend/ui\"\nimport { storeMember, VaultMember, vaultsTracking } from \"@nfid/integration\"\n\nimport { useVault } from \"frontend/features/vaults/hooks/use-vault\"\n\ninterface VaultMemberEditProps {\n  isModalOpen: boolean\n  setIsModalOpen: Dispatch<SetStateAction<boolean>>\n  selectedMember?: VaultMember\n}\n\ninterface VaultMemberEditForm {\n  name?: string\n  userId?: string\n}\n\nexport const VaultEditMember: React.FC<VaultMemberEditProps> = ({\n  isModalOpen,\n  setIsModalOpen,\n  selectedMember,\n}) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const { vault, refetch } = useVault()\n\n  const { register, handleSubmit, formState, reset } = useForm({\n    defaultValues: useMemo(() => {\n      return {\n        name: selectedMember?.name,\n        userId: selectedMember?.userId,\n      }\n    }, [selectedMember?.name, selectedMember?.userId]),\n  })\n\n  useEffect(() => {\n    reset(selectedMember)\n  }, [reset, selectedMember])\n\n  const onMemberEdit = useCallback(\n    async (data: VaultMemberEditForm) => {\n      if (!selectedMember || !vault?.id) return\n\n      try {\n        setIsLoading(true)\n        await storeMember({\n          ...selectedMember,\n          vaultId: BigInt(vault.id),\n          memberAddress: selectedMember.userId,\n          name: data.name ?? \"\",\n        })\n      } catch (e: any) {\n        toast.error(e.message)\n      } finally {\n        setIsLoading(false)\n        setIsModalOpen(false)\n        toast.success(\"Vault member updated\")\n        await refetch()\n        vaultsTracking.vaultMemberUpdated(vault.id.toString())\n      }\n    },\n    [refetch, selectedMember, setIsModalOpen, vault?.id],\n  )\n\n  return (\n    <ModalAdvanced\n      large\n      title={\"Edit member\"}\n      isLoading={isLoading}\n      isModalOpen={isModalOpen}\n      isModalOpenChange={setIsModalOpen}\n      secondaryButton={{ type: \"stroke\", onClick: () => {}, text: \"Cancel\" }}\n      primaryButton={{\n        type: \"primary\",\n        onClick: handleSubmit(onMemberEdit),\n        text: \"Save\",\n      }}\n    >\n      <Input\n        labelText=\"Name\"\n        errorText={formState.errors.name?.message}\n        {...register(\"name\", {\n          required: \"First name must not be blank\",\n        })}\n      />\n      <Input disabled labelText=\"NFID address\" {...register(\"userId\")} />\n    </ModalAdvanced>\n  )\n}\n","import { TableCell, TableRow } from \"@nfid-frontend/ui\"\n\nexport const VaultsMembersTableHeader = () => {\n  return (\n    <TableRow header>\n      <TableCell isLeft className=\"w-10\">\n        #\n      </TableCell>\n      <TableCell isLeft className=\"w-auto\">\n        Name\n      </TableCell>\n      <TableCell centered className=\"w-32\">\n        NFID address\n      </TableCell>\n      <TableCell centered className=\"w-32\">\n        Role\n      </TableCell>\n      <TableCell isRight className=\"w-10\" />\n    </TableRow>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\nimport {\n  IconCmpArchive,\n  IconCmpDots,\n  IconCmpPencil,\n  Popover,\n  PopoverTools,\n  TableCell,\n  TableRow,\n} from \"@nfid-frontend/ui\"\n\nimport { CenterEllipsis } from \"frontend/ui/atoms/center-ellipsis\"\n\nexport interface VaultsMembersTableRowProps {\n  name: string\n  address: string\n  role: string\n  index: number\n  isArchived: boolean\n  onEdit?: () => void\n  onArchive?: () => void\n  isAdmin?: boolean\n}\n\nexport const VaultsMembersTableRow: React.FC<VaultsMembersTableRowProps> = ({\n  name,\n  address,\n  role,\n  index,\n  onEdit,\n  onArchive,\n  isArchived,\n  isAdmin,\n}: VaultsMembersTableRowProps) => {\n  return (\n    <TableRow\n      className={clsx(isArchived && \"text-secondary pointer-events-none\")}\n      id={`member_${name}`}\n    >\n      <TableCell isLeft>{index}</TableCell>\n      <TableCell>{name}</TableCell>\n      <TableCell centered>\n        <CenterEllipsis value={address} leadingChars={9} trailingChars={3} />\n      </TableCell>\n      <TableCell centered>{role}</TableCell>\n      <TableCell isRight className=\"px-0\">\n        <Popover\n          align=\"end\"\n          trigger={\n            <IconCmpDots\n              className={clsx(\"w-full\", (isArchived || !isAdmin) && \"hidden\")}\n            />\n          }\n        >\n          <PopoverTools\n            items={[\n              {\n                icon: <IconCmpPencil />,\n                text: \"Edit\",\n                onClick: onEdit,\n              },\n              {\n                icon: <IconCmpArchive />,\n                text: \"Archive\",\n                onClick: onArchive,\n              },\n            ]}\n          />\n        </Popover>\n      </TableCell>\n    </TableRow>\n  )\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\n\nimport { Table } from \"@nfid-frontend/ui\"\nimport { ObjectState, VaultMember } from \"@nfid/integration\"\n\nimport { useVault } from \"frontend/features/vaults/hooks/use-vault\"\n\nimport { VaultArchiveMember } from \"../modal-archive-member\"\nimport { VaultEditMember } from \"../modal-edit-member\"\nimport { VaultsMembersTableHeader } from \"./table-header\"\nimport { VaultsMembersTableRow, VaultsMembersTableRowProps } from \"./table-row\"\n\nexport interface VaultsMembersTableProps {\n  members: VaultMember[]\n}\n\nexport const VaultsMembersTable: React.FC<VaultsMembersTableProps> = ({\n  members,\n}) => {\n  const [isEditModal, setIsEditModal] = useState(false)\n  const [isArchiveModal, setIsArchiveModal] = useState(false)\n  const [selectedMember, setSelectedMember] = useState<VaultMember>()\n  const { isAdmin } = useVault()\n\n  const membersRows: VaultsMembersTableRowProps[] = useMemo(() => {\n    return members.map((member, index) => ({\n      name: member.name ?? \"Unknown user\",\n      address: member.userId,\n      role: member.role,\n      index: index + 1,\n      isArchived: member.state === ObjectState.ARCHIVED,\n      isAdmin: isAdmin,\n    }))\n  }, [isAdmin, members])\n\n  const onModalOpen = useCallback(\n    (type: \"edit\" | \"archive\", memberId: string) => {\n      const member = members.find((member) => member.userId === memberId)\n      setSelectedMember(member)\n\n      if (type === \"edit\") setIsEditModal(true)\n      if (type === \"archive\") setIsArchiveModal(true)\n    },\n    [members],\n  )\n\n  return (\n    <>\n      <Table tableHeader={<VaultsMembersTableHeader />}>\n        {membersRows.map((member) => (\n          <VaultsMembersTableRow\n            {...member}\n            key={`vault_${member.address}`}\n            onEdit={() => onModalOpen(\"edit\", member.address)}\n            onArchive={() => onModalOpen(\"archive\", member.address)}\n          />\n        ))}\n      </Table>\n      <VaultEditMember\n        isModalOpen={isEditModal}\n        setIsModalOpen={setIsEditModal}\n        selectedMember={selectedMember}\n      />\n      <VaultArchiveMember\n        selectedMember={selectedMember}\n        isModalOpen={isArchiveModal}\n        setIsModalOpen={setIsArchiveModal}\n      />\n    </>\n  )\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\n\nimport { EmptyCard, IconCmpMembers } from \"@nfid-frontend/ui\"\nimport { ObjectState, VaultMember, vaultsTracking } from \"@nfid/integration\"\n\nimport { VaultActionBar } from \"../../action-bar\"\nimport { useVault } from \"../../hooks/use-vault\"\nimport { VaultAddMember } from \"./modal-add-member\"\nimport { VaultsMembersTable } from \"./table\"\n\ninterface VaultsMembersPageProps {}\n\nexport const VaultsMembersPage: React.FC<VaultsMembersPageProps> = () => {\n  const [searchFilter, setSearchFilter] = useState(\"\")\n  const { vault, isFetching, isAdmin } = useVault()\n\n  React.useEffect(() => {\n    if (!isFetching && vault) {\n      console.debug(\"VaultsMembersPage\", { vault, isFetching })\n      vaultsTracking.vaultMembersLoaded({\n        vaultId: vault.id.toString(),\n        totalMembers: vault.members.length,\n        totalActiveMembers: vault.members.filter(\n          (m) => m.state === ObjectState.ACTIVE,\n        ).length,\n        totalInactiveMembers: vault.members.filter(\n          (m) => m.state === ObjectState.ARCHIVED,\n        ).length,\n      })\n    }\n  }, [isFetching, vault])\n\n  const filteredMembers: VaultMember[] = useMemo(() => {\n    if (!vault?.members) return []\n\n    return vault?.members\n      .filter((member) => !member.name || member.name?.includes(searchFilter))\n      .sort((a, b) => a.state.localeCompare(b.state))\n      .sort((a, b) => a.role.localeCompare(b.role))\n  }, [searchFilter, vault?.members])\n\n  const onFilterChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setSearchFilter(e.target.value)\n    },\n    [],\n  )\n\n  return (\n    <div className=\"border border-gray-200 rounded-xl mt-[30px]\">\n      <VaultActionBar\n        onInputChange={onFilterChange}\n        actionButtons={isAdmin ? <VaultAddMember /> : <div />}\n      />\n      <div className=\"w-full px-5 overflow-x-auto\">\n        <VaultsMembersTable members={filteredMembers} />\n        {!filteredMembers.length && !isFetching && (\n          <EmptyCard\n            className=\"h-64\"\n            icon={<IconCmpMembers />}\n            description=\"Add and manage team member permissions and roles.\"\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n","import { useParams } from \"react-router-dom\"\nimport useSWR from \"swr\"\n\nimport { getWallets } from \"@nfid/integration\"\n\nimport { fetchVaultWalletsBalances } from \"frontend/features/fungable-token/fetch-balances\"\n\nexport const useVaultWallets = () => {\n  const { vaultId } = useParams()\n\n  const {\n    data: wallets,\n    isLoading,\n    isValidating,\n    mutate,\n  } = useSWR(vaultId ? `vault_${vaultId}_wallets` : null, () =>\n    getWallets(BigInt(vaultId ?? \"\")),\n  )\n\n  const { data: walletsWithBalances, isValidating: isBalancesLoading } = useSWR(\n    wallets ? [wallets, `useVaultWallets`] : null,\n    async ([wallets]) => {\n      console.debug(\"useVaultWallets\", { wallets })\n      return await fetchVaultWalletsBalances(wallets)\n    },\n    { dedupingInterval: 30_000, refreshInterval: 60_000 },\n  )\n\n  return {\n    vaultId,\n    isFetching: isLoading || isValidating || isBalancesLoading,\n    refetch: mutate,\n    wallets: walletsWithBalances,\n  }\n}\n","import { useMemo } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport useSWR from \"swr\"\n\nimport { getPolicies } from \"@nfid/integration\"\n\nimport { useVaultWallets } from \"./use-vault-wallets\"\n\nexport const useVaultPolicies = () => {\n  const { vaultId } = useParams()\n  const { wallets } = useVaultWallets()\n\n  const { data, isLoading, isValidating, mutate } = useSWR(\n    vaultId ? `vault_${vaultId}_policies` : null,\n    () => getPolicies(BigInt(vaultId ?? \"\")),\n  )\n\n  const policiesWithWalletName = useMemo(() => {\n    return data?.map((policy) => ({\n      ...policy,\n      walletName: policy.wallets\n        ? wallets?.find((w) => w.uid === (policy.wallets && policy.wallets[0]))\n            ?.name\n        : \"Any\",\n    }))\n  }, [data, wallets])\n\n  return {\n    vaultId,\n    isFetching: isLoading || isValidating,\n    refetch: mutate,\n    policies: policiesWithWalletName,\n  }\n}\n","import { IconCmpInfo, Tooltip } from \"@nfid-frontend/ui\"\n\nexport const VaultPolicyInfoTooltip = () => {\n  return (\n    <Tooltip\n      tip={\n        <ul className=\"text-xs max-w-[360px] list-disc leading-4 space-y-1\">\n          <li>\n            Individual wallet policies take precedent over policies applied to\n            all wallets.\n          </li>\n          <li>\n            If a wallet (or Any source) has one or more policies available, a\n            transaction will trigger the policy with the highest value first and\n            approver threshold next.\n          </li>\n          <li>Make sure no gaps exist in your policy workflows.</li>\n          <li>\n            Known shortcomings: Policies can have more approvers than members in\n            a vault.\n          </li>\n        </ul>\n      }\n      className=\"!px-3\"\n    >\n      <IconCmpInfo className=\"text-secondary cursor-pointer\" />\n    </Tooltip>\n  )\n}\n","import clsx from \"clsx\"\nimport { useMemo, useState } from \"react\"\nimport React from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { toast } from \"react-toastify\"\n\nimport {\n  DropdownSelect,\n  IconCmpPlus,\n  Input,\n  IOption,\n  ModalAdvanced,\n} from \"@nfid-frontend/ui\"\nimport { minMax } from \"@nfid-frontend/utils\"\nimport {\n  Currency,\n  ObjectState,\n  PolicyType,\n  registerPolicy,\n  vaultsTracking,\n} from \"@nfid/integration\"\n\nimport { useVault } from \"frontend/features/vaults/hooks/use-vault\"\nimport { useVaultPolicies } from \"frontend/features/vaults/hooks/use-vault-policies\"\nimport { useVaultWallets } from \"frontend/features/vaults/hooks/use-vault-wallets\"\nimport { stringICPtoE8s } from \"frontend/integration/wallet/utils\"\n\ninterface PolicyCreateForm {\n  amount: number\n  approvers: number\n}\n\nexport const VaultAddPolicy = () => {\n  const [selectedWallets, setSelectedWallets] = useState<string[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const { refetch } = useVaultPolicies()\n  const { wallets } = useVaultWallets()\n  const { vault } = useVault()\n\n  React.useEffect(() => {\n    if (isModalOpen && vault?.id) {\n      vaultsTracking.addVaultPolicyModalOpened(vault.id.toString())\n    }\n  }, [isModalOpen, vault?.id])\n\n  const walletsOptions: IOption[] | undefined = useMemo(() => {\n    const options = wallets?.map((wallet) => ({\n      label: wallet.name ?? \"\",\n      value: wallet.uid ?? \"\",\n      disabled: wallet.state === ObjectState.ARCHIVED,\n    }))\n\n    options?.unshift({\n      label: \"Any\",\n      value: \"Any\",\n      disabled: false,\n    })\n\n    return options\n  }, [wallets])\n\n  const { register, handleSubmit, formState, reset } = useForm({\n    defaultValues: {\n      amount: 0,\n      approvers: 0,\n    },\n  })\n\n  const onAddPolicy = async ({ amount, approvers }: PolicyCreateForm) => {\n    if (!vault?.id) return\n    if (!selectedWallets.length)\n      return toast.error(\"Source wallet is a required field\")\n\n    try {\n      setIsLoading(true)\n      await registerPolicy({\n        vaultId: vault?.id,\n        amountThreshold: BigInt(stringICPtoE8s(String(amount))),\n        currency: Currency.ICP,\n        memberThreshold: Number(approvers),\n        type: PolicyType.THRESHOLD_POLICY,\n        wallets: selectedWallets[0] === \"Any\" ? undefined : selectedWallets,\n      })\n      reset()\n      toast.success(`Policy successfully added`)\n      vaultsTracking.vaultPolicyCreated(vault.id.toString())\n    } catch (e: any) {\n      toast.error(\"Failed to add policy\")\n      console.log({ e })\n      toast.error(e.message)\n    } finally {\n      setIsLoading(false)\n      setIsModalOpen(false)\n      await refetch()\n    }\n  }\n\n  return (\n    <ModalAdvanced\n      large\n      title={\"Add policy\"}\n      isLoading={isLoading}\n      isModalOpen={isModalOpen}\n      isModalOpenChange={setIsModalOpen}\n      secondaryButton={{ type: \"stroke\", onClick: () => {}, text: \"Cancel\" }}\n      primaryButton={{\n        type: \"primary\",\n        onClick: handleSubmit(onAddPolicy),\n        text: \"Add\",\n        id: \"create-policy-button\",\n      }}\n      trigger={\n        <div\n          className={clsx(\n            \"flex items-center space-x-2 font-bold text-blue-600 cursor-pointer\",\n            \"hover:opacity-50 transition-opacity\",\n          )}\n          id=\"create-policy-trigger\"\n        >\n          <IconCmpPlus className=\"w-4\" />\n          <span className=\"hidden text-sm sm:block\">Add policy</span>\n        </div>\n      }\n    >\n      <div className=\"space-y-5\" id=\"create-policy-modal\">\n        <DropdownSelect\n          label=\"Source (transactions sourced from this wallet)\"\n          options={walletsOptions ?? []}\n          selectedValues={selectedWallets}\n          setSelectedValues={setSelectedWallets}\n          isMultiselect={false}\n          placeholder=\"Select wallet\"\n          id=\"select-wallet\"\n        />\n        <div className=\"grid grid-cols-2 gap-5\">\n          <Input\n            labelText=\"Greater than (that are greater than)\"\n            type=\"number\"\n            innerText=\"ICP\"\n            errorText={formState.errors.amount?.message}\n            {...register(\"amount\", {\n              required: \"This field cannot be empty\",\n            })}\n          />\n          <Input\n            labelText=\"Approvers\"\n            type=\"number\"\n            innerText={`of ${vault?.members.length}`}\n            errorText={formState.errors.approvers?.message}\n            {...register(\"approvers\", {\n              required: \"This field cannot be empty\",\n              validate: minMax({\n                min: 1,\n                max: 255,\n                toLowError: \"Minimum amount is 1\",\n                toBigError: \"Maximum amount is 255\",\n              }),\n            })}\n          />\n        </div>\n      </div>\n    </ModalAdvanced>\n  )\n}\n","import clsx from \"clsx\"\nimport React, { Dispatch, SetStateAction, useCallback, useState } from \"react\"\nimport { toast } from \"react-toastify\"\n\nimport { IconCmpArchive, ModalAdvanced } from \"@nfid-frontend/ui\"\nimport {\n  ObjectState,\n  Policy,\n  updatePolicy,\n  vaultsTracking,\n} from \"@nfid/integration\"\n\nimport { useVaultPolicies } from \"frontend/features/vaults/hooks/use-vault-policies\"\n\ninterface VaultArchivePolicyProps {\n  isModalOpen: boolean\n  setIsModalOpen: Dispatch<SetStateAction<boolean>>\n  selectedPolicy?: Policy\n}\n\nexport const VaultArchivePolicy: React.FC<VaultArchivePolicyProps> = ({\n  isModalOpen,\n  setIsModalOpen,\n  selectedPolicy,\n}) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const { refetch } = useVaultPolicies()\n\n  const onArchivePolicy = useCallback(async () => {\n    if (!selectedPolicy) return\n\n    try {\n      setIsLoading(true)\n      await updatePolicy({\n        ...selectedPolicy,\n        state: ObjectState.ARCHIVED,\n      })\n    } catch (e: any) {\n      toast.error(e.message)\n    } finally {\n      setIsLoading(false)\n      setIsModalOpen(false)\n      toast.success(\"Policy archived\")\n      await refetch()\n      vaultsTracking.vaultPolicyArchived(selectedPolicy.vault.toString())\n    }\n  }, [refetch, selectedPolicy, setIsModalOpen])\n\n  return (\n    <ModalAdvanced\n      large\n      title=\"Archive policy\"\n      isLoading={isLoading}\n      isModalOpen={isModalOpen}\n      isModalOpenChange={setIsModalOpen}\n      secondaryButton={{ type: \"stroke\", onClick: () => {}, text: \"Cancel\" }}\n      primaryButton={{\n        type: \"red\",\n        text: \"Archive\",\n        onClick: onArchivePolicy,\n      }}\n    >\n      <div className=\"flex items-start gap-5\">\n        <div\n          className={clsx(\n            \"w-16 h-16 flex items-center justify-center shrink-0\",\n            \"bg-gradient-to-br from-red-50 to-white rounded-3xl\",\n          )}\n        >\n          <IconCmpArchive className=\"text-red-500 w-7\" />\n        </div>\n        <p className=\"text-sm\">\n          This wallet, along with its policies and transactions, will be\n          excluded from your Vault pages.\n          <br />\n          <br />\n          Archive policy?\n        </p>\n      </div>\n    </ModalAdvanced>\n  )\n}\n","import React, {\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { toast } from \"react-toastify\"\n\nimport { Input, ModalAdvanced } from \"@nfid-frontend/ui\"\nimport { minMax } from \"@nfid-frontend/utils\"\nimport { Policy, updatePolicy, vaultsTracking } from \"@nfid/integration\"\n\nimport { useVault } from \"frontend/features/vaults/hooks/use-vault\"\nimport { useVaultPolicies } from \"frontend/features/vaults/hooks/use-vault-policies\"\nimport {\n  e8sICPToString,\n  stringICPtoE8s,\n} from \"frontend/integration/wallet/utils\"\n\ninterface VaultPolicyEditProps {\n  isModalOpen: boolean\n  setIsModalOpen: Dispatch<SetStateAction<boolean>>\n  selectedPolicy?: Policy\n}\n\ninterface VaultPolicyEditForm {\n  amount: number\n  approvers: number\n  wallet: string\n}\n\nexport const VaultEditPolicy: React.FC<VaultPolicyEditProps> = ({\n  isModalOpen,\n  setIsModalOpen,\n  selectedPolicy,\n}) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const { refetch } = useVaultPolicies()\n  const { vault } = useVault()\n\n  const { register, handleSubmit, formState, reset } = useForm({\n    defaultValues: useMemo(() => {\n      return {\n        amount: Number(e8sICPToString(Number(selectedPolicy?.amountThreshold))),\n        approvers: Number(selectedPolicy?.memberThreshold),\n        wallet: String(\n          selectedPolicy?.wallets ? selectedPolicy.wallets[0] : \"Any\",\n        ),\n      }\n    }, [\n      selectedPolicy?.amountThreshold,\n      selectedPolicy?.memberThreshold,\n      selectedPolicy?.wallets,\n    ]),\n  })\n\n  useEffect(() => {\n    reset({\n      amount: Number(e8sICPToString(Number(selectedPolicy?.amountThreshold))),\n      approvers: Number(selectedPolicy?.memberThreshold),\n      wallet: String(\n        selectedPolicy?.wallets ? selectedPolicy.wallets[0] : \"Any\",\n      ),\n    })\n  }, [reset, selectedPolicy])\n\n  const onPolicyEdit = useCallback(\n    async (data: VaultPolicyEditForm) => {\n      if (!selectedPolicy) return\n\n      try {\n        setIsLoading(true)\n        await updatePolicy({\n          ...selectedPolicy,\n          amountThreshold: BigInt(stringICPtoE8s(String(data.amount))),\n          memberThreshold: Number(data.approvers),\n        })\n      } catch (e: any) {\n        toast.error(e.message)\n      } finally {\n        setIsLoading(false)\n        setIsModalOpen(false)\n        toast.success(\"Vault policy updated\")\n        await refetch()\n        vaultsTracking.vaultPolicyUpdated(selectedPolicy.vault.toString())\n      }\n    },\n    [refetch, selectedPolicy, setIsModalOpen],\n  )\n\n  return (\n    <ModalAdvanced\n      large\n      title={\"Edit policy\"}\n      isLoading={isLoading}\n      isModalOpen={isModalOpen}\n      isModalOpenChange={setIsModalOpen}\n      secondaryButton={{ type: \"stroke\", onClick: () => {}, text: \"Cancel\" }}\n      primaryButton={{\n        type: \"primary\",\n        onClick: handleSubmit(onPolicyEdit),\n        text: \"Save\",\n      }}\n    >\n      <div className=\"space-y-5\">\n        <Input\n          disabled\n          labelText=\"Transactions sourced from this wallet\"\n          {...register(\"wallet\")}\n        />\n        <Input\n          labelText=\"That are greater than\"\n          type=\"number\"\n          innerText=\"ICP\"\n          errorText={formState.errors.amount?.message}\n          {...register(\"amount\", {\n            required: \"This field cannot be empty\",\n          })}\n        />\n        <Input\n          labelText=\"Will require this number of approvers\"\n          type=\"number\"\n          innerText={`of ${vault?.members.length}`}\n          errorText={formState.errors.approvers?.message}\n          {...register(\"approvers\", {\n            required: \"This field cannot be empty\",\n            validate: minMax({\n              min: 1,\n              max: 255,\n              toLowError: \"Minimum amount is 1\",\n              toBigError: \"Maximum amount is 255\",\n            }),\n          })}\n        />\n      </div>\n    </ModalAdvanced>\n  )\n}\n","import { TableCell, TableRow } from \"@nfid-frontend/ui\"\n\nexport const VaultsPoliciesTableHeader = () => {\n  return (\n    <TableRow header>\n      <TableCell isLeft className=\"w-2\">\n        #\n      </TableCell>\n      <TableCell className=\"w-auto\">Source</TableCell>\n      <TableCell className=\"w-44\">Greater than</TableCell>\n      <TableCell centered className=\"w-44\">\n        Approvers\n      </TableCell>\n      <TableCell isRight className=\"w-10\" />\n    </TableRow>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\nimport {\n  IconCmpArchive,\n  IconCmpDots,\n  IconCmpPencil,\n  Popover,\n  PopoverTools,\n  TableCell,\n  TableRow,\n} from \"@nfid-frontend/ui\"\n\nexport interface VaultsPoliciesTableRowProps {\n  id: bigint\n  number: number\n  source: string\n  greaterThan: string\n  approvers: string\n  onArchive?: () => void\n  onEdit?: () => void\n  isArchived?: boolean\n  isAdmin?: boolean\n}\n\nexport const VaultsPoliciesTableRow: React.FC<VaultsPoliciesTableRowProps> = ({\n  number,\n  source,\n  greaterThan,\n  approvers,\n  onArchive,\n  onEdit,\n  isArchived,\n  isAdmin,\n}: VaultsPoliciesTableRowProps) => {\n  return (\n    <TableRow\n      className={clsx(isArchived && \"text-secondary pointer-events-none\")}\n      id={`policy_row`}\n    >\n      <TableCell isLeft>{number}</TableCell>\n      <TableCell>{source}</TableCell>\n      <TableCell>{greaterThan}</TableCell>\n      <TableCell centered>{approvers}</TableCell>\n      <TableCell isRight className=\"px-0\">\n        <Popover\n          align=\"end\"\n          trigger={\n            <IconCmpDots\n              className={clsx(\"w-full\", (isArchived || !isAdmin) && \"hidden\")}\n            />\n          }\n        >\n          <PopoverTools\n            items={[\n              {\n                icon: <IconCmpPencil />,\n                text: \"Edit\",\n                onClick: onEdit,\n              },\n              {\n                icon: <IconCmpArchive />,\n                text: \"Archive\",\n                onClick: onArchive,\n              },\n            ]}\n          />\n        </Popover>\n      </TableCell>\n    </TableRow>\n  )\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\n\nimport { Table } from \"@nfid-frontend/ui\"\nimport { ObjectState, Policy } from \"@nfid/integration\"\n\nimport { useVault } from \"frontend/features/vaults/hooks/use-vault\"\nimport { e8sICPToString } from \"frontend/integration/wallet/utils\"\n\nimport { VaultArchivePolicy } from \"../modal-archive-policy\"\nimport { VaultEditPolicy } from \"../modal-edit-policy\"\nimport { VaultsPoliciesTableHeader } from \"./table-header\"\nimport {\n  VaultsPoliciesTableRow,\n  VaultsPoliciesTableRowProps,\n} from \"./table-row\"\n\nexport interface VaultsPoliciesTableProps {\n  policies: Policy[]\n}\n\nexport const VaultsPoliciesTable: React.FC<VaultsPoliciesTableProps> = ({\n  policies,\n}) => {\n  const [isArchiveModal, setIsArchiveModal] = useState(false)\n  const [isEditModal, setIsEditModal] = useState(false)\n  const [selectedPolicy, setSelectedPolicy] = useState<Policy>()\n  const { vault, isAdmin } = useVault()\n\n  const policiesToRows = useMemo(() => {\n    return policies.map(\n      (policy, index) =>\n        ({\n          id: policy.id,\n          number: index + 1,\n          // @ts-ignore\n          source: policy.walletName,\n          greaterThan: `${e8sICPToString(Number(policy.amountThreshold))} ${\n            policy.currency\n          }`,\n          approvers: policy.memberThreshold\n            ? `${policy.memberThreshold} of ${vault?.members.length}`\n            : \"All\",\n          isArchived: policy.state === ObjectState.ARCHIVED,\n          isAdmin: isAdmin,\n        } as VaultsPoliciesTableRowProps),\n    )\n  }, [isAdmin, policies, vault?.members.length])\n\n  const onModalOpen = useCallback(\n    (type: \"archive\" | \"edit\", policyId: string) => {\n      const policy = policies.find((policy) => policy.id === BigInt(policyId))\n      setSelectedPolicy(policy)\n\n      if (type === \"archive\") setIsArchiveModal(true)\n      if (type === \"edit\") setIsEditModal(true)\n    },\n    [policies],\n  )\n\n  return (\n    <Table tableHeader={<VaultsPoliciesTableHeader />}>\n      {policiesToRows.map((policy) => (\n        <VaultsPoliciesTableRow\n          {...policy}\n          key={`policy_${policy.id}`}\n          onArchive={() => onModalOpen(\"archive\", String(policy.id) ?? \"\")}\n          onEdit={() => onModalOpen(\"edit\", String(policy.id) ?? \"\")}\n          isArchived={policy.isArchived}\n        />\n      ))}\n      <VaultArchivePolicy\n        selectedPolicy={selectedPolicy}\n        isModalOpen={isArchiveModal}\n        setIsModalOpen={setIsArchiveModal}\n      />\n      <VaultEditPolicy\n        selectedPolicy={selectedPolicy}\n        isModalOpen={isEditModal}\n        setIsModalOpen={setIsEditModal}\n      />\n    </Table>\n  )\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\n\nimport { EmptyCard, IconCmpPolicy } from \"@nfid-frontend/ui\"\nimport { Policy, vaultsTracking } from \"@nfid/integration\"\n\nimport { VaultActionBar } from \"../../action-bar\"\nimport { useVault } from \"../../hooks/use-vault\"\nimport { useVaultPolicies } from \"../../hooks/use-vault-policies\"\nimport { VaultPolicyInfoTooltip } from \"./info-tooltip\"\nimport { VaultAddPolicy } from \"./modal-add-policy\"\nimport { VaultsPoliciesTable } from \"./table\"\n\ninterface VaultsPoliciesPageProps {}\n\nexport const VaultsPoliciesPage: React.FC<VaultsPoliciesPageProps> = () => {\n  const [searchFilter, setSearchFilter] = useState(\"\")\n  const { policies, isFetching } = useVaultPolicies()\n  const { vault, isAdmin } = useVault()\n\n  React.useEffect(() => {\n    if (vault && policies) {\n      console.debug(\"VaultsPoliciesPage\", { vault, policies, isFetching })\n      vaultsTracking.vaultPoliciesLoaded(\n        vault.id.toString(),\n        vault.policies.length,\n      )\n    }\n  }, [isFetching, policies, vault])\n\n  const filteredPolicies: Policy[] = useMemo(() => {\n    if (!policies) return []\n\n    return policies\n      .filter((policies) => policies?.walletName?.includes(searchFilter))\n      .sort((a, b) => Number(a.createdDate) - Number(b.createdDate))\n  }, [policies, searchFilter])\n\n  const onFilterChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setSearchFilter(e.target.value)\n    },\n    [],\n  )\n\n  return (\n    <div className=\"border border-gray-200 rounded-xl mt-[30px]\">\n      <VaultActionBar\n        onInputChange={onFilterChange}\n        actionButtons={\n          <div className=\"flex space-x-5\">\n            {isAdmin ? <VaultAddPolicy /> : null}\n            <VaultPolicyInfoTooltip />\n          </div>\n        }\n      />\n      <div className=\"w-full px-5 overflow-x-auto\">\n        <VaultsPoliciesTable policies={filteredPolicies} />\n        {!filteredPolicies.length && !isFetching && (\n          <EmptyCard\n            className=\"h-64\"\n            icon={<IconCmpPolicy />}\n            description=\"Manage the policies for wallets in your vault.\"\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n","import { useMemo } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport useSWR from \"swr\"\n\nimport { getTransactions } from \"@nfid/integration\"\n\nexport const useVaultTransactions = () => {\n  const { vaultId } = useParams()\n\n  const {\n    data: allTransactions,\n    isLoading,\n    isValidating,\n    mutate,\n  } = useSWR(vaultId ? `vault_${vaultId}_transactions` : null, () =>\n    getTransactions(),\n  )\n\n  const transactions = useMemo(() => {\n    return allTransactions?.filter(\n      (transaction) => transaction.vaultId === BigInt(vaultId ?? 0),\n    )\n  }, [allTransactions, vaultId])\n\n  return {\n    allTransactions,\n    isFetching: isLoading || isValidating,\n    refetch: mutate,\n    transactions,\n  }\n}\n","import React, { Dispatch, SetStateAction } from \"react\"\n\nimport {\n  FilterPopover,\n  DropdownSelect,\n  IconCmpFilters,\n  Input,\n  IOption,\n} from \"@nfid-frontend/ui\"\n\nexport interface VaultFilterTransactionsProps {\n  initiatorsOptions: IOption[]\n  statusOptions: IOption[]\n  initiatedFilter: string[]\n  setInitiatedFilter: (value: string[]) => void\n  statusFilter: string[]\n  setStatusFilter: (value: string[]) => void\n  timeFilter: { from: string; to: string }\n  setTimeFilter: Dispatch<SetStateAction<{ from: string; to: string }>>\n  onResetFilters: () => void\n  onApplyFilters?: () => void\n}\n\nexport const VaultFilterTransactions: React.FC<\n  VaultFilterTransactionsProps\n> = ({\n  initiatorsOptions,\n  statusOptions,\n  initiatedFilter,\n  setInitiatedFilter,\n  statusFilter,\n  setStatusFilter,\n  timeFilter,\n  setTimeFilter,\n  onResetFilters,\n  onApplyFilters,\n}) => {\n  return (\n    <FilterPopover\n      onReset={onResetFilters}\n      onApply={onApplyFilters}\n      trigger={\n        <IconCmpFilters className=\"transition-opacity cursor-pointer hover:opacity-60\" />\n      }\n      align=\"end\"\n    >\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <Input\n            type=\"date\"\n            labelText=\"From\"\n            onChange={(e) =>\n              setTimeFilter({ ...timeFilter, from: e.target.value })\n            }\n            value={timeFilter.from}\n          />\n          <div className=\"w-1 h-[1px] block bg-black shrink-0 mt-6\" />\n          <Input\n            type=\"date\"\n            labelText=\"To\"\n            onChange={(e) =>\n              setTimeFilter({ ...timeFilter, to: e.target.value })\n            }\n            value={timeFilter.to}\n          />\n        </div>\n        <DropdownSelect\n          options={initiatorsOptions}\n          selectedValues={initiatedFilter}\n          setSelectedValues={setInitiatedFilter}\n          label=\"Initiated\"\n        />\n        <DropdownSelect\n          options={statusOptions}\n          selectedValues={statusFilter}\n          setSelectedValues={setStatusFilter}\n          label=\"Status\"\n        />\n      </div>\n    </FilterPopover>\n  )\n}\n","import { TableCell, TableRow } from \"@nfid-frontend/ui\"\n\nexport const VaultsTransactionsTableHeader = () => {\n  return (\n    <TableRow header>\n      <TableCell isLeft className=\"w-2\">\n        #\n      </TableCell>\n      <TableCell className=\"w-auto\">Initiated</TableCell>\n      <TableCell className=\"w-32\">From</TableCell>\n      <TableCell className=\"w-32\">To</TableCell>\n      <TableCell className=\"w-36\">Tokens</TableCell>\n      <TableCell className=\"w-36\">Status</TableCell>\n      <TableCell isRight className=\"w-10\" />\n    </TableRow>\n  )\n}\n","import { Principal } from \"@dfinity/principal\"\nimport { format } from \"date-fns\"\nimport { fromHexString, principalToAddress } from \"ictool\"\nimport React, { useMemo } from \"react\"\n\nimport { Table } from \"@nfid-frontend/ui\"\nimport { bigIntMillisecondsToSeconds } from \"@nfid-frontend/utils\"\nimport { Transaction } from \"@nfid/integration\"\n\nimport { toUSD } from \"frontend/features/fungable-token/accumulate-app-account-balances\"\nimport { useICPExchangeRate } from \"frontend/features/fungable-token/icp/hooks/use-icp-exchange-rate\"\nimport { useVault } from \"frontend/features/vaults/hooks/use-vault\"\nimport { useVaultMember } from \"frontend/features/vaults/hooks/use-vault-member\"\nimport { useVaultWallets } from \"frontend/features/vaults/hooks/use-vault-wallets\"\nimport { e8sICPToString } from \"frontend/integration/wallet/utils\"\n\nimport { VaultsTransactionsTableHeader } from \"./table-header\"\nimport {\n  IVaultTransactionsDetails,\n  VaultsTransactionsTableRow,\n} from \"./table-row\"\n\nexport interface VaultsTransactionsTableProps {\n  transactions: Transaction[]\n}\n\nexport const VaultsTransactionsTable: React.FC<\n  VaultsTransactionsTableProps\n> = ({ transactions }) => {\n  const { vault } = useVault()\n  const { wallets } = useVaultWallets()\n  const { exchangeRate } = useICPExchangeRate()\n  const { address: userAddress } = useVaultMember()\n\n  const transactionsToRows = useMemo(() => {\n    console.log({ transactions })\n    return transactions.map(\n      (transaction, index) =>\n        ({\n          number: index + 1,\n          fromWalletName:\n            wallets?.find(\n              (wallet) => wallet.uid === transaction.from_sub_account,\n            )?.name ?? \"\",\n          toAddress: transaction.to,\n          ownerName: transaction.owner,\n          id: transaction.id,\n          status: transaction.state,\n          amountICP: e8sICPToString(Number(transaction.amount)),\n          amountUSD: toUSD(\n            Number(e8sICPToString(Number(transaction.amount))),\n            exchangeRate ?? 0,\n          ),\n          fromAddress: principalToAddress(\n            Principal.fromText(VAULT_CANISTER_ID),\n            fromHexString(transaction.from_sub_account),\n          ),\n          createdDate: format(\n            new Date(bigIntMillisecondsToSeconds(transaction.createdDate)),\n            \"MMM dd, yyyy - hh:mm:ss aaa\",\n          ),\n          approvers: vault?.members\n            .map((member) => ({\n              name: member.name,\n              isApproved:\n                transaction.approves.findIndex(\n                  (approver) => approver.signer === member.userId,\n                ) !== -1,\n            }))\n            .sort((a, b) => Number(b.isApproved) - Number(a.isApproved)),\n          memberThreshold: transaction.memberThreshold,\n          isInitiatedByYou: transaction.owner === userAddress,\n          isApprovedByYou:\n            transaction.approves.findIndex(\n              (approve) => approve.signer === userAddress,\n            ) !== -1,\n          memo: transaction.memo,\n          vaultId: vault?.id,\n        } as IVaultTransactionsDetails),\n    )\n  }, [\n    exchangeRate,\n    transactions,\n    userAddress,\n    vault?.id,\n    vault?.members,\n    wallets,\n  ])\n\n  return (\n    <Table tableHeader={<VaultsTransactionsTableHeader />}>\n      {transactionsToRows.map((transaction) => (\n        <VaultsTransactionsTableRow\n          {...transaction}\n          key={`transaction_${transaction.id}`}\n        />\n      ))}\n    </Table>\n  )\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\n\nimport {\n  EmptyCard,\n  IconCmpSorting,\n  IconCmpTransactions,\n  IOption,\n} from \"@nfid-frontend/ui\"\nimport {\n  bigIntMillisecondsToSeconds,\n  isDateBetween,\n} from \"@nfid-frontend/utils\"\nimport {\n  Transaction,\n  TransactionState,\n  vaultsTracking,\n} from \"@nfid/integration\"\n\nimport { VaultActionBar } from \"../../action-bar\"\nimport { useVault } from \"../../hooks/use-vault\"\nimport { useVaultTransactions } from \"../../hooks/use-vault-transactions\"\nimport { VaultFilterTransactions } from \"./modal-filters\"\nimport { VaultsTransactionsTable } from \"./table\"\n\ninterface VaultsTransactionsPageProps {}\n\nconst initialTimeFilter = {\n  from: \"\",\n  to: \"\",\n}\n\nexport const VaultsTransactionsPage: React.FC<\n  VaultsTransactionsPageProps\n> = () => {\n  const [searchFilter, setSearchFilter] = useState(\"\")\n  const [initiatedFilter, setInitiatedFilter] = useState<string[]>([])\n  const [statusFilter, setStatusFilter] = useState<string[]>([])\n  const [timeFilter, setTimeFilter] = useState(initialTimeFilter)\n  const { transactions, isFetching } = useVaultTransactions()\n  const { vault } = useVault()\n\n  React.useEffect(() => {\n    if (vault && transactions) {\n      vaultsTracking.vaultTransactionsLoaded({\n        vaultId: vault.id.toString(),\n        totalTransactions: transactions.length,\n        viewIsFiltered:\n          !!searchFilter || !!initiatedFilter.length || !!timeFilter,\n      })\n    }\n  }, [initiatedFilter.length, searchFilter, timeFilter, transactions, vault])\n\n  const initiatorsOptions = useMemo(() => {\n    return (\n      vault?.members.map(\n        (member) =>\n          ({\n            label: member.name ?? \"Unknown user\",\n            value: member.userId,\n          } as IOption),\n      ) ?? []\n    )\n  }, [vault?.members])\n\n  const statusOptions = useMemo(() => {\n    return Object.values(TransactionState).map(\n      (status) =>\n        ({\n          label: status.charAt(0).toUpperCase() + status.slice(1).toLowerCase(),\n          value: status,\n        } as IOption),\n    )\n  }, [])\n\n  const onResetFilters = useCallback(() => {\n    setStatusFilter([])\n    setInitiatedFilter([])\n    setTimeFilter(initialTimeFilter)\n  }, [])\n\n  const filteredTransactions: Transaction[] = useMemo(() => {\n    if (!transactions) return []\n\n    return transactions\n      .map((transaction) => ({\n        ...transaction,\n        owner:\n          vault?.members.find((member) => member.userId === transaction.owner)\n            ?.name ?? transaction.owner,\n      }))\n      .filter((transaction) => transaction?.owner.includes(searchFilter))\n      .filter((transaction) =>\n        statusFilter.length ? statusFilter.includes(transaction.state) : true,\n      )\n      .filter((transaction) =>\n        initiatedFilter.length\n          ? initiatedFilter.includes(transaction.owner)\n          : true,\n      )\n      .filter((transaction) => {\n        if (!timeFilter.from.length && !timeFilter.to.length) return transaction\n\n        return isDateBetween(\n          new Date(bigIntMillisecondsToSeconds(transaction.createdDate)),\n          timeFilter.from.length ? new Date(timeFilter.from) : undefined,\n          timeFilter.to.length ? new Date(timeFilter.to) : undefined,\n        )\n      })\n  }, [\n    transactions,\n    vault?.members,\n    searchFilter,\n    statusFilter,\n    initiatedFilter,\n    timeFilter.from,\n    timeFilter.to,\n  ])\n\n  const onFilterChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setSearchFilter(e.target.value)\n    },\n    [],\n  )\n\n  return (\n    <div className=\"border border-gray-200 rounded-xl mt-[30px]\">\n      <VaultActionBar\n        onInputChange={onFilterChange}\n        actionButtons={\n          <div className=\"flex items-center justify-end w-full ml-4 space-x-5\">\n            <VaultFilterTransactions\n              initiatorsOptions={initiatorsOptions}\n              statusOptions={statusOptions}\n              initiatedFilter={initiatedFilter}\n              setInitiatedFilter={(e) => setInitiatedFilter(e)}\n              statusFilter={statusFilter}\n              setStatusFilter={(e) => setStatusFilter(e)}\n              timeFilter={timeFilter}\n              setTimeFilter={setTimeFilter}\n              onResetFilters={onResetFilters}\n            />\n            <IconCmpSorting className=\"transition-opacity cursor-pointer hover:opacity-60\" />\n          </div>\n        }\n      />\n      <div className=\"w-full px-5 overflow-x-auto\">\n        <VaultsTransactionsTable transactions={filteredTransactions} />\n        {!filteredTransactions.length && !isFetching && (\n          <EmptyCard\n            className=\"h-64\"\n            icon={<IconCmpTransactions />}\n            description=\"No recent transactions to display.\"\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n","import clsx from \"clsx\"\nimport React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { toast } from \"react-toastify\"\n\nimport { IconCmpPlus, Input, ModalAdvanced } from \"@nfid-frontend/ui\"\nimport { registerWallet, vaultsTracking } from \"@nfid/integration\"\n\nimport { useVaultWallets } from \"frontend/features/vaults/hooks/use-vault-wallets\"\n\ninterface WalletCreateForm {\n  name: string\n}\n\nexport const VaultAddWallet = () => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const { vaultId, refetch } = useVaultWallets()\n\n  const { register, handleSubmit, formState } = useForm({\n    defaultValues: {\n      name: \"\",\n    },\n  })\n\n  React.useEffect(() => {\n    if (isModalOpen) {\n      vaultsTracking.addVaultAccountModalOpened()\n    }\n  }, [isModalOpen])\n\n  const onAddMember = async ({ name }: WalletCreateForm) => {\n    if (!vaultId) return\n\n    try {\n      setIsLoading(true)\n      await registerWallet({ name: name, vaultId: BigInt(vaultId) })\n    } catch (e: any) {\n      toast.error(e.message)\n    } finally {\n      setIsLoading(false)\n      setIsModalOpen(false)\n      toast.success(`Wallet ${name} successfully added`)\n      await refetch()\n      vaultsTracking.vaultAccountCreated(vaultId)\n    }\n  }\n\n  return (\n    <ModalAdvanced\n      large\n      title={\"Add wallet\"}\n      isLoading={isLoading}\n      isModalOpen={isModalOpen}\n      isModalOpenChange={setIsModalOpen}\n      secondaryButton={{ type: \"stroke\", onClick: () => {}, text: \"Cancel\" }}\n      primaryButton={{\n        type: \"primary\",\n        onClick: handleSubmit(onAddMember),\n        text: \"Create\",\n        id: \"create-wallet-button\",\n      }}\n      trigger={\n        <div\n          className={clsx(\n            \"flex items-center space-x-2 font-bold text-blue-600 cursor-pointer\",\n            \"hover:opacity-50 transition-opacity\",\n          )}\n          id=\"create-wallet-trigger\"\n        >\n          <IconCmpPlus className=\"w-4\" />\n          <span className=\"hidden text-sm sm:block\">Add wallet</span>\n        </div>\n      }\n    >\n      <div className=\"space-y-5\">\n        <Input\n          labelText=\"Name\"\n          errorText={formState.errors.name?.message}\n          {...register(\"name\", {\n            required: \"This field cannot be empty\",\n          })}\n        />\n      </div>\n    </ModalAdvanced>\n  )\n}\n","import clsx from \"clsx\"\nimport React, { Dispatch, SetStateAction, useCallback, useState } from \"react\"\nimport { toast } from \"react-toastify\"\n\nimport { IconCmpArchive, ModalAdvanced } from \"@nfid-frontend/ui\"\nimport { ObjectState, updateWallet, Wallet } from \"@nfid/integration\"\n\nimport { useVaultWallets } from \"frontend/features/vaults/hooks/use-vault-wallets\"\n\ninterface VaultArchiveWalletProps {\n  isModalOpen: boolean\n  setIsModalOpen: Dispatch<SetStateAction<boolean>>\n  selectedWallet?: Wallet\n}\n\nexport const VaultArchiveWallet: React.FC<VaultArchiveWalletProps> = ({\n  isModalOpen,\n  setIsModalOpen,\n  selectedWallet,\n}) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const { refetch } = useVaultWallets()\n\n  const onArchiveMember = useCallback(async () => {\n    if (!selectedWallet) return\n\n    try {\n      setIsLoading(true)\n      await updateWallet({\n        ...selectedWallet,\n        state: ObjectState.ARCHIVED,\n      })\n    } catch (e: any) {\n      toast.error(e.message)\n    } finally {\n      setIsLoading(false)\n      setIsModalOpen(false)\n      toast.success(\"Wallet archived\")\n      await refetch()\n    }\n  }, [refetch, selectedWallet, setIsModalOpen])\n\n  return (\n    <ModalAdvanced\n      large\n      title=\"Archive wallet\"\n      isLoading={isLoading}\n      isModalOpen={isModalOpen}\n      isModalOpenChange={setIsModalOpen}\n      secondaryButton={{ type: \"stroke\", onClick: () => {}, text: \"Cancel\" }}\n      primaryButton={{\n        type: \"red\",\n        text: \"Archive\",\n        onClick: onArchiveMember,\n      }}\n    >\n      <div className=\"flex items-start gap-5\">\n        <div\n          className={clsx(\n            \"w-16 h-16 flex items-center justify-center shrink-0\",\n            \"bg-gradient-to-br from-red-50 to-white rounded-3xl\",\n          )}\n        >\n          <IconCmpArchive className=\"text-red-500 w-7\" />\n        </div>\n        <p className=\"text-sm\">\n          This wallet, along with its policies and transactions, will be\n          excluded from your Vault pages.\n          <br />\n          <br />\n          Archive <strong>{selectedWallet?.name}</strong>?\n        </p>\n      </div>\n    </ModalAdvanced>\n  )\n}\n","import { TableCell, TableRow } from \"@nfid-frontend/ui\"\n\nexport const VaultsWalletsTableHeader = () => {\n  return (\n    <TableRow header>\n      <TableCell isLeft className=\"w-2\">\n        #\n      </TableCell>\n      <TableCell className=\"w-auto\">Name</TableCell>\n      <TableCell className=\"w-44\">Token balance</TableCell>\n      <TableCell className=\"w-44\">USD balance</TableCell>\n      <TableCell isRight className=\"w-10\" />\n    </TableRow>\n  )\n}\n","import { useActor } from \"@xstate/react\"\nimport clsx from \"clsx\"\nimport React, { useCallback, useContext } from \"react\"\n\nimport {\n  IconCmpArchive,\n  IconCmpDots,\n  IconCmpTransfer,\n  Popover,\n  PopoverTools,\n  TableCell,\n  TableRow,\n} from \"@nfid-frontend/ui\"\nimport { sendReceiveTracking } from \"@nfid/integration\"\n\nimport { useAllToken } from \"frontend/features/fungable-token/use-all-token\"\nimport { useAllWallets } from \"frontend/integration/wallet/hooks/use-all-wallets\"\nimport { ProfileContext } from \"frontend/provider\"\n\nexport interface VaultsWalletsTableRowProps {\n  address?: string\n  uid?: string\n  id: number\n  number: number\n  name: string\n  tokenBalance: string\n  USDBalance: string\n  onArchive: () => void\n  isArchived?: boolean\n  isAdmin?: boolean\n}\n\nexport const VaultsWalletsTableRow: React.FC<VaultsWalletsTableRowProps> = ({\n  address,\n  number,\n  name,\n  tokenBalance,\n  USDBalance,\n  onArchive,\n  isArchived,\n  isAdmin,\n}: VaultsWalletsTableRowProps) => {\n  const globalServices = useContext(ProfileContext)\n  const { token: allTokens } = useAllToken()\n\n  const [, send] = useActor(globalServices.transferService)\n  const { wallets } = useAllWallets()\n\n  const onSendFromVaultWallet = useCallback(() => {\n    sendReceiveTracking.openModal({ isOpenedFromVaults: true })\n    send({ type: \"ASSIGN_SOURCE_WALLET\", data: address ?? \"\" })\n    send({\n      type: \"ASSIGN_SOURCE_ACCOUNT\",\n      data: wallets.find((w) => w.address === address) ?? ({} as any),\n    })\n    send({ type: \"CHANGE_DIRECTION\", data: \"send\" })\n    send({ type: \"CHANGE_TOKEN_TYPE\", data: \"ft\" })\n    send({ type: \"ASSIGN_VAULTS\", data: true })\n\n    send({ type: \"SHOW\" })\n  }, [address, send, wallets])\n\n  const onReceiveToVaultWallet = useCallback(() => {\n    sendReceiveTracking.openModal({\n      isSending: false,\n      isOpenedFromVaults: true,\n    })\n\n    send({ type: \"ASSIGN_SELECTED_FT\", data: allTokens[0] })\n    send({ type: \"ASSIGN_SOURCE_WALLET\", data: address ?? \"\" })\n    send({ type: \"CHANGE_DIRECTION\", data: \"receive\" })\n    send({ type: \"ASSIGN_VAULTS\", data: true })\n\n    send({ type: \"SHOW\" })\n  }, [address, send, allTokens])\n\n  return (\n    <TableRow\n      className={clsx(isArchived && \"text-secondary pointer-events-none\")}\n      id={`wallet_${name}`}\n    >\n      <TableCell isLeft>{number}</TableCell>\n      <TableCell>{name}</TableCell>\n      <TableCell>{tokenBalance} ICP</TableCell>\n      <TableCell>{USDBalance}</TableCell>\n      <TableCell isRight className=\"px-0\">\n        <Popover\n          align=\"end\"\n          trigger={\n            <IconCmpDots className={clsx(\"w-full\", isArchived && \"hidden\")} />\n          }\n        >\n          <PopoverTools\n            items={[\n              {\n                icon: <IconCmpTransfer />,\n                text: \"Send\",\n                onClick: onSendFromVaultWallet,\n              },\n              {\n                icon: <IconCmpTransfer className=\"rotate-180\" />,\n                text: \"Receive\",\n                onClick: onReceiveToVaultWallet,\n              },\n              isAdmin\n                ? {\n                    icon: <IconCmpArchive />,\n                    text: \"Archive\",\n                    onClick: onArchive,\n                  }\n                : {},\n            ]}\n          />\n        </Popover>\n      </TableCell>\n    </TableRow>\n  )\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\n\nimport { Table } from \"@nfid-frontend/ui\"\nimport { ObjectState, Wallet } from \"@nfid/integration\"\n\nimport { toUSD } from \"frontend/features/fungable-token/accumulate-app-account-balances\"\nimport { useICPExchangeRate } from \"frontend/features/fungable-token/icp/hooks/use-icp-exchange-rate\"\nimport { useVault } from \"frontend/features/vaults/hooks/use-vault\"\nimport { e8sICPToString } from \"frontend/integration/wallet/utils\"\n\nimport { VaultArchiveWallet } from \"../modal-archive-wallet\"\nimport { VaultsWalletsTableHeader } from \"./table-header\"\nimport { VaultsWalletsTableRow, VaultsWalletsTableRowProps } from \"./table-row\"\n\nexport interface VaultsWalletsTableProps {\n  wallets: Wallet[]\n}\n\nexport const VaultsWalletsTable: React.FC<VaultsWalletsTableProps> = ({\n  wallets,\n}) => {\n  const [isArchiveModal, setIsArchiveModal] = useState(false)\n  const [selectedWallet, setSelectedWallet] = useState<Wallet>()\n  const { exchangeRate } = useICPExchangeRate()\n  const { isAdmin } = useVault()\n\n  const walletsToRows = useMemo(() => {\n    if (!exchangeRate) return []\n\n    return wallets.map(\n      (wallet, index) =>\n        ({\n          id: index,\n          uid: wallet.uid,\n          address: wallet.address,\n          name: wallet.name,\n          number: index + 1,\n          tokenBalance: e8sICPToString(Number(wallet.balance?.ICP)),\n          USDBalance: toUSD(\n            Number(e8sICPToString(Number(wallet.balance?.ICP))),\n            exchangeRate,\n          ),\n          isArchived: wallet.state === ObjectState.ARCHIVED,\n          isAdmin: isAdmin,\n        } as VaultsWalletsTableRowProps),\n    )\n  }, [exchangeRate, isAdmin, wallets])\n\n  const onModalOpen = useCallback(\n    (type: \"archive\", walletUid: string) => {\n      const wallet = wallets.find((wallet) => wallet.uid === walletUid)\n      setSelectedWallet(wallet)\n\n      if (type === \"archive\") setIsArchiveModal(true)\n    },\n    [wallets],\n  )\n\n  return (\n    <Table tableHeader={<VaultsWalletsTableHeader />}>\n      {walletsToRows.map((wallet) => (\n        <VaultsWalletsTableRow\n          {...wallet}\n          key={`wallet_${wallet.uid}`}\n          onArchive={() => onModalOpen(\"archive\", wallet.uid ?? \"\")}\n          isArchived={wallet.isArchived}\n        />\n      ))}\n      <VaultArchiveWallet\n        selectedWallet={selectedWallet}\n        isModalOpen={isArchiveModal}\n        setIsModalOpen={setIsArchiveModal}\n      />\n    </Table>\n  )\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\n\nimport { EmptyCard, IconCmpWallet } from \"@nfid-frontend/ui\"\nimport { Wallet, vaultsTracking } from \"@nfid/integration\"\nimport { E8S } from \"@nfid/integration/token/icp\"\n\nimport { VaultActionBar } from \"../../action-bar\"\nimport { useVault } from \"../../hooks/use-vault\"\nimport { useVaultWallets } from \"../../hooks/use-vault-wallets\"\nimport { VaultAddWallet } from \"./modal-add-wallet\"\nimport { VaultsWalletsTable } from \"./table\"\n\ninterface VaultsWalletsPageProps {}\n\nexport const VaultsWalletsPage: React.FC<VaultsWalletsPageProps> = () => {\n  const [searchFilter, setSearchFilter] = useState(\"\")\n  const { vaultId, wallets, isFetching } = useVaultWallets()\n  const { isAdmin } = useVault()\n\n  React.useEffect(() => {\n    if (!isFetching && vaultId && wallets) {\n      console.debug(\"VaultsWalletsPage\", { wallets, isFetching })\n\n      const totalICPBalance = wallets.reduce(\n        (acc, { balance }) => acc + (balance ? balance.ICP : BigInt(0)),\n        BigInt(0),\n      )\n\n      vaultsTracking.walletsLoaded({\n        vaultId,\n        totalAccounts: wallets.length,\n        totalICPBalance: Number(totalICPBalance / BigInt(E8S)),\n      })\n    }\n  }, [wallets, isFetching, vaultId])\n\n  const filteredWallets: Wallet[] = useMemo(() => {\n    if (!wallets) return []\n\n    return wallets\n      .filter((wallet) => wallet.name?.includes(searchFilter))\n      .sort((a, b) => a.state.localeCompare(b.state))\n  }, [searchFilter, wallets])\n\n  const onFilterChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setSearchFilter(e.target.value)\n    },\n    [],\n  )\n\n  return (\n    <div className=\"border border-gray-200 rounded-xl mt-[30px]\">\n      <VaultActionBar\n        onInputChange={onFilterChange}\n        actionButtons={isAdmin ? <VaultAddWallet /> : <div />}\n      />\n      <div className=\"w-full px-5 overflow-x-auto\">\n        <VaultsWalletsTable wallets={filteredWallets} />\n        {!filteredWallets.length && !isFetching && (\n          <EmptyCard\n            className=\"h-64\"\n            icon={<IconCmpWallet />}\n            description=\"Each vault can have as many wallets as you’d like, each with its own transfer policy permissions.\"\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n","import { ITab } from \"@nfid-frontend/ui\"\n\nimport { VaultsMembersPage } from \"./members-page\"\nimport { VaultsPoliciesPage } from \"./policies-page\"\nimport { VaultsTransactionsPage } from \"./transactions-page\"\nimport { VaultsWalletsPage } from \"./wallets-page\"\n\nexport const tabs: ITab[] = [\n  {\n    label: \"Wallets\",\n    content: <VaultsWalletsPage />,\n    value: \"wallets\",\n  },\n  {\n    label: \"Members\",\n    content: <VaultsMembersPage />,\n    value: \"members\",\n  },\n  {\n    label: \"Policies\",\n    content: <VaultsPoliciesPage />,\n    value: \"policies\",\n  },\n  {\n    label: \"Transactions\",\n    content: <VaultsTransactionsPage />,\n    value: \"transactions\",\n  },\n]\n","import React from \"react\"\n\nimport { Tabs } from \"@nfid-frontend/ui\"\n\nimport ProfileTemplate from \"frontend/ui/templates/profile-template/Template\"\n\nimport { useVault } from \"../hooks/use-vault\"\nimport { tabs } from \"./tabs\"\n\ninterface VaultsDetailsCoordinatorProps {}\n\nexport const VaultsDetailsCoordinator: React.FC<\n  VaultsDetailsCoordinatorProps\n> = () => {\n  const { vault, isFetching } = useVault()\n\n  return (\n    <ProfileTemplate\n      pageTitle={vault?.name}\n      isLoading={isFetching}\n      showBackButton\n    >\n      <p className=\"mb-5 text-sm\">{vault?.description}</p>\n      <Tabs tabs={tabs} defaultValue=\"wallets\" />\n    </ProfileTemplate>\n  )\n}\n\nexport default VaultsDetailsCoordinator\n","import React, { useCallback } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { toast } from \"react-toastify\"\n\nimport {\n  Badge,\n  IconCmpArrowRight,\n  TableCell,\n  TableRow,\n  Tooltip,\n} from \"@nfid-frontend/ui\"\nimport { TransactionState } from \"@nfid/integration\"\n\nimport { ProfileConstants } from \"frontend/apps/identity-manager/profile/routes\"\nimport { CenterEllipsis } from \"frontend/ui/atoms/center-ellipsis\"\n\ninterface IApprover {\n  name: string\n  isApproved: boolean\n}\n\nexport interface IVaultTransactionsDetails {\n  vaultId: bigint\n  number: number\n  id: bigint\n  fromWalletName: string\n  fromAddress: string\n  toAddress: string\n  amountICP: string\n  amountUSD: string\n  ownerName: string\n  createdDate: string\n  memberThreshold: number\n  approvers: IApprover[]\n  status: TransactionState\n  isInitiatedByYou: boolean\n  isApprovedByYou: boolean\n  memo?: string\n}\n\nexport enum VaultBadgeStatuses {\n  APPROVED = \"success\",\n  PENDING = \"warning\",\n  CANCELED = \"cancel\",\n  REJECTED = \"error\",\n}\n\nexport const VaultsTransactionsTableRow: React.FC<IVaultTransactionsDetails> = (\n  state,\n) => {\n  const navigate = useNavigate()\n\n  const onDetailsOpen = useCallback(() => {\n    navigate(\n      `${ProfileConstants.base}/${ProfileConstants.vaults}/transactions/${state.id}`,\n      {\n        state,\n      },\n    )\n  }, [navigate, state])\n\n  const copyToClipboard = useCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, value: string) => {\n      e.stopPropagation()\n      navigator.clipboard.writeText(value)\n      toast.success(\"Address copied to clipboard\")\n    },\n    [],\n  )\n\n  return (\n    <TableRow className=\"space-x-5 hover:bg-gray-100\" onClick={onDetailsOpen}>\n      <TableCell isLeft>{state.number}</TableCell>\n      <TableCell>{state.ownerName}</TableCell>\n      <TableCell\n        className=\"hover:text-secondary\"\n        onClick={(e) => copyToClipboard(e, state.fromAddress)}\n      >\n        <Tooltip tip={\"Copy to clipboard\"}>\n          <span>{state.fromWalletName}</span>\n        </Tooltip>\n      </TableCell>\n      <TableCell\n        className=\"hover:text-secondary\"\n        onClick={(e) => copyToClipboard(e, state.toAddress)}\n      >\n        <Tooltip tip={\"Copy to clipboard\"}>\n          <CenterEllipsis\n            value={state.toAddress}\n            leadingChars={9}\n            trailingChars={3}\n          />\n        </Tooltip>\n      </TableCell>\n      <TableCell>\n        <p>{state.amountICP?.toString()} ICP</p>\n        <p className=\"text-xs text-secondary\">{state.amountUSD}</p>\n      </TableCell>\n      <TableCell>\n        <Badge type={VaultBadgeStatuses[state.status]}>{state.status}</Badge>\n      </TableCell>\n      <TableCell isRight>\n        <IconCmpArrowRight className=\"ml-auto text-secondary\" />\n      </TableCell>\n    </TableRow>\n  )\n}\n","import { Principal } from \"@dfinity/principal\"\nimport { principalToAddress } from \"ictool\"\nimport React from \"react\"\n\nimport { getWalletName } from \"@nfid/integration\"\n\nimport { TokenBalance } from \"frontend/features/fungable-token/fetch-balances\"\nimport { useUserBalances } from \"frontend/features/fungable-token/icp/hooks/use-user-balances\"\nimport { useAllVaultsWallets } from \"frontend/features/vaults/hooks/use-vaults-wallets-balances\"\nimport { useApplicationsMeta } from \"frontend/integration/identity-manager/queries\"\nimport { sortAlphabetic, keepStaticOrder } from \"frontend/ui/utils/sorting\"\n\nexport type Wallet = {\n  principal: Principal\n  principalId: string\n  balance: TokenBalance\n  label: string\n  accountId: string\n  domain: string\n  isVaultWallet?: boolean\n  address?: string\n  vaultId?: bigint\n  vaultName?: string\n  ethAddress?: string\n  btcAddress?: string\n}\n\nexport const useAllWallets = () => {\n  const { balances, isLoading } = useUserBalances()\n  const { balances: vaultsBalances, isLoading: isAllWalletsLoading } =\n    useAllVaultsWallets()\n\n  const applications = useApplicationsMeta()\n\n  const wallets = React.useMemo(() => {\n    if (!balances || !vaultsBalances) return []\n\n    const wallets = balances\n      ?.map(({ principal, account, ...rest }) => ({\n        label: getWalletName(\n          applications.applicationsMeta ?? [],\n          account.domain,\n          account.accountId,\n        ),\n        accountId: account.accountId,\n        domain: account.domain,\n        principal,\n        address: principalToAddress(principal),\n\n        ...rest,\n      }))\n      .sort(sortAlphabetic(({ label }) => label ?? \"\"))\n      .concat(\n        vaultsBalances?.map(({ principal, account, address, ...rest }) => ({\n          label: account.label,\n          accountId: account.accountId,\n          domain: account.domain,\n          principal,\n          address: address ?? account.accountId,\n          isVaultWallet: true,\n          ...rest,\n        })) ?? [],\n      )\n    return keepStaticOrder<Wallet>(\n      ({ label }) => label ?? \"\",\n      [\"NFID\", \"NNS\"],\n    )(wallets || [])\n  }, [applications.applicationsMeta, balances, vaultsBalances])\n\n  return { wallets, isLoading: isLoading || isAllWalletsLoading }\n}\n","import useSWR from \"swr\"\n\nimport { getVaults, getWallets, ObjectState } from \"@nfid/integration\"\n\nimport { fetchVaultsWalletsBalances } from \"frontend/features/fungable-token/fetch-balances\"\n\nimport { useVaultDelegation } from \"./use-vault-delegation\"\n\nexport const useAllVaultsWallets = () => {\n  const { data: vaultDelegation } = useVaultDelegation()\n\n  const { data: allVaultsWallets, isLoading: isAllWalletsLoading } = useSWR(\n    vaultDelegation ? \"allVaultsWallets\" : null,\n    async () => {\n      const vaults = await getVaults()\n\n      const promisesArray = vaults?.map(async (vault) => {\n        const result = await getWallets(vault.id)\n        return result.map((wallet) => ({\n          ...wallet,\n          vaultId: vault.id,\n          vaultName: vault.name,\n        }))\n      })\n\n      return (await Promise.all(promisesArray))\n        .flat(1)\n        .filter((wallet) => wallet.state !== ObjectState.ARCHIVED)\n    },\n  )\n\n  const { data: balances, isValidating: isBalancesLoading } = useSWR(\n    allVaultsWallets ? [allVaultsWallets, `allVaultsWalletsBalances`] : null,\n    async ([allVaultsWallets]) => {\n      console.debug(\"allVaultsWalletsBalances\", { allVaultsWallets })\n      return await fetchVaultsWalletsBalances(allVaultsWallets)\n    },\n    { dedupingInterval: 30_000, refreshInterval: 60_000 },\n  )\n\n  return {\n    balances,\n    isLoading: isAllWalletsLoading || isBalancesLoading,\n  }\n}\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @param {Date|Number} date - the date that should be after the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\n\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() > dateToCompare.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * @param {Date|Number} date - the date that should be before the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * const result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\n\nexport default function isBefore(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() < dateToCompare.getTime();\n}","import { isAfter, isBefore } from \"date-fns\"\nimport { compareDesc, parse } from \"date-fns\"\n\nexport const bigIntMillisecondsToSeconds = (date: bigint) => {\n  return Math.floor(Number(date / BigInt(10 ** 6)))\n}\n\n/**\n * Check if date is between to other dates\n * @param date Date\n * @param from Date\n * @param to Date\n * @returns boolean\n */\nexport const isDateBetween = (date: Date, from?: Date, to?: Date) => {\n  if (from && !to) return isAfter(date, from)\n  else if (!from && to) return isBefore(date, to)\n  else if (from && to) return isAfter(date, from) && isBefore(date, to)\n  return true\n}\n\nexport const sortByDate = <T extends { date: Date | string }>(\n  arr: T[],\n  dateFormat?: string,\n): T[] => {\n  return arr.sort((a, b) => {\n    const dateA = dateFormat\n      ? parse(a.date as string, dateFormat, new Date())\n      : (a.date as Date)\n    const dateB = dateFormat\n      ? parse(b.date as string, dateFormat, new Date())\n      : (b.date as Date)\n    return compareDesc(dateA, dateB)\n  })\n}\n"],"names":["VaultActionBar","actionButtons","onInputChange","onInputType","className","clsx","placeholder","icon","onChange","onKeyDown","useVaultDelegation","useSWR","getWalletDelegationAdapter","refreshInterval","WALLET_SESSION_TTL_1_MIN_IN_MS","onSuccess","async","data","replaceActorIdentity","vault","useVaultMember","UserIIDelegation","isLoading","isValidating","address","useMemo","principalToAddress","getPrincipal","Array","fill","identity","isReady","getVaultById","getVaults","find","id","BigInt","getAllVaults","delegation","useVault","vaultId","useParams","mutate","isAdmin","vaultMember","members","member","userId","role","VaultRole","isFetching","refetch","VaultAddMember","setIsLoading","useState","isModalOpen","setIsModalOpen","memberAddress","React","vaultsTracking","toString","register","handleSubmit","formState","resetField","reset","useForm","defaultValues","name","large","title","isModalOpenChange","secondaryButton","type","text","primaryButton","onClick","toast","storeMember","state","ObjectState","e","message","trigger","labelText","errorText","errors","required","VaultArchiveMember","selectedMember","onArchiveMember","useCallback","VaultEditMember","useEffect","onMemberEdit","disabled","VaultsMembersTableHeader","header","isLeft","centered","isRight","VaultsMembersTableRow","index","onEdit","onArchive","isArchived","value","leadingChars","trailingChars","align","items","VaultsMembersTable","isEditModal","setIsEditModal","isArchiveModal","setIsArchiveModal","setSelectedMember","membersRows","map","onModalOpen","memberId","tableHeader","key","VaultsMembersPage","searchFilter","setSearchFilter","console","debug","totalMembers","length","totalActiveMembers","filter","m","totalInactiveMembers","filteredMembers","includes","sort","a","b","localeCompare","onFilterChange","target","description","useVaultWallets","wallets","getWallets","walletsWithBalances","isBalancesLoading","fetchVaultWalletsBalances","dedupingInterval","useVaultPolicies","getPolicies","policiesWithWalletName","policy","walletName","w","uid","policies","VaultPolicyInfoTooltip","tip","VaultAddPolicy","selectedWallets","setSelectedWallets","walletsOptions","options","wallet","label","unshift","amount","approvers","registerPolicy","amountThreshold","stringICPtoE8s","String","currency","Currency","memberThreshold","Number","PolicyType","undefined","log","selectedValues","setSelectedValues","isMultiselect","innerText","validate","minMax","min","max","toLowError","toBigError","VaultArchivePolicy","selectedPolicy","onArchivePolicy","updatePolicy","VaultEditPolicy","e8sICPToString","onPolicyEdit","VaultsPoliciesTableHeader","VaultsPoliciesTableRow","number","source","greaterThan","VaultsPoliciesTable","setSelectedPolicy","policiesToRows","policyId","VaultsPoliciesPage","filteredPolicies","createdDate","VaultFilterTransactions","initiatorsOptions","statusOptions","initiatedFilter","setInitiatedFilter","statusFilter","setStatusFilter","timeFilter","setTimeFilter","onResetFilters","onApplyFilters","onReset","onApply","from","to","VaultsTransactionsTableHeader","VaultsTransactionsTable","transactions","exchangeRate","useICPExchangeRate","userAddress","transactionsToRows","transaction","fromWalletName","from_sub_account","toAddress","ownerName","owner","status","amountICP","amountUSD","toUSD","fromAddress","Principal","VAULT_CANISTER_ID","fromHexString","format","Date","bigIntMillisecondsToSeconds","isApproved","approves","findIndex","approver","signer","isInitiatedByYou","isApprovedByYou","approve","memo","initialTimeFilter","VaultsTransactionsPage","allTransactions","getTransactions","useVaultTransactions","totalTransactions","viewIsFiltered","Object","values","TransactionState","charAt","toUpperCase","slice","toLowerCase","filteredTransactions","isDateBetween","VaultAddWallet","registerWallet","VaultArchiveWallet","selectedWallet","updateWallet","VaultsWalletsTableHeader","VaultsWalletsTableRow","tokenBalance","USDBalance","globalServices","useContext","ProfileContext","token","allTokens","useAllToken","send","useActor","transferService","useAllWallets","onSendFromVaultWallet","sendReceiveTracking","isOpenedFromVaults","onReceiveToVaultWallet","isSending","VaultsWalletsTable","setSelectedWallet","walletsToRows","balance","ICP","walletUid","VaultsWalletsPage","totalICPBalance","reduce","acc","totalAccounts","E8S","filteredWallets","tabs","content","VaultsDetailsCoordinator","pageTitle","showBackButton","defaultValue","VaultBadgeStatuses","VaultsTransactionsTableRow","navigate","useNavigate","onDetailsOpen","ProfileConstants","copyToClipboard","stopPropagation","navigator","clipboard","writeText","balances","useUserBalances","vaultsBalances","isAllWalletsLoading","vaultDelegation","allVaultsWallets","vaults","promisesArray","vaultName","Promise","all","flat","fetchVaultsWalletsBalances","useAllVaultsWallets","applications","useApplicationsMeta","principal","account","rest","getWalletName","applicationsMeta","domain","accountId","sortAlphabetic","concat","isVaultWallet","keepStaticOrder","isAfter","dirtyDate","dirtyDateToCompare","requiredArgs","arguments","date","toDate","dateToCompare","getTime","isBefore","Math","floor"],"sourceRoot":""}