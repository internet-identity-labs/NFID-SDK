{"version":3,"file":"static/js/864.1c8cb594.chunk.js","mappings":"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","sources":["apps/identity-manager/profile/collectibles/display-switch.tsx","apps/identity-manager/profile/collectibles/filter-modal.tsx","apps/identity-manager/profile/collectibles/utils/search.ts","apps/identity-manager/profile/collectibles/utils/util.ts","apps/identity-manager/profile/collectibles/profile-collectibles.tsx","apps/identity-manager/profile/collectibles/index.tsx","ui/atoms/nft-preview/assets/copy.svg","ui/atoms/nft-preview/assets/transfer.svg","ui/atoms/nft-preview/index.tsx","ui/atoms/table/index.tsx","ui/atoms/util/util.tsx","ui/templates/profile-container/Container.tsx"],"sourcesContent":["import clsx from \"clsx\"\n\nimport { IconCmpGrid, IconCmpTable } from \"@nfid-frontend/ui\"\n\ninterface IDisplaySwitch {\n  state: \"grid\" | \"table\"\n  setState: (state: \"grid\" | \"table\") => void\n}\n\nexport const DisplaySwitch = ({ state, setState }: IDisplaySwitch) => {\n  return (\n    <div className={clsx(`gap-3 bg-white p-0.5 rounded-md`, \"hidden sm:flex\")}>\n      <div\n        onClick={() => setState(\"grid\")}\n        className={clsx(\n          \"p-0 w-[36px] h-[36px] outline-none rounded-[4px]\",\n          \"hover:text-gray-100 transition-all cursor-pointer\",\n          \"flex justify-center items-center\",\n          state === \"grid\" && \"bg-gray-200\",\n        )}\n      >\n        <IconCmpGrid\n          className={clsx(\"text-black\", state !== \"grid\" && \"!text-secondary\")}\n        />\n      </div>\n      <div\n        id={\"to-table\"}\n        onClick={() => setState(\"table\")}\n        className={clsx(\n          \"p-0 w-[36px] h-[36px] outline-none rounded-[4px]\",\n          \"hover:text-gray-100 transition-all cursor-pointer\",\n          \"flex justify-center items-center\",\n          state === \"table\" && \"bg-gray-200\",\n        )}\n      >\n        <IconCmpTable\n          className={clsx(\"text-black\", state !== \"table\" && \"!text-secondary\")}\n        />\n      </div>\n    </div>\n  )\n}\n","import { DropdownSelect } from \"@nfid-frontend/ui\"\n\ninterface IModalOption {\n  label: string\n  afterLabel?: string | number\n  icon?: string\n  value: string\n  disabled?: boolean\n}\n\ninterface ICollectiblesModal {\n  setBlockchainFilter: (value: string[]) => void\n  setCollectionsFilter: (value: string[]) => void\n  setWalletsFilter: (value: string[]) => void\n  blockchainOptions: IModalOption[]\n  collectionsOptions: IModalOption[]\n  walletOptions: IModalOption[]\n  blockchainFilter: string[]\n  collectionsFilter: string[]\n  walletsFilter: string[]\n}\n\nexport const CollectiblesModal = ({\n  setBlockchainFilter,\n  setCollectionsFilter,\n  setWalletsFilter,\n  blockchainOptions,\n  collectionsOptions,\n  walletOptions,\n  blockchainFilter,\n  collectionsFilter,\n  walletsFilter,\n}: ICollectiblesModal) => {\n  return (\n    <div className=\"space-y-2\">\n      <DropdownSelect\n        label=\"Blockchain\"\n        options={blockchainOptions}\n        selectedValues={blockchainFilter}\n        setSelectedValues={setBlockchainFilter}\n        id={\"blockchain-filter\"}\n      />\n      <DropdownSelect\n        options={collectionsOptions}\n        label=\"Collections\"\n        setSelectedValues={setCollectionsFilter}\n        selectedValues={collectionsFilter}\n        isSearch\n        bordered\n      />\n      <DropdownSelect\n        options={walletOptions}\n        label=\"Accounts\"\n        setSelectedValues={setWalletsFilter}\n        selectedValues={walletsFilter}\n        isSearch\n        bordered\n      />\n    </div>\n  )\n}\n","//https://gist.github.com/GlauberF/220d0cce3b24abf78e8d8611248a3bca\n\nexport class GlauberTS {\n  /**\n   * recursive function to be used when searching for a\n   * keyword in multi-level arrays\n   * ex: array.filter(VimboUtils.containsDeep('search content'))\n   * @param text\n   */\n  public static containsDeep =\n    (text: string) =>\n    (value?: any): any => {\n      if (!value) {\n        return false\n      }\n\n      const valueType = typeof value\n\n      if (valueType === \"string\") {\n        return value.toLowerCase().indexOf(text.toLowerCase()) > -1\n      }\n      if (Array.isArray(value)) {\n        return value.some(GlauberTS.containsDeep(text))\n      }\n      if (valueType === \"object\") {\n        return Object.values(value).some(GlauberTS.containsDeep(text))\n      }\n      return false\n\n      // tslint:disable-next-line\n    }\n\n  /**\n   * Deep search on an array that can have one or more levels\n   * @param array\n   * @param text\n   * @param field\n   */\n  public static searchDeepInArray(\n    array: Array<any>,\n    text: string,\n    field: string,\n  ): any {\n    if (!array || !text) {\n      return null\n    }\n\n    return array.filter(this.containsDeep(text)).map((element) => {\n      const idx = Object.keys(element).length ? Object.keys(element)[0] : null\n\n      if (!idx) {\n        return element\n      }\n\n      return Object.assign({}, element, {\n        [idx]: element[idx].filter(\n          (subElement: any) =>\n            subElement[field].toLowerCase().indexOf(text.toLowerCase()) > -1,\n        ),\n      })\n    })\n  }\n}\n\n// Example\n// https://stackblitz.com/edit/search-deep-typescript?file=index.ts\n","import { Account } from \"@nfid/integration\"\n\nimport {\n  NonFungibleCollection,\n  UserNonFungibleToken,\n} from \"frontend/features/non-fungable-token/types\"\n\nimport { GlauberTS } from \"./search\"\n\nconst sortFuncs: {\n  [key: string]: (a: UserNonFungibleToken, b: UserNonFungibleToken) => number\n} = {\n  \"Token #\": (a, b) => Number(a.index) - Number(b.index),\n  Wallet: (a, b) =>\n    a.account.label.toLowerCase() < b.account.label.toLowerCase() ? -1 : 1,\n  Collection: (a, b) =>\n    a.collection.name.toLowerCase() < b.collection.name.toLowerCase() ? -1 : 1,\n  default: () => 0,\n}\n\nexport function sortUserTokens(\n  tokens: UserNonFungibleToken[],\n  fields: string[] = [\"Token #\"],\n) {\n  const func = sortFuncs[fields[0]]\n  if (!func) console.warn(`Unknown sort method ${fields[0]}`)\n  return tokens.sort(func || sortFuncs.default)\n}\n\nexport function filterUserTokens(\n  tokens: UserNonFungibleToken[],\n  filters: {\n    search?: string\n  },\n) {\n  let result = tokens\n  if (filters.search) {\n    const search = filters.search\n    result = tokens.filter((token) => GlauberTS.containsDeep(search)(token))\n  }\n  return result\n}\n\nexport function userTokensByWallet(tokens: UserNonFungibleToken[]) {\n  return tokens.reduce<{\n    [key: string]: {\n      tokens: UserNonFungibleToken[]\n      account: Account\n      principal: string\n    }\n  }>(\n    (agg, token) => ({\n      ...agg,\n      [token.principal.toText()]: {\n        tokens: [...(agg[token.principal.toText()]?.tokens || []), token],\n        account: token.account,\n        principal: token.principal.toText(),\n      },\n    }),\n    {},\n  )\n}\n\nexport function userTokensByCollection(tokens: UserNonFungibleToken[]) {\n  return tokens.reduce<{\n    [key: string]: {\n      tokens: UserNonFungibleToken[]\n      collection: NonFungibleCollection\n    }\n  }>(\n    (agg, token) => ({\n      ...agg,\n      [token.collection.id]: {\n        tokens: [...(agg[token.collection.id]?.tokens || []), token],\n        collection: token.collection,\n      },\n    }),\n    {},\n  )\n}\n","import { useActor } from \"@xstate/react\"\nimport clsx from \"clsx\"\nimport React, { useContext } from \"react\"\nimport { IoIosSearch } from \"react-icons/io\"\nimport { Link, useNavigate } from \"react-router-dom\"\n\nimport {\n  FilterPopover,\n  Copy,\n  IconCmpFilters,\n  IconCmpTransfer,\n  IconSvgBook,\n  Input,\n  Loader,\n  Tooltip,\n} from \"@nfid-frontend/ui\"\nimport { Image } from \"@nfid-frontend/ui\"\nimport { blockchains } from \"@nfid/config\"\nimport { Application, getWalletName } from \"@nfid/integration\"\n\nimport { UserNonFungibleToken } from \"frontend/features/non-fungable-token/types\"\nimport { link } from \"frontend/integration/entrepot\"\nimport { ProfileContext } from \"frontend/provider\"\nimport NFTPreview from \"frontend/ui/atoms/nft-preview\"\nimport Table from \"frontend/ui/atoms/table\"\nimport ProfileContainer from \"frontend/ui/templates/profile-container/Container\"\nimport ProfileTemplate from \"frontend/ui/templates/profile-template/Template\"\n\nimport { ProfileConstants } from \"../routes\"\nimport { DisplaySwitch } from \"./display-switch\"\nimport { CollectiblesModal } from \"./filter-modal\"\nimport {\n  filterUserTokens,\n  sortUserTokens,\n  userTokensByCollection,\n  userTokensByWallet,\n} from \"./utils/util\"\n\ninterface CollectiblesPage extends React.HTMLAttributes<HTMLDivElement> {\n  isLoading: boolean\n  tokens: UserNonFungibleToken[]\n  applications: Application[]\n}\n\nexport const ProfileCollectibles: React.FC<CollectiblesPage> = ({\n  isLoading,\n  tokens,\n  applications,\n}) => {\n  const globalServices = useContext(ProfileContext)\n\n  const [, send] = useActor(globalServices.transferService)\n  const [search, setSearch] = React.useState(\"\")\n  const [display, setDisplay] = React.useState<\"grid\" | \"table\">(\"grid\")\n\n  const [walletsFilter, setWalletsFilter] = React.useState<string[]>([])\n  const [collectionsFilter, setCollectionsFilter] = React.useState<string[]>([])\n  const [blockchainFilter, setBlockchainFilter] = React.useState<string[]>([])\n\n  const navigate = useNavigate()\n\n  const tokensFiltered = React.useMemo(\n    () =>\n      filterUserTokens(tokens, { search })\n        .filter((token) => {\n          if (!walletsFilter.length) return true\n          return walletsFilter.includes(token.principal.toText())\n        })\n        .filter((token) => {\n          if (!collectionsFilter.length) return true\n          return collectionsFilter.includes(token.collection.id)\n        })\n        .filter((token) => {\n          if (!blockchainFilter.length) return true\n          return blockchainFilter.includes(token.blockchain)\n        }),\n    [tokens, search, walletsFilter, collectionsFilter, blockchainFilter],\n  )\n\n  const tokensByCollections = React.useMemo(() => {\n    return Object.values(userTokensByCollection(sortUserTokens(tokens)))\n  }, [tokens])\n\n  const headings = [\"Asset\", \"Name\", \"Collection\", \"ID\", \"Account\", \"Actions\"]\n  const [sorting, setSorting] = React.useState([\n    \"Wallet\",\n    \"Collection\",\n    \"Token #\",\n  ])\n  const [reverse, setReverse] = React.useState(false)\n  const handleHeaderClick = React.useCallback(\n    () => (v: string) => {\n      if (!sorting.includes(v)) return\n      if (sorting[0] === v) {\n        setReverse(!reverse)\n      } else {\n        const newValue = sorting.map((x) => x)\n        newValue.splice(newValue.indexOf(v), 1)\n        newValue.unshift(v)\n        setSorting(newValue)\n      }\n    },\n    [sorting, reverse],\n  )\n\n  const onTransferNFT = React.useCallback(\n    (tokenId: string) => {\n      const nft = tokens.find((token) => token.tokenId === tokenId)\n      if (!nft) return\n\n      send({ type: \"ASSIGN_SELECTED_NFT\", data: nft })\n      send({ type: \"CHANGE_TOKEN_TYPE\", data: \"nft\" })\n      send({ type: \"CHANGE_DIRECTION\", data: \"send\" })\n\n      send(\"SHOW\")\n    },\n    [send, tokens],\n  )\n\n  const rows = React.useMemo(() => {\n    const result = sortUserTokens(tokensFiltered, sorting).map((token) => ({\n      key: token.tokenId,\n      val: [\n        <Link\n          to={`${ProfileConstants.base}/${ProfileConstants.assets}/${token.tokenId}`}\n          state={{ nft: token }}\n        >\n          <Image\n            alt={`${token.collection.name} ${token.index}`}\n            src={token.assetPreview}\n            className={clsx(`w-[74px] h-[74px] object-cover rounded`)}\n          />\n        </Link>,\n        <div id={`nft_token_${token.name.replace(/\\s|#/g, \"\")}`}>\n          {\" \"}\n          {token.name}\n        </div>,\n        <div\n          id={`nft_collection_${token.collection.name.replace(/\\s/g, \"\")}`}\n          className={clsx(`w-full`)}\n        >\n          {token.collection.name}\n        </div>,\n        <Link\n          to={`${ProfileConstants.base}/${ProfileConstants.assets}/${token.tokenId}`}\n          className=\"truncate block sm:w-[400px]\"\n          id={`nft_id_${token.tokenId.replace(/\\s/g, \"\")}`}\n        >\n          {token.tokenId}\n        </Link>,\n        <div\n          className={clsx(`w-full`)}\n          id={`nft_wallet_${getWalletName(\n            applications,\n            token.account.domain,\n            token.account.accountId,\n          ).replace(/\\s/g, \"\")}`}\n        >\n          {getWalletName(\n            applications,\n            token.account.domain,\n            token.account.accountId,\n          )}\n        </div>,\n        <div className=\"flex items-center space-x-2.5 justify-center\">\n          <Tooltip tip=\"Transfer\">\n            <IconCmpTransfer\n              data-tip=\"Transfer\"\n              className=\"transition-opacity cursor-pointer hover:opacity-50\"\n              onClick={() => onTransferNFT(token.tokenId)}\n            />\n          </Tooltip>\n          <Copy\n            value={\n              token.blockchain === \"Internet Computer\"\n                ? link(token.collection.id, Number(token.index))\n                : token.assetFullsize.url\n            }\n          />\n        </div>,\n      ],\n    }))\n    reverse && result.reverse()\n    return result\n  }, [tokensFiltered, sorting, reverse, applications, onTransferNFT])\n\n  const walletOptions = React.useMemo(() => {\n    const wallets = Object.values(\n      userTokensByWallet(tokensByCollections.map((x) => x.tokens).flat()),\n    ).filter((token) => {\n      if (!collectionsFilter.length) return true\n\n      return !!token.tokens.filter((t) =>\n        collectionsFilter.includes(t.collection.id),\n      ).length\n    })\n\n    return Object.values(wallets).map((item) => ({\n      label: getWalletName(\n        applications,\n        item.account.domain,\n        item.account.accountId,\n      ),\n      value: item.principal,\n      afterLabel: item.tokens.filter((token) => {\n        if (!collectionsFilter.length) return true\n        return collectionsFilter.includes(token.collection.id)\n      }).length,\n    }))\n  }, [applications, collectionsFilter, tokensByCollections])\n\n  const collectionsOptions = React.useMemo(() => {\n    const tokensByCollection = tokensByCollections.filter((obj) => {\n      if (!walletsFilter.length) return true\n      return !!obj.tokens.filter((o) =>\n        walletsFilter.includes(o.principal.toText()),\n      ).length\n    })\n\n    return tokensByCollection.map((option) => ({\n      label: option.collection.name,\n      value: option.collection.id,\n      icon: option.collection?.avatar,\n    }))\n  }, [tokensByCollections, walletsFilter])\n\n  const blockchainOptions = React.useMemo(() => {\n    return blockchains.map((blockchain) => ({\n      label: blockchain,\n      value: blockchain,\n    }))\n  }, [])\n\n  const onResetFilters = React.useCallback(() => {\n    setBlockchainFilter([])\n    setCollectionsFilter([])\n    setWalletsFilter([])\n  }, [])\n\n  return (\n    <ProfileTemplate\n      pageTitle=\"Collectibles\"\n      icon={IconSvgBook}\n      iconTooltip=\"Transactions history\"\n      onIconClick={() =>\n        navigate(`${ProfileConstants.base}/${ProfileConstants.transactions}`)\n      }\n    >\n      <ProfileContainer className={clsx(`flex flex-col`)}>\n        <ProfileContainer className={clsx(`bg-gray-200 !py-5`)}>\n          <div className=\"flex items-center justify-between gap-6\">\n            <Input\n              type=\"text\"\n              value={search}\n              onChange={(e) => setSearch(e.currentTarget.value)}\n              icon={<IoIosSearch size=\"20\" />}\n              placeholder=\"Search\"\n              inputClassName=\"bg-white border-none\"\n              className=\"w-full\"\n            />\n            <div className={clsx(\"flex items-center space-x-6 shrink-0\")}>\n              <FilterPopover\n                trigger={\n                  <div\n                    id={\"filter-nft\"}\n                    className=\"flex items-center justify-center p-2 rounded-md md:bg-white\"\n                  >\n                    <IconCmpFilters className=\"w-[21px] h-[21px] transition-opacity cursor-pointer hover:opacity-60\" />\n                  </div>\n                }\n                onReset={onResetFilters}\n              >\n                <CollectiblesModal\n                  collectionsOptions={collectionsOptions}\n                  setCollectionsFilter={setCollectionsFilter}\n                  collectionsFilter={collectionsFilter}\n                  walletOptions={walletOptions}\n                  setWalletsFilter={setWalletsFilter}\n                  walletsFilter={walletsFilter}\n                  blockchainFilter={blockchainFilter}\n                  setBlockchainFilter={setBlockchainFilter}\n                  blockchainOptions={blockchainOptions}\n                />\n              </FilterPopover>\n              <DisplaySwitch state={display} setState={setDisplay} />\n            </div>\n          </div>\n        </ProfileContainer>\n        <p\n          id={\"items-amount\"}\n          className=\"text-sm text-center text-secondary h-[50px] leading-[50px]\"\n        >\n          {tokensFiltered.length} items\n        </p>\n        {!tokens.length ? (\n          <>{isLoading ? <Loader isLoading={true} /> : \"You have no NFTs!\"}</>\n        ) : display === \"table\" ? (\n          <Table\n            rows={rows}\n            headings={headings}\n            sort={sorting}\n            reverse={reverse}\n            handleHeaderClick={handleHeaderClick}\n          />\n        ) : (\n          <div\n            className={clsx(\n              \"grid gap-5 pb-5\",\n              \"grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4\",\n            )}\n          >\n            {tokensFiltered.map((token) => (\n              <NFTPreview key={`token_${token.tokenId}`} {...token} />\n            ))}\n          </div>\n        )}\n      </ProfileContainer>\n    </ProfileTemplate>\n  )\n}\n","import { useApplicationsMeta } from \"frontend/integration/identity-manager/queries\"\n\nimport { useAllNFTs } from \"../assets/hooks\"\nimport { ProfileCollectibles } from \"./profile-collectibles\"\n\nconst ProfileCollectiblesPage = () => {\n  const { nfts } = useAllNFTs()\n  const applications = useApplicationsMeta()\n\n  return (\n    <ProfileCollectibles\n      isLoading={!nfts || applications.isLoading}\n      tokens={nfts || []}\n      applications={applications.applicationsMeta || []}\n    />\n  )\n}\n\nexport default ProfileCollectiblesPage\n","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCopy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_26258_35847)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.0998 7.80078V7.80086L16.1004 15.6022C16.1004 15.6022 16.1004 15.6022 16.1004 15.6022C16.1004 15.8783 15.8765 16.1022 15.6004 16.1022L7.65098 16.1022C7.37483 16.1022 7.15098 15.8783 7.15098 15.6022V15.6021L7.15039 7.80078C7.15039 7.80077 7.15039 7.80075 7.15039 7.80073C7.15042 7.52461 7.37426 7.30078 7.65039 7.30078H15.5998C15.8759 7.30078 16.0998 7.52464 16.0998 7.80078Z\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.05078 11.2502H3.30078C2.90296 11.2502 2.52143 11.0922 2.24012 10.8109C1.95882 10.5296 1.80078 10.148 1.80078 9.75019V3.30078C1.80078 2.90296 1.95882 2.52143 2.24012 2.24012C2.52143 1.95882 2.90296 1.80078 3.30078 1.80078L9.75019 1.80078C10.148 1.80078 10.5296 1.95882 10.8109 2.24012C11.0922 2.52143 11.2502 2.90296 11.2502 3.30078V4.05078\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_26258_35847\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18,\n    height: 18,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.94e49d910f493b736e359de6b37bb776.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgTransfer(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.55571 1.2231L10.1113 1.2231M10.1113 1.2231L10.1113 6.77867M10.1113 1.2231L1.77792 9.55646\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.88886 11.2222L7.88886 16.7778M7.88886 16.7778L13.4444 16.7778M7.88886 16.7778L16.2222 8.44443\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTransfer);\nexport default __webpack_public_path__ + \"static/media/transfer.aa5aafda7bf79e8e9214195fa4a83b20.svg\";\nexport { ForwardRef as ReactComponent };","import { useActor } from \"@xstate/react\"\nimport clsx from \"clsx\"\nimport React, { useCallback, useContext } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { toast } from \"react-toastify\"\nimport { trimConcat } from \"src/ui/atoms/util/util\"\n\nimport { IconCmpDots, Image } from \"@nfid-frontend/ui\"\n\nimport { ProfileConstants } from \"frontend/apps/identity-manager/profile/routes\"\nimport { UserNonFungibleToken } from \"frontend/features/non-fungable-token/types\"\nimport { ProfileContext } from \"frontend/provider\"\nimport useClickOutside from \"frontend/ui/utils/use-click-outside\"\n\nimport copyIcon from \"./assets/copy.svg\"\nimport transferIcon from \"./assets/transfer.svg\"\n\nconst NFTPreview = (props: UserNonFungibleToken) => {\n  const globalServices = useContext(ProfileContext)\n  const [, send] = useActor(globalServices.transferService)\n  const [isTooltipOpen, setIsTooltipOpen] = React.useState(false)\n  const ref = useClickOutside(() => setIsTooltipOpen(false))\n\n  const copyToClipboard = React.useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      e.preventDefault()\n      toast.info(\"NFT URL copied to clipboard\", {\n        toastId: `copied_nft_${props.tokenId}`,\n      })\n      navigator.clipboard.writeText(props.clipboardText ?? \"\")\n    },\n    [props.clipboardText, props.tokenId],\n  )\n\n  const onTransferNFT = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      e.preventDefault()\n\n      send({ type: \"ASSIGN_SELECTED_NFT\", data: props })\n      send({ type: \"CHANGE_TOKEN_TYPE\", data: \"nft\" })\n      send({ type: \"CHANGE_DIRECTION\", data: \"send\" })\n\n      send(\"SHOW\")\n    },\n    [props, send],\n  )\n\n  return (\n    <div\n      className={clsx(\n        \"rounded-md w-full transition-all cursor-pointer overflow-visible p-[1px] relative z-10\",\n        \"bg-gray-50 hover:bg-white hover:shadow-[0_2px_15px_rgba(0,0,0,0.1)] nft\",\n      )}\n    >\n      <Link\n        to={`${ProfileConstants.base}/${ProfileConstants.assets}/${props.tokenId}`}\n        state={{ nft: props }}\n      >\n        <div\n          className={clsx(\n            \"flex items-center justify-center\",\n            \"absolute w-6 h-6 bg-white rounded-full right-2.5 top-[215px] md:top-[270px]\",\n          )}\n        >\n          <Image\n            src={props.blockchainLogo}\n            alt=\"logo\"\n            className={clsx(\n              \"w-2/3\",\n              props.blockchain !== \"Internet Computer\" && \"!w-auto h-2/3\",\n            )}\n          />\n        </div>\n        <Image\n          className={clsx(\n            \"rounded-[5px] w-full h-[245px] md:h-[300px] object-cover\",\n          )}\n          src={props.assetPreview}\n          alt={props.name}\n        />\n        <div className={clsx(`text-sm p-2.5 flex justify-between items-end`)}>\n          <div>\n            <div\n              id={trimConcat(\"nft_token_\", props.name)}\n              className={clsx(`font-bold`)}\n            >\n              {props.name}\n            </div>\n            <div\n              id={trimConcat(\"nft_collection_\", props.collection.name)}\n              className={clsx(`text-secondary truncate w-[190px] mt-1`)}\n            >\n              {props.collection.name}\n            </div>\n          </div>\n          <div className=\"relative w-6\" ref={ref}>\n            <IconCmpDots\n              className={clsx(\n                \"text-secondary cursor-pointer hover:text-black\",\n                \"rotate-90\",\n              )}\n              onClick={(e) => {\n                e.preventDefault()\n                setIsTooltipOpen(!isTooltipOpen)\n              }}\n            />\n            <div\n              className={clsx(\n                \"absolute top-6 right-0 w-[150px]\",\n                \"bg-white rounded-md shadow-md\",\n                \"text-sm\",\n                !isTooltipOpen && \"hidden\",\n              )}\n            >\n              <div\n                onClick={onTransferNFT}\n                className={clsx(\n                  \"pl-[10px] leading-10 hover:bg-gray-100 rounded-md\",\n                  \"flex items-center space-x-2\",\n                )}\n              >\n                <Image src={transferIcon} alt=\"\" />\n                <span>Transfer</span>\n              </div>\n              <div\n                onClick={copyToClipboard}\n                className={clsx(\n                  \"pl-[10px] leading-10 hover:bg-gray-100 rounded-md\",\n                  \"flex items-center space-x-2\",\n                )}\n              >\n                <Image src={copyIcon} alt=\"\" />\n                <span> Copy link</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Link>\n    </div>\n  )\n}\n\nexport default NFTPreview\n","import clsx from \"clsx\"\nimport React, { ReactNode } from \"react\"\nimport { BsArrowDown } from \"react-icons/bs\"\n\ninterface TableData {\n  headings: string[]\n  rows: { val: React.ReactNode[]; key: string }[]\n  sort?: string[]\n  reverse?: boolean\n  handleHeaderClick?: (col: string) => void\n}\n\nexport const TableWrapper: React.FC<{ children: React.ReactElement }> = ({\n  children,\n}) => <div className={clsx(\"overflow-x-scroll\")}>{children}</div>\n\nexport const TableBase: React.FC<{\n  children: ReactNode[] | ReactNode\n  className?: string\n}> = ({ children, className }) => (\n  <table\n    className={clsx(\n      \"w-full text-left min-w-[640px]\",\n      className ?? \"table-auto\",\n    )}\n  >\n    {children}\n  </table>\n)\n\nexport const TableHead: React.FC<{\n  headings: string[]\n  sort?: string[]\n  reverse?: boolean\n  handleHeaderClick?: (col: string) => void\n}> = ({ sort, reverse, headings, handleHeaderClick }) => (\n  <thead className=\"contents\">\n    <tr className={clsx(`border-b border-gray-900`)}>\n      {headings.map((heading, i) => (\n        <th\n          className={clsx(\n            \"h-16 px-3\",\n            i === 0 && \"pl-[30px]\",\n            i === heading.length - 1 && \"pr-[30px]\",\n            sort?.includes(heading) && \"cursor-pointer hover:bg-gray-100\",\n          )}\n          key={`heading${heading}`}\n          onClick={() => handleHeaderClick && handleHeaderClick(heading)}\n        >\n          <div\n            className={clsx(\n              `flex h-full gap-2 items-center group whitespace-nowrap`,\n            )}\n          >\n            {heading}\n            {sort?.[0] === heading && (\n              <BsArrowDown className={clsx(reverse && `rotate-180`)} />\n            )}\n            {sort?.includes(heading) && sort?.[0] !== heading && (\n              <div className={clsx(`invisible group-hover:visible`)}>\n                <BsArrowDown />\n              </div>\n            )}\n          </div>\n        </th>\n      ))}\n    </tr>\n  </thead>\n)\n\nexport const TableBody: React.FC<{\n  rows: { val: React.ReactNode[]; key: string }[]\n  headings: string[]\n}> = ({ rows, headings }) => (\n  <tbody>\n    {rows.map((row, j) => (\n      <tr key={`row${row.key}`} className={clsx(`border-b border-grey-200`)}>\n        {row.val.map((cell, i) => (\n          <td\n            className={clsx(\n              \"h-[85px] px-3\",\n              i === 0 && \"pl-[30px]\",\n              i === row.val.length - 1 && \"pr-[30px]\",\n            )}\n            key={`row${row.key}cell${headings[i]}`}\n          >\n            {cell}\n          </td>\n        ))}\n      </tr>\n    ))}\n  </tbody>\n)\n\nexport default function Table({\n  headings,\n  rows,\n  sort,\n  reverse,\n  handleHeaderClick,\n}: TableData) {\n  return (\n    <TableWrapper>\n      <TableBase>\n        <TableHead\n          headings={headings}\n          sort={sort}\n          reverse={reverse}\n          handleHeaderClick={handleHeaderClick}\n        />\n        <TableBody rows={rows} headings={headings} />\n      </TableBase>\n    </TableWrapper>\n  )\n}\n","export function trimConcat(y: string, x: string) {\n  return y + x.replace(/\\s|#/g, \"\")\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface IProfileContainer {\n  title?: string | React.ReactNode\n  subTitle?: string | React.ReactNode\n  children?: React.ReactNode\n  className?: string\n  showChildrenPadding?: boolean\n  id?: string\n}\n\nconst ProfileContainer: React.FC<IProfileContainer> = ({\n  title,\n  subTitle,\n  children,\n  className,\n  showChildrenPadding = true,\n  id,\n}) => {\n  return (\n    <div\n      id={id}\n      className={clsx(\n        \"block border border-gray-200 rounded-xl\",\n        \"py-4 sm:py-[26px]\",\n        className,\n      )}\n    >\n      <div className=\"px-5\">\n        {title && (\n          <div className=\"flex items-center justify-between mb-3 text-xl\">\n            {title}\n          </div>\n        )}\n        {subTitle && (\n          <div className=\"flex items-center justify-between mb-4 text-sm leading-5 text-secondary\">\n            {subTitle}\n          </div>\n        )}\n      </div>\n\n      <div className={clsx(showChildrenPadding && \"px-5 sm:px-[30px]\")}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileContainer\n"],"names":["DisplaySwitch","state","setState","className","clsx","onClick","id","CollectiblesModal","setBlockchainFilter","setCollectionsFilter","setWalletsFilter","blockchainOptions","collectionsOptions","walletOptions","blockchainFilter","collectionsFilter","walletsFilter","label","options","selectedValues","setSelectedValues","isSearch","bordered","GlauberTS","array","text","field","filter","this","containsDeep","map","element","idx","Object","keys","length","assign","subElement","toLowerCase","indexOf","value","valueType","Array","isArray","some","values","sortFuncs","a","b","Number","index","Wallet","account","Collection","collection","name","default","sortUserTokens","tokens","fields","func","console","warn","sort","ProfileCollectibles","isLoading","applications","globalServices","useContext","ProfileContext","send","useActor","transferService","search","setSearch","React","display","setDisplay","navigate","useNavigate","tokensFiltered","filters","result","token","filterUserTokens","includes","principal","toText","blockchain","tokensByCollections","reduce","agg","userTokensByCollection","sorting","setSorting","reverse","setReverse","handleHeaderClick","v","newValue","x","splice","unshift","onTransferNFT","tokenId","nft","find","type","data","rows","key","val","to","ProfileConstants","alt","src","assetPreview","replace","getWalletName","domain","accountId","tip","link","assetFullsize","url","wallets","userTokensByWallet","flat","t","item","afterLabel","obj","o","option","icon","avatar","blockchains","onResetFilters","pageTitle","IconSvgBook","iconTooltip","onIconClick","onChange","e","currentTarget","size","placeholder","inputClassName","trigger","onReset","headings","nfts","useAllNFTs","useApplicationsMeta","applicationsMeta","props","isTooltipOpen","setIsTooltipOpen","ref","useClickOutside","copyToClipboard","preventDefault","toast","toastId","navigator","clipboard","writeText","clipboardText","useCallback","blockchainLogo","trimConcat","transferIcon","copyIcon","TableWrapper","children","TableBase","TableHead","heading","i","TableBody","row","j","cell","Table","y","title","subTitle","showChildrenPadding"],"sourceRoot":""}