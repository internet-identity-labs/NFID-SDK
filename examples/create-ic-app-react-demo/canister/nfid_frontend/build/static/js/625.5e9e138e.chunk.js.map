{"version":3,"file":"static/js/625.5e9e138e.chunk.js","mappings":"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","sources":["assets/dfinity.svg","ui/connnector/non-fungible-asset-screen/non-fungible-asset.ts","ui/connnector/non-fungible-asset-screen/util/util.ts","ui/connnector/non-fungible-asset-screen/eth/ethereum-nft-asset.ts","ui/connnector/non-fungible-asset-screen/polygon/polygon-nft-asset.ts","ui/connnector/non-fungible-asset-screen/eth/goerli/ethereum-nft-asset.ts","ui/connnector/non-fungible-asset-screen/polygon/mumbai/polygon-nft-asset.ts","ui/connnector/non-fungible-asset-screen/non-fungible-asset-factory.ts","apps/identity-manager/profile/assets/hooks.ts","ui/connnector/non-fungible-asset-screen/hooks/use-nft-token.ts","ui/atoms/nft-preview/assets/copy.svg","ui/atoms/nft-preview/assets/transfer.svg","ui/atoms/nft-preview/index.tsx","apps/identity-manager/profile/collectibles/display-switch.tsx","apps/identity-manager/profile/collectibles/filter-modal.tsx","apps/identity-manager/profile/collectibles/utils/search.ts","apps/identity-manager/profile/collectibles/utils/util.ts","apps/identity-manager/profile/collectibles/profile-collectibles.tsx","apps/identity-manager/profile/collectibles/index.tsx","features/fungable-token/dip-20/hooks/use-all-token-meta.ts","features/fungable-token/icp/hooks/use-icp-exchange-rate.ts","features/fungable-token/icp/hooks/use-user-balances.ts","integration/internet-identity/queries.ts","ui/atoms/table/index.tsx","ui/atoms/util/util.tsx","ui/connnector/connector-factory.ts","ui/connnector/fungible-asset-screen/ic/hooks/use-icp.ts","features/fungable-token/icp/hooks/use-balance-icp-all.ts","ui/molecules/migration-warning/index.tsx","ui/templates/profile-container/Container.tsx"],"sourcesContent":["var _path, _path2, _path3, _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgDfinity(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    viewBox: \"-1 -1 107.42470599999999 54.6597\",\n    width: 103.42,\n    height: 50.66,\n    className: \"inline w-8 h-8 ml-1\",\n    \"data-v-45c16e28\": \"\",\n    \"data-v-5e337368\": \"\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", {\n    \"data-v-45c16e28\": \"\"\n  }, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.62 9.14C56.48 11.99 53.72 15.07 51.71 17.53C51.71 17.53 54.95 21.18 58.49 25.09C60.41 22.72 63.17 19.51 66.36 16.61C72.26 11.2 76.1 10.11 78.33 10.11C86.64 10.11 93.37 16.92 93.37 25.35C93.37 33.7 86.64 40.51 78.33 40.6C77.94 40.6 77.46 40.55 76.89 40.42C79.29 41.52 81.92 42.31 84.37 42.31C99.58 42.31 102.55 32.03 102.72 31.28C103.16 29.39 103.42 27.42 103.42 25.4C103.38 11.38 92.15 0 78.33 0C72.56 0 66.27 3.08 59.62 9.14Z\",\n    id: \"a2oTCciHwU\",\n    \"data-v-45c16e28\": \"\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"gradientc2rIvyDhN\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 65.17,\n    y1: 3.67,\n    x2: 99.9,\n    y2: 39.44,\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"21%\",\n    \"data-v-45c16e28\": \"\",\n    style: {\n      stopColor: \"rgb(241, 90, 36)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"68.41000000000001%\",\n    \"data-v-45c16e28\": \"\",\n    style: {\n      stopColor: \"rgb(251, 176, 59)\",\n      stopOpacity: 1\n    }\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.8 41.52C46.95 38.66 49.7 35.59 51.71 33.13C51.71 33.13 48.48 29.48 44.94 25.57C43.01 27.94 40.26 31.15 37.07 34.05C31.17 39.41 27.28 40.55 25.09 40.55C16.79 40.55 10.05 33.74 10.05 25.31C10.05 16.96 16.79 10.15 25.09 10.06C25.48 10.06 25.97 10.11 26.53 10.24C24.13 9.14 21.51 8.35 19.06 8.35C3.85 8.35 0.87 18.63 0.7 19.38C0.26 21.27 0 23.24 0 25.26C0 39.28 11.23 50.66 25.09 50.66C30.86 50.66 37.16 47.58 43.8 41.52Z\",\n    id: \"aFWcwFIax\",\n    \"data-v-45c16e28\": \"\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"gradientaIMror5Zz\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 38.22,\n    y1: 46.97,\n    x2: 3.5,\n    y2: 11.2,\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"21%\",\n    \"data-v-45c16e28\": \"\",\n    style: {\n      stopColor: \"rgb(237, 30, 121)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"89.29%\",\n    \"data-v-45c16e28\": \"\",\n    style: {\n      stopColor: \"rgb(82, 39, 133)\",\n      stopOpacity: 1\n    }\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.1 8.57C5.24 8.23 1.16 18.1 0.81 19.37C3.47 8.3 13.37 0.04 25.14 0C34.73 0 44.43 9.21 51.59 17.53C51.6 17.51 51.61 17.5 51.62 17.49C51.62 17.49 54.86 21.13 58.4 25.04C58.4 25.04 62.42 29.7 66.71 33.79C68.37 35.37 76.45 41.74 84.23 41.96C98.49 42.36 102.42 31.94 102.64 31.15C100.02 42.27 90.09 50.57 78.29 50.62C68.69 50.62 58.99 41.4 51.8 33.08C51.78 33.1 51.77 33.11 51.76 33.13C51.76 33.13 48.52 29.48 44.98 25.57C44.98 25.57 40.96 20.91 36.68 16.83C35.01 15.25 26.88 8.79 19.1 8.57ZM0.81 19.37C0.8 19.4 0.79 19.43 0.79 19.46C0.79 19.44 0.8 19.41 0.81 19.37Z\",\n    id: \"e1RZG6bOc\",\n    \"data-v-45c16e28\": \"\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#a2oTCciHwU\",\n    opacity: 1,\n    fill: \"url(#gradientc2rIvyDhN)\",\n    \"data-v-45c16e28\": \"\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#a2oTCciHwU\",\n    opacity: 1,\n    fillOpacity: 0,\n    stroke: \"#000000\",\n    strokeWidth: 1,\n    strokeOpacity: 0,\n    \"data-v-45c16e28\": \"\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#aFWcwFIax\",\n    opacity: 1,\n    fill: \"url(#gradientaIMror5Zz)\",\n    \"data-v-45c16e28\": \"\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#aFWcwFIax\",\n    opacity: 1,\n    fillOpacity: 0,\n    stroke: \"#000000\",\n    strokeWidth: 1,\n    strokeOpacity: 0,\n    \"data-v-45c16e28\": \"\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#e1RZG6bOc\",\n    opacity: 1,\n    fill: \"#29abe2\",\n    fillOpacity: 1,\n    \"data-v-45c16e28\": \"\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#e1RZG6bOc\",\n    opacity: 1,\n    fillOpacity: 0,\n    stroke: \"#000000\",\n    strokeWidth: 1,\n    strokeOpacity: 0,\n    \"data-v-45c16e28\": \"\"\n  }))))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgDfinity);\nexport default __webpack_public_path__ + \"static/media/dfinity.583ab84ba16070ca501453d1e291dff4.svg\";\nexport { ForwardRef as ReactComponent };","import { DelegationIdentity } from \"@dfinity/identity\"\nimport { NonFungibleItem } from \"packages/integration/src/lib/asset/types\"\nimport { UserNonFungibleToken } from \"src/features/non-fungable-token/types\"\nimport { toUserNFT } from \"src/ui/connnector/non-fungible-asset-screen/util/util\"\nimport {\n  AssetFilter,\n  Blockchain,\n  INonFungibleAssetConnector,\n  NftConnectorConfig,\n} from \"src/ui/connnector/types\"\n\nimport { authState } from \"@nfid/integration\"\n\nexport abstract class NonFungibleAssetConnector<T extends NftConnectorConfig>\n  implements INonFungibleAssetConnector\n{\n  protected config: T\n\n  constructor(config: T) {\n    this.config = config\n  }\n\n  async getNonFungibleItems(\n    assetFilter: AssetFilter[],\n  ): Promise<Array<UserNonFungibleToken>> {\n    const identities = await this.getIdentity(\n      assetFilter.map((filter) => filter.principal),\n    )\n    let nfts: UserNonFungibleToken[] = []\n\n    await Promise.all(\n      identities.map(async (identity) => {\n        const items = await this.config.assetService.getItemsByUser({\n          identity,\n        })\n        const userNFTS = items.items.map((nft: NonFungibleItem) =>\n          toUserNFT(nft, identity.getPrincipal(), this.config),\n        )\n        nfts = [...nfts, ...userNFTS]\n      }),\n    )\n    return nfts\n  }\n\n  getTokenStandard(): Blockchain {\n    return this.config.blockchain\n  }\n\n  protected getIdentity = async (\n    filterPrincipals?: string[],\n  ): Promise<DelegationIdentity[]> => {\n    const { delegationIdentity } = authState.get()\n    if (!delegationIdentity) {\n      throw Error(\"Delegation identity error\")\n    }\n\n    return !filterPrincipals?.length ||\n      filterPrincipals?.includes(delegationIdentity.getPrincipal().toString())\n      ? [delegationIdentity]\n      : []\n  }\n\n  getCacheTtl(): number {\n    return 30\n  }\n}\n","import { Principal } from \"@dfinity/principal\"\nimport { NonFungibleItem } from \"packages/integration/src/lib/asset/types\"\nimport { UserNonFungibleToken } from \"src/features/non-fungable-token/types\"\nimport { NftConnectorConfig } from \"src/ui/connnector/types\"\n\nimport { MaticSvg } from \"@nfid-frontend/ui\"\n\nexport function toUserNFT(\n  nft: NonFungibleItem,\n  principal: Principal,\n  conf: NftConnectorConfig,\n): UserNonFungibleToken {\n  return {\n    account: {\n      domain: \"nfid.one\",\n      label: \"account 1\",\n      accountId: \"-1\",\n    },\n    assetFullsize: {\n      url: nft.image.length === 0 ? conf.defaultLogo : nft.image,\n      format: nft?.imageType ?? \"img\",\n    },\n    assetPreview: {\n      url: nft?.thumbnail || MaticSvg,\n      format: nft?.imageType ?? \"img\",\n    },\n    blockchainLogo: conf.defaultLogo,\n    // @ts-ignore\n    blockchain: conf.blockchain,\n    collection: {\n      description: nft.description,\n      id: nft.collection || \"N/A\",\n      name: nft.contractName || \"N/A\",\n      standard: nft.tokenType,\n    },\n    clipboardText: nft.image,\n    contractId: nft.contract || \"N/A\",\n    index: nft.id,\n    name: nft.title,\n    principal: principal,\n    tokenId: nft.tokenId || \"N/A\",\n    owner: principal.toString(),\n    walletName: \"NFID\",\n  }\n}\n","import { NonFungibleAssetConnector } from \"src/ui/connnector/non-fungible-asset-screen/non-fungible-asset\"\nimport { Blockchain, NftConnectorConfig } from \"src/ui/connnector/types\"\n\nimport { IconPngEthereum } from \"@nfid-frontend/ui\"\nimport { ethereumAsset } from \"@nfid/integration\"\n\nexport class EthereumNftConnector extends NonFungibleAssetConnector<NftConnectorConfig> {}\n\nexport const ethereumNftConnector = new EthereumNftConnector({\n  blockchain: Blockchain.ETHEREUM,\n  defaultLogo: IconPngEthereum,\n  assetService: ethereumAsset,\n})\n","import { NonFungibleAssetConnector } from \"src/ui/connnector/non-fungible-asset-screen/non-fungible-asset\"\nimport { Blockchain, NftConnectorConfig } from \"src/ui/connnector/types\"\n\nimport { MaticSvg } from \"@nfid-frontend/ui\"\nimport { polygonAsset } from \"@nfid/integration\"\n\nexport class PolygonNftConnector extends NonFungibleAssetConnector<NftConnectorConfig> {}\n\nexport const polygonNftConnector = new PolygonNftConnector({\n  blockchain: Blockchain.POLYGON,\n  defaultLogo: MaticSvg,\n  assetService: polygonAsset,\n})\n","import { NonFungibleAssetConnector } from \"src/ui/connnector/non-fungible-asset-screen/non-fungible-asset\"\nimport { Blockchain, NftConnectorConfig } from \"src/ui/connnector/types\"\n\nimport { IconPngEthereum } from \"@nfid-frontend/ui\"\nimport { ethereumGoerliAsset } from \"@nfid/integration\"\n\nexport class EthereumGoerliNftConnector extends NonFungibleAssetConnector<NftConnectorConfig> {}\n\nexport const ethereumGoerliNftConnector = new EthereumGoerliNftConnector({\n  blockchain: Blockchain.ETHEREUM_GOERLI,\n  defaultLogo: IconPngEthereum,\n  assetService: ethereumGoerliAsset,\n})\n","import { NonFungibleAssetConnector } from \"src/ui/connnector/non-fungible-asset-screen/non-fungible-asset\"\nimport { Blockchain, NftConnectorConfig } from \"src/ui/connnector/types\"\n\nimport { MaticSvg } from \"@nfid-frontend/ui\"\nimport { polygonMumbaiAsset } from \"@nfid/integration\"\n\nexport class PolygonMumbaiNftConnector extends NonFungibleAssetConnector<NftConnectorConfig> {}\n\nexport const polygonMumbaiNftConnector = new PolygonMumbaiNftConnector({\n  blockchain: Blockchain.POLYGON_MUMBAI,\n  defaultLogo: MaticSvg,\n  assetService: polygonMumbaiAsset,\n})\n","import { UserNonFungibleToken } from \"src/features/non-fungable-token/types\"\nimport { ConnectorFactory } from \"src/ui/connnector/connector-factory\"\nimport { ethereumNftConnector } from \"src/ui/connnector/non-fungible-asset-screen/eth/ethereum-nft-asset\"\nimport { NonFungibleAssetConnector } from \"src/ui/connnector/non-fungible-asset-screen/non-fungible-asset\"\nimport { polygonNftConnector } from \"src/ui/connnector/non-fungible-asset-screen/polygon/polygon-nft-asset\"\nimport {\n  AssetFilter,\n  Blockchain,\n  NftConnectorConfig,\n} from \"src/ui/connnector/types\"\n\nimport { ethereumGoerliNftConnector } from \"./eth/goerli/ethereum-nft-asset\"\nimport { polygonMumbaiNftConnector } from \"./polygon/mumbai/polygon-nft-asset\"\n\nexport class NftFactory extends ConnectorFactory<\n  Blockchain,\n  NonFungibleAssetConnector<NftConnectorConfig>\n> {\n  getNFToken = async (\n    blockchain: Blockchain,\n    assetFilters: AssetFilter[],\n  ): Promise<Array<UserNonFungibleToken>> => {\n    return this.process(blockchain, [assetFilters])\n  }\n\n  getCacheKey(key: Blockchain, functionToCall: Function, args: any[]): string {\n    return (\n      functionToCall.name +\n      key +\n      (args[0]! as AssetFilter[]).reduce(\n        (acc, { principal }) => `${acc}${principal}`,\n        \"\",\n      )\n    )\n  }\n\n  getFunctionToCall(\n    connector: NonFungibleAssetConnector<NftConnectorConfig>,\n  ): Function {\n    return connector.getNonFungibleItems\n  }\n}\n\nexport const nftFactory = new NftFactory([\n  polygonNftConnector,\n  polygonMumbaiNftConnector,\n  ethereumNftConnector,\n  ethereumGoerliNftConnector,\n])\n","import { decodeTokenIdentifier } from \"ictool\"\nimport React from \"react\"\nimport ICPLogo from \"src/assets/dfinity.svg\"\nimport { useNFTConfig } from \"src/ui/connnector/non-fungible-asset-screen/hooks/use-nft-token\"\nimport { nftFactory } from \"src/ui/connnector/non-fungible-asset-screen/non-fungible-asset-factory\"\nimport { AssetFilter } from \"src/ui/connnector/types\"\nimport useSWR from \"swr\"\n\nimport { getWalletName } from \"@nfid/integration\"\n\nimport {\n  collection,\n  link,\n  principalTokens,\n  token,\n  tokens,\n} from \"frontend/integration/entrepot\"\nimport { useApplicationsMeta } from \"frontend/integration/identity-manager/queries\"\nimport { useAllPrincipals } from \"frontend/integration/internet-identity/queries\"\n\nexport function useNFT(tokenId: string) {\n  const { canister } = decodeTokenIdentifier(tokenId)\n  const _collection = useSWR(\n    `collection/${canister}`,\n    () => collection(canister),\n    {\n      dedupingInterval: 60_000 * 5,\n      focusThrottleInterval: 60_000 * 5,\n      revalidateIfStale: false,\n    },\n  )\n\n  const _tokens = useSWR(\n    _collection.data ? `collection/${canister}/tokens` : null,\n    () => {\n      if (!_collection.data) throw new Error(\"unreachable\")\n      return tokens(_collection.data)\n    },\n    {\n      dedupingInterval: 60_000 * 5,\n      focusThrottleInterval: 60_000 * 5,\n      revalidateIfStale: false,\n    },\n  )\n\n  return useSWR(\n    _collection.data && _tokens.data ? `token/${tokenId}` : null,\n    () => {\n      if (!_collection.data || !_tokens.data) throw new Error(\"unreachable\")\n      const { index } = decodeTokenIdentifier(tokenId)\n      return token(_collection.data, _tokens.data, index)\n    },\n    {\n      dedupingInterval: 60_000 * 5,\n      focusThrottleInterval: 60_000 * 5,\n      revalidateIfStale: false,\n    },\n  )\n}\n\nexport const useAllNFTs = (assetFilter?: AssetFilter[]) => {\n  const supportedBlockchains = nftFactory.getKeys()\n  const { configs: tokens } = useNFTConfig({\n    assetFilters: assetFilter ?? [],\n    blockchains: supportedBlockchains,\n  })\n  const { principals } = useAllPrincipals()\n  const { applicationsMeta } = useApplicationsMeta()\n  const { data, isLoading, isValidating } = useSWR(\n    principals ? [principals, \"userTokens\"] : null,\n    ([principals]) => principalTokens(principals),\n    {\n      dedupingInterval: 60_000 * 5,\n      focusThrottleInterval: 60_000 * 5,\n      revalidateIfStale: false,\n    },\n  )\n\n  const nfts = React.useMemo(() => {\n    if (!applicationsMeta) return []\n\n    return data\n      ?.map(({ principal, account, collection, index, ...rest }) => ({\n        principal,\n        account,\n        walletName: getWalletName(\n          applicationsMeta,\n          account.domain,\n          account.accountId,\n        ),\n        contractId: rest.canisterId,\n        owner: principal?.toText(),\n        clipboardText: link(collection.id, Number(index)),\n        collection,\n        index,\n        blockchainLogo: ICPLogo,\n        ...rest,\n      }))\n      .filter((nft) =>\n        !assetFilter?.length\n          ? true\n          : !!assetFilter.find((f) => f.principal === nft.principal.toString()),\n      )\n      .concat(tokens as any)\n  }, [data, applicationsMeta, assetFilter, tokens])\n  return { nfts, isLoading: isLoading || isValidating }\n}\n","import { nftFactory } from \"src/ui/connnector/non-fungible-asset-screen/non-fungible-asset-factory\"\nimport useSWR from \"swr\"\n\nimport { AssetFilter, Blockchain } from \"../../types\"\n\ntype UseTokenConfig = {\n  assetFilters: AssetFilter[]\n  blockchains: Blockchain[]\n}\n\nexport const useNFTConfig = ({ assetFilters, blockchains }: UseTokenConfig) => {\n  const { data: configs, ...rest } = useSWR(\n    [blockchains, assetFilters, \"useNftConfig\"],\n    ([blockchains, assetFilters]) =>\n      Promise.all(\n        blockchains.map(async (blockchain) => {\n          try {\n            return await nftFactory.getNFToken(blockchain, assetFilters)\n          } catch (e) {\n            console.error(\"useNftConfig\", e)\n            return []\n          }\n        }),\n      ),\n  )\n\n  return { configs: configs?.flat() || [], ...rest }\n}\n","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCopy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_26258_35847)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.0998 7.80078V7.80086L16.1004 15.6022C16.1004 15.6022 16.1004 15.6022 16.1004 15.6022C16.1004 15.8783 15.8765 16.1022 15.6004 16.1022L7.65098 16.1022C7.37483 16.1022 7.15098 15.8783 7.15098 15.6022V15.6021L7.15039 7.80078C7.15039 7.80077 7.15039 7.80075 7.15039 7.80073C7.15042 7.52461 7.37426 7.30078 7.65039 7.30078H15.5998C15.8759 7.30078 16.0998 7.52464 16.0998 7.80078Z\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.05078 11.2502H3.30078C2.90296 11.2502 2.52143 11.0922 2.24012 10.8109C1.95882 10.5296 1.80078 10.148 1.80078 9.75019V3.30078C1.80078 2.90296 1.95882 2.52143 2.24012 2.24012C2.52143 1.95882 2.90296 1.80078 3.30078 1.80078L9.75019 1.80078C10.148 1.80078 10.5296 1.95882 10.8109 2.24012C11.0922 2.52143 11.2502 2.90296 11.2502 3.30078V4.05078\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_26258_35847\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18,\n    height: 18,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.94e49d910f493b736e359de6b37bb776.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgTransfer(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.55571 1.2231L10.1113 1.2231M10.1113 1.2231L10.1113 6.77867M10.1113 1.2231L1.77792 9.55646\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.88886 11.2222L7.88886 16.7778M7.88886 16.7778L13.4444 16.7778M7.88886 16.7778L16.2222 8.44443\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTransfer);\nexport default __webpack_public_path__ + \"static/media/transfer.aa5aafda7bf79e8e9214195fa4a83b20.svg\";\nexport { ForwardRef as ReactComponent };","import { useActor } from \"@xstate/react\"\nimport clsx from \"clsx\"\nimport React, { useCallback, useContext } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { toast } from \"react-toastify\"\nimport { trimConcat } from \"src/ui/atoms/util/util\"\n\nimport { IconCmpDots } from \"@nfid-frontend/ui\"\n\nimport { ProfileConstants } from \"frontend/apps/identity-manager/profile/routes\"\nimport { UserNonFungibleToken } from \"frontend/features/non-fungable-token/types\"\nimport { ProfileContext } from \"frontend/provider\"\nimport useClickOutside from \"frontend/ui/utils/use-click-outside\"\n\nimport copyIcon from \"./assets/copy.svg\"\nimport transferIcon from \"./assets/transfer.svg\"\n\nconst NFTPreview = (props: UserNonFungibleToken) => {\n  const globalServices = useContext(ProfileContext)\n  const [, send] = useActor(globalServices.transferService)\n  const [isTooltipOpen, setIsTooltipOpen] = React.useState(false)\n  const ref = useClickOutside(() => setIsTooltipOpen(false))\n\n  const copyToClipboard = React.useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      e.preventDefault()\n      toast.info(\"NFT URL copied to clipboard\", {\n        toastId: `copied_nft_${props.tokenId}`,\n      })\n      navigator.clipboard.writeText(props.clipboardText ?? \"\")\n    },\n    [props.clipboardText, props.tokenId],\n  )\n\n  const onTransferNFT = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      e.preventDefault()\n\n      send({ type: \"ASSIGN_SELECTED_NFT\", data: props.tokenId })\n      send({ type: \"CHANGE_TOKEN_TYPE\", data: \"nft\" })\n      send({ type: \"CHANGE_DIRECTION\", data: \"send\" })\n\n      send(\"SHOW\")\n    },\n    [props, send],\n  )\n\n  return (\n    <div\n      className={clsx(\n        \"rounded-md w-full transition-all cursor-pointer overflow-visible p-[1px]\",\n        \"bg-gray-50 hover:bg-white hover:shadow-[0_2px_15px_rgba(0,0,0,0.1)] nft\",\n      )}\n      id={\n        trimConcat(\"nft_token_\", props.name) +\n        \"_\" +\n        props.collection.id.replace(/\\s|#/g, \"\")\n      }\n    >\n      <Link\n        className=\"relative flex flex-col items-end\"\n        to={`${ProfileConstants.base}/${ProfileConstants.assets}/${props.tokenId}`}\n        state={{ nft: props }}\n      >\n        <div\n          className={clsx(\n            \"flex items-center justify-center z-10 mr-2.5\",\n            \"absolute w-6 h-6 bg-white rounded-full top-[215px] md:top-[267px]\",\n          )}\n          id={trimConcat(\"nft_token_\", props.name)}\n        >\n          <img\n            src={props.blockchainLogo}\n            alt=\"logo\"\n            className={clsx(\n              \"w-2/3\",\n              props.blockchain !== \"Internet Computer\" && \"!w-auto h-2/3\",\n            )}\n          />\n        </div>\n        {[\"img\", \"image\"].includes(props.assetPreview.format) && (\n          <img\n            id=\"asset-img\"\n            className={clsx(\n              \"rounded-[5px] w-full h-[245px] md:h-[300px] object-cover\",\n            )}\n            src={props.assetPreview.url}\n            alt={props.name}\n          />\n        )}\n        {props.assetPreview.format === \"video\" && (\n          <video\n            id=\"asset-video\"\n            className={clsx(\n              \"rounded-[5px] w-full h-[245px] md:h-[300px] object-cover\",\n            )}\n            src={props.assetPreview.url}\n          />\n        )}\n        <div\n          className={clsx(\n            `text-sm p-2.5 flex justify-between items-center w-full`,\n          )}\n        >\n          <div>\n            <div\n              className={clsx(`font-bold`)}\n              id={trimConcat(\"nft_token_\", props.name)}\n            >\n              {props.name}\n            </div>\n            <div\n              id={trimConcat(\"nft_collection_\", props.collection.id)}\n              className={clsx(`text-secondary truncate max-w-[190px] mt-1`)}\n            >\n              {props.collection.name}\n            </div>\n          </div>\n          <div className=\"relative w-6 shrink-0\" ref={ref}>\n            <IconCmpDots\n              className={clsx(\n                \"text-secondary cursor-pointer hover:text-black\",\n                \"rotate-90 shrink-0\",\n              )}\n              onClick={(e) => {\n                e.preventDefault()\n                setIsTooltipOpen(!isTooltipOpen)\n              }}\n            />\n            <div\n              className={clsx(\n                \"absolute top-6 right-0 w-[150px]\",\n                \"bg-white rounded-md shadow-md\",\n                \"text-sm z-10\",\n                !isTooltipOpen && \"hidden\",\n              )}\n            >\n              <div\n                onClick={onTransferNFT}\n                className={clsx(\n                  \"pl-[10px] leading-10 hover:bg-gray-100 rounded-md\",\n                  \"flex items-center space-x-2\",\n                )}\n              >\n                <img src={transferIcon} alt=\"\" />\n                <span>Transfer</span>\n              </div>\n              <div\n                onClick={copyToClipboard}\n                className={clsx(\n                  \"pl-[10px] leading-10 hover:bg-gray-100 rounded-md\",\n                  \"flex items-center space-x-2\",\n                )}\n              >\n                <img src={copyIcon} alt=\"\" />\n                <span> Copy link</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Link>\n    </div>\n  )\n}\n\nexport default NFTPreview\n","import clsx from \"clsx\"\n\nimport { IconCmpGrid, IconCmpTable } from \"@nfid-frontend/ui\"\n\ninterface IDisplaySwitch {\n  state: \"grid\" | \"table\"\n  setState: (state: \"grid\" | \"table\") => void\n}\n\nexport const DisplaySwitch = ({ state, setState }: IDisplaySwitch) => {\n  return (\n    <div className={clsx(`gap-3 bg-white p-0.5 rounded-md`, \"hidden sm:flex\")}>\n      <div\n        onClick={() => setState(\"grid\")}\n        className={clsx(\n          \"p-0 w-[36px] h-[36px] outline-none rounded-[4px]\",\n          \"hover:text-gray-100 transition-all cursor-pointer\",\n          \"flex justify-center items-center\",\n          state === \"grid\" && \"bg-gray-200\",\n        )}\n      >\n        <IconCmpGrid\n          className={clsx(\"text-black\", state !== \"grid\" && \"!text-secondary\")}\n        />\n      </div>\n      <div\n        id={\"to-table\"}\n        onClick={() => setState(\"table\")}\n        className={clsx(\n          \"p-0 w-[36px] h-[36px] outline-none rounded-[4px]\",\n          \"hover:text-gray-100 transition-all cursor-pointer\",\n          \"flex justify-center items-center\",\n          state === \"table\" && \"bg-gray-200\",\n        )}\n      >\n        <IconCmpTable\n          className={clsx(\"text-black\", state !== \"table\" && \"!text-secondary\")}\n        />\n      </div>\n    </div>\n  )\n}\n","import { DropdownSelect } from \"@nfid-frontend/ui\"\n\ninterface IModalOption {\n  label: string\n  afterLabel?: string | number\n  icon?: string\n  value: string\n  disabled?: boolean\n}\n\ninterface ICollectiblesModal {\n  setBlockchainFilter: (value: string[]) => void\n  setCollectionsFilter: (value: string[]) => void\n  setWalletsFilter: (value: string[]) => void\n  blockchainOptions: IModalOption[]\n  collectionsOptions: IModalOption[]\n  walletOptions: IModalOption[]\n  blockchainFilter: string[]\n  collectionsFilter: string[]\n  walletsFilter: string[]\n}\n\nexport const CollectiblesModal = ({\n  setBlockchainFilter,\n  setCollectionsFilter,\n  setWalletsFilter,\n  blockchainOptions,\n  collectionsOptions,\n  walletOptions,\n  blockchainFilter,\n  collectionsFilter,\n  walletsFilter,\n}: ICollectiblesModal) => {\n  return (\n    <div className=\"space-y-2\">\n      <DropdownSelect\n        label=\"Blockchain\"\n        options={blockchainOptions}\n        selectedValues={blockchainFilter}\n        setSelectedValues={setBlockchainFilter}\n        id={\"blockchain-filter\"}\n      />\n      <DropdownSelect\n        options={collectionsOptions}\n        label=\"Collections\"\n        setSelectedValues={setCollectionsFilter}\n        selectedValues={collectionsFilter}\n        isSearch\n        bordered\n      />\n      <DropdownSelect\n        options={walletOptions}\n        label=\"Accounts\"\n        setSelectedValues={setWalletsFilter}\n        selectedValues={walletsFilter}\n        isSearch\n        bordered\n      />\n    </div>\n  )\n}\n","//https://gist.github.com/GlauberF/220d0cce3b24abf78e8d8611248a3bca\n\nexport class GlauberTS {\n  /**\n   * recursive function to be used when searching for a\n   * keyword in multi-level arrays\n   * ex: array.filter(VimboUtils.containsDeep('search content'))\n   * @param text\n   */\n  public static containsDeep =\n    (text: string) =>\n    (value?: any): any => {\n      if (!value) {\n        return false\n      }\n\n      const valueType = typeof value\n\n      if (valueType === \"string\") {\n        return value.toLowerCase().indexOf(text.toLowerCase()) > -1\n      }\n      if (Array.isArray(value)) {\n        return value.some(GlauberTS.containsDeep(text))\n      }\n      if (valueType === \"object\") {\n        return Object.values(value).some(GlauberTS.containsDeep(text))\n      }\n      return false\n\n      // tslint:disable-next-line\n    }\n\n  /**\n   * Deep search on an array that can have one or more levels\n   * @param array\n   * @param text\n   * @param field\n   */\n  public static searchDeepInArray(\n    array: Array<any>,\n    text: string,\n    field: string,\n  ): any {\n    if (!array || !text) {\n      return null\n    }\n\n    return array.filter(this.containsDeep(text)).map((element) => {\n      const idx = Object.keys(element).length ? Object.keys(element)[0] : null\n\n      if (!idx) {\n        return element\n      }\n\n      return Object.assign({}, element, {\n        [idx]: element[idx].filter(\n          (subElement: any) =>\n            subElement[field].toLowerCase().indexOf(text.toLowerCase()) > -1,\n        ),\n      })\n    })\n  }\n}\n\n// Example\n// https://stackblitz.com/edit/search-deep-typescript?file=index.ts\n","import { Account } from \"@nfid/integration\"\n\nimport {\n  NonFungibleCollection,\n  UserNonFungibleToken,\n} from \"frontend/features/non-fungable-token/types\"\n\nimport { GlauberTS } from \"./search\"\n\nconst sortFuncs: {\n  [key: string]: (a: UserNonFungibleToken, b: UserNonFungibleToken) => number\n} = {\n  \"Token #\": (a, b) => Number(a.index) - Number(b.index),\n  Wallet: (a, b) =>\n    a.account.label.toLowerCase() < b.account.label.toLowerCase() ? -1 : 1,\n  Collection: (a, b) =>\n    a.collection.name.toLowerCase() < b.collection.name.toLowerCase() ? -1 : 1,\n  default: () => 0,\n}\n\nexport function sortUserTokens(\n  tokens: UserNonFungibleToken[],\n  fields: string[] = [\"Token #\"],\n) {\n  const func = sortFuncs[fields[0]]\n  if (!func) console.warn(`Unknown sort method ${fields[0]}`)\n  return tokens.sort(func || sortFuncs.default)\n}\n\nexport function filterUserTokens(\n  tokens: UserNonFungibleToken[],\n  filters: {\n    search?: string\n  },\n) {\n  let result = tokens\n  if (filters.search) {\n    const search = filters.search\n    result = tokens.filter((token) => GlauberTS.containsDeep(search)(token))\n  }\n  return result\n}\n\nexport function userTokensByWallet(tokens: UserNonFungibleToken[]) {\n  return tokens.reduce<{\n    [key: string]: {\n      tokens: UserNonFungibleToken[]\n      account: Account\n      principal: string\n    }\n  }>(\n    (agg, token) => ({\n      ...agg,\n      [token.principal.toText()]: {\n        tokens: [...(agg[token.principal.toText()]?.tokens || []), token],\n        account: token.account,\n        principal: token.principal.toText(),\n      },\n    }),\n    {},\n  )\n}\n\nexport function userTokensByCollection(tokens: UserNonFungibleToken[]) {\n  return tokens.reduce<{\n    [key: string]: {\n      tokens: UserNonFungibleToken[]\n      collection: NonFungibleCollection\n    }\n  }>(\n    (agg, token) => ({\n      ...agg,\n      [token.collection.id]: {\n        tokens: [...(agg[token.collection.id]?.tokens || []), token],\n        collection: token.collection,\n      },\n    }),\n    {},\n  )\n}\n","import { useActor } from \"@xstate/react\"\nimport clsx from \"clsx\"\nimport React, { useContext } from \"react\"\nimport { IoIosSearch } from \"react-icons/io\"\nimport { Link, useNavigate } from \"react-router-dom\"\n\nimport {\n  FilterPopover,\n  Copy,\n  IconCmpFilters,\n  IconCmpTransfer,\n  IconSvgBook,\n  Input,\n  Loader,\n  Tooltip,\n} from \"@nfid-frontend/ui\"\nimport { Application, getWalletName } from \"@nfid/integration\"\n\nimport { UserNonFungibleToken } from \"frontend/features/non-fungable-token/types\"\nimport { link } from \"frontend/integration/entrepot\"\nimport { ProfileContext } from \"frontend/provider\"\nimport NFTPreview from \"frontend/ui/atoms/nft-preview\"\nimport Table from \"frontend/ui/atoms/table\"\nimport { MigrationWarning } from \"frontend/ui/molecules/migration-warning\"\nimport ProfileContainer from \"frontend/ui/templates/profile-container/Container\"\nimport ProfileTemplate from \"frontend/ui/templates/profile-template/Template\"\n\nimport { ProfileConstants } from \"../routes\"\nimport { DisplaySwitch } from \"./display-switch\"\nimport EmptyNFT from \"./empty.webp\"\nimport { CollectiblesModal } from \"./filter-modal\"\nimport {\n  filterUserTokens,\n  sortUserTokens,\n  userTokensByCollection,\n  userTokensByWallet,\n} from \"./utils/util\"\n\ninterface CollectiblesPage extends React.HTMLAttributes<HTMLDivElement> {\n  isLoading: boolean\n  tokens: UserNonFungibleToken[]\n  applications: Application[]\n}\n\nexport const ProfileCollectibles: React.FC<CollectiblesPage> = ({\n  isLoading,\n  tokens,\n  applications,\n}) => {\n  const globalServices = useContext(ProfileContext)\n\n  const [, send] = useActor(globalServices.transferService)\n  const [search, setSearch] = React.useState(\"\")\n  const [display, setDisplay] = React.useState<\"grid\" | \"table\">(\"grid\")\n\n  const [walletsFilter, setWalletsFilter] = React.useState<string[]>([])\n  const [collectionsFilter, setCollectionsFilter] = React.useState<string[]>([])\n  const [blockchainFilter, setBlockchainFilter] = React.useState<string[]>([])\n\n  const navigate = useNavigate()\n\n  const tokensFiltered = React.useMemo(\n    () =>\n      filterUserTokens(tokens, { search })\n        .filter((token) => {\n          if (!walletsFilter.length) return true\n          return walletsFilter.includes(token.principal.toText())\n        })\n        .filter((token) => {\n          if (!collectionsFilter.length) return true\n          return collectionsFilter.includes(token.collection.id)\n        })\n        .filter((token) => {\n          if (!blockchainFilter.length) return true\n          return blockchainFilter\n            .map((f) => f.replace(/\\s+/g, \"\"))\n            .includes(token.blockchain.replace(/\\s+/g, \"\"))\n        }),\n    [tokens, search, walletsFilter, collectionsFilter, blockchainFilter],\n  )\n\n  const tokensByCollections = React.useMemo(() => {\n    return Object.values(userTokensByCollection(sortUserTokens(tokens)))\n  }, [tokens])\n\n  const headings = [\"Asset\", \"Name\", \"Collection\", \"ID\", \"Account\", \"Actions\"]\n  const [sorting, setSorting] = React.useState([\n    \"Wallet\",\n    \"Collection\",\n    \"Token #\",\n  ])\n  const [reverse, setReverse] = React.useState(false)\n  const handleHeaderClick = React.useCallback(\n    () => (v: string) => {\n      if (!sorting.includes(v)) return\n      if (sorting[0] === v) {\n        setReverse(!reverse)\n      } else {\n        const newValue = sorting.map((x) => x)\n        newValue.splice(newValue.indexOf(v), 1)\n        newValue.unshift(v)\n        setSorting(newValue)\n      }\n    },\n    [sorting, reverse],\n  )\n\n  const onTransferNFT = React.useCallback(\n    (tokenId: string) => {\n      const nft = tokens.find((token) => token.tokenId === tokenId)\n      if (!nft) return\n\n      send({ type: \"ASSIGN_SELECTED_NFT\", data: nft.tokenId })\n      send({ type: \"CHANGE_TOKEN_TYPE\", data: \"nft\" })\n      send({ type: \"CHANGE_DIRECTION\", data: \"send\" })\n\n      send(\"SHOW\")\n    },\n    [send, tokens],\n  )\n\n  const rows = React.useMemo(() => {\n    const result = sortUserTokens(tokensFiltered, sorting).map((token) => ({\n      key: token.tokenId,\n      val: [\n        <Link\n          to={`${ProfileConstants.base}/${ProfileConstants.assets}/${token.tokenId}`}\n          state={{ nft: token }}\n        >\n          <img\n            alt={`${token.collection.name} ${token.index}`}\n            src={token.assetPreview.url}\n            className={clsx(`w-[74px] h-[74px] object-cover rounded`)}\n          />\n        </Link>,\n        <div\n          id={`nft_token_${token.name.replace(\n            /\\s|#/g,\n            \"\",\n          )}_${token.collection.id.replace(/\\s/g, \"\")}`}\n        >\n          {\" \"}\n          {token.name}\n        </div>,\n        <div\n          id={`nft_collection_${token.collection.id.replace(/\\s/g, \"\")}`}\n          className={clsx(`w-full`)}\n        >\n          {token.collection.name}\n        </div>,\n        <Link\n          to={`${ProfileConstants.base}/${ProfileConstants.assets}/${token.tokenId}`}\n          state={{ nft: token }}\n          className=\"truncate block sm:w-[400px]\"\n          id={`nft_id_${token.tokenId.replace(/\\s/g, \"\")}`}\n        >\n          {token.tokenId}\n        </Link>,\n        <div\n          className={clsx(`w-full`)}\n          id={`nft_wallet_${getWalletName(\n            applications,\n            token.account.domain,\n            token.account.accountId,\n          ).replace(/\\s/g, \"\")}`}\n        >\n          {getWalletName(\n            applications,\n            token.account.domain,\n            token.account.accountId,\n          )}\n        </div>,\n        <div className=\"flex items-center space-x-2.5 justify-center shrink-0\">\n          <Tooltip tip=\"Transfer\">\n            <IconCmpTransfer\n              data-tip=\"Transfer\"\n              className=\"w-6 transition-opacity cursor-pointer hover:opacity-50 shrink-0\"\n              onClick={() => onTransferNFT(token.tokenId)}\n            />\n          </Tooltip>\n          <Copy\n            value={\n              token.blockchain === \"Internet Computer\"\n                ? link(token.collection.id, Number(token.index))\n                : token.assetFullsize.url\n            }\n          />\n        </div>,\n      ],\n    }))\n    reverse && result.reverse()\n    return result\n  }, [tokensFiltered, sorting, reverse, applications, onTransferNFT])\n\n  const walletOptions = React.useMemo(() => {\n    const wallets = Object.values(\n      userTokensByWallet(tokensByCollections.map((x) => x.tokens).flat()),\n    ).filter((token) => {\n      if (!collectionsFilter.length) return true\n\n      return !!token.tokens.filter((t) =>\n        collectionsFilter.includes(t.collection.id),\n      ).length\n    })\n\n    return Object.values(wallets).map((item) => ({\n      label:\n        item.account.accountId === \"-1\"\n          ? \"NFID Wallet\"\n          : getWalletName(\n              applications,\n              item.account.domain,\n              item.account.accountId,\n            ),\n      value: item.principal,\n      afterLabel: item.tokens.filter((token) => {\n        if (!collectionsFilter.length) return true\n        return collectionsFilter.includes(token.collection.id)\n      }).length,\n    }))\n  }, [applications, collectionsFilter, tokensByCollections])\n\n  const collectionsOptions = React.useMemo(() => {\n    const tokensByCollection = tokensByCollections.filter((obj) => {\n      if (!walletsFilter.length) return true\n      return !!obj.tokens.filter((o) =>\n        walletsFilter.includes(o.principal.toText()),\n      ).length\n    })\n\n    return tokensByCollection.map((option) => ({\n      label: option.collection.name,\n      value: option.collection.id,\n      icon: option.collection?.avatar,\n    }))\n  }, [tokensByCollections, walletsFilter])\n\n  const blockchainOptions = React.useMemo(() => {\n    const chains = [...new Set(tokens.map((t) => t.blockchain))]\n    return chains.map((blockchain) => ({\n      label: blockchain,\n      value: blockchain.replace(/\\s+/g, \"\"),\n    }))\n  }, [tokens])\n\n  const onResetFilters = React.useCallback(() => {\n    setBlockchainFilter([])\n    setCollectionsFilter([])\n    setWalletsFilter([])\n  }, [])\n\n  return (\n    <ProfileTemplate\n      className=\"!static\"\n      pageTitle=\"Collectibles\"\n      icon={IconSvgBook}\n      iconTooltip=\"Transactions history\"\n      onIconClick={() =>\n        navigate(`${ProfileConstants.base}/${ProfileConstants.transactions}`)\n      }\n    >\n      <MigrationWarning />\n      <ProfileContainer className={clsx(`flex flex-col`)}>\n        <ProfileContainer className={clsx(`bg-gray-200 !py-5`)}>\n          <div className=\"flex items-center justify-between gap-6\">\n            <Input\n              type=\"text\"\n              value={search}\n              onChange={(e) => setSearch(e.currentTarget.value)}\n              icon={<IoIosSearch size=\"20\" />}\n              placeholder=\"Search\"\n              inputClassName=\"bg-white border-none\"\n              className=\"w-full\"\n            />\n            <div className={clsx(\"flex items-center space-x-6 shrink-0\")}>\n              <FilterPopover\n                trigger={\n                  <div\n                    id={\"filter-nft\"}\n                    className=\"flex items-center justify-center p-2 rounded-md md:bg-white\"\n                  >\n                    <IconCmpFilters className=\"w-[21px] h-[21px] transition-opacity cursor-pointer hover:opacity-60\" />\n                  </div>\n                }\n                onReset={onResetFilters}\n              >\n                <CollectiblesModal\n                  collectionsOptions={collectionsOptions}\n                  setCollectionsFilter={setCollectionsFilter}\n                  collectionsFilter={collectionsFilter}\n                  walletOptions={walletOptions}\n                  setWalletsFilter={setWalletsFilter}\n                  walletsFilter={walletsFilter}\n                  blockchainFilter={blockchainFilter}\n                  setBlockchainFilter={setBlockchainFilter}\n                  blockchainOptions={blockchainOptions}\n                />\n              </FilterPopover>\n              <DisplaySwitch state={display} setState={setDisplay} />\n            </div>\n          </div>\n        </ProfileContainer>\n        <p\n          id={\"items-amount\"}\n          className={clsx(\n            \"text-sm text-center text-secondary h-[50px] leading-[50px]\",\n            tokens.length === 0 && \"hidden\",\n          )}\n        >\n          {tokensFiltered.length} items\n        </p>\n        {!tokens.length ? (\n          <>\n            {isLoading ? (\n              <Loader isLoading={true} />\n            ) : (\n              <div className=\"flex justify-between\">\n                <span className=\"my-16 text-sm text-gray-400\">\n                  You don’t own any collectibles yet\n                </span>\n                <img\n                  className=\"w-[100vw] absolute md:w-[40vw] right-0\"\n                  src={EmptyNFT}\n                />\n              </div>\n            )}\n          </>\n        ) : display === \"table\" ? (\n          <Table\n            rows={rows}\n            headings={headings}\n            sort={sorting}\n            reverse={reverse}\n            handleHeaderClick={handleHeaderClick}\n          />\n        ) : (\n          <div\n            className={clsx(\n              \"grid gap-5 pb-5\",\n              \"grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4\",\n            )}\n          >\n            {tokensFiltered.map((token) => (\n              <NFTPreview key={`token_${token.tokenId}`} {...token} />\n            ))}\n          </div>\n        )}\n      </ProfileContainer>\n    </ProfileTemplate>\n  )\n}\n","import { useApplicationsMeta } from \"frontend/integration/identity-manager/queries\"\n\nimport { useAllNFTs } from \"../assets/hooks\"\nimport { ProfileCollectibles } from \"./profile-collectibles\"\n\nconst ProfileCollectiblesPage = () => {\n  const { nfts } = useAllNFTs()\n  const applications = useApplicationsMeta()\n\n  return (\n    <ProfileCollectibles\n      isLoading={!nfts || applications.isLoading}\n      tokens={nfts || []}\n      applications={applications.applicationsMeta || []}\n    />\n  )\n}\n\nexport default ProfileCollectiblesPage\n","import useSWR from \"swr\"\n\nimport { getAllToken } from \"@nfid/integration/token/dip-20\"\n\nexport const useAllDip20Token = () => {\n  const { data: token, isValidating } = useSWR(\"dip20AllToken\", getAllToken, {\n    dedupingInterval: 60_000 * 60,\n    focusThrottleInterval: 60_000 * 60,\n  })\n\n  console.debug(\"useAllDip20Token\", { token })\n\n  return { token, isValidating }\n}\n","import useSWR from \"swr\"\n\nimport { getExchangeRate } from \"frontend/integration/rosetta/get-exchange-rate\"\n\nexport const useICPExchangeRate = () => {\n  const { data: exchangeRate, ...rest } = useSWR(\n    \"walletExchangeRate\",\n    getExchangeRate,\n    {\n      dedupingInterval: 60_000 * 60,\n      focusThrottleInterval: 60_000 * 60,\n      refreshInterval: 60_000 * 60,\n    },\n  )\n  return {\n    exchangeRate,\n    ...rest,\n  }\n}\n","import useSWR from \"swr\"\n\nimport { fetchBalances } from \"frontend/features/fungable-token/fetch-balances\"\nimport { useAllPrincipals } from \"frontend/integration/internet-identity/queries\"\n\nimport { useAllDip20Token } from \"../../dip-20/hooks/use-all-token-meta\"\n\nexport const useUserBalances = () => {\n  const { principals } = useAllPrincipals()\n  const { token: dip20Token } = useAllDip20Token()\n\n  const {\n    data: balances,\n    isValidating: isLoading,\n    mutate: refreshBalances,\n  } = useSWR(\n    dip20Token && principals ? [principals, dip20Token, `AllBalanceRaw`] : null,\n    async ([principals, dip20Token]) => {\n      console.debug(\"AllBalanceRaw\", { principals, dip20Token })\n      return await fetchBalances({\n        principals,\n        dip20Token,\n      })\n    },\n    { dedupingInterval: 30_000, refreshInterval: 60_000 },\n  )\n\n  return { balances: balances, isLoading, refreshBalances }\n}\n","import React from \"react\"\nimport useSWRImmutable from \"swr/immutable\"\n\nimport {\n  RootWallet,\n  extendWithFixedAccounts,\n  fetchPrincipals,\n} from \"@nfid/integration\"\n\nimport {\n  useAccounts,\n  useApplicationsMeta,\n  useProfile,\n} from \"frontend/integration/identity-manager/queries\"\n\n/**\n * React hook to retrieve user principals.\n */\nexport const useAllPrincipals = () => {\n  const { profile } = useProfile()\n  const { accounts } = useAccounts()\n  const { applicationsMeta } = useApplicationsMeta()\n\n  const allAccounts = React.useMemo(() => {\n    return extendWithFixedAccounts(accounts, applicationsMeta)\n  }, [accounts, applicationsMeta])\n\n  const { data: principals } = useSWRImmutable(\n    profile?.anchor && allAccounts\n      ? [\n          BigInt(profile.anchor),\n          allAccounts,\n          profile.wallet === RootWallet.NFID,\n        ]\n      : null,\n    ([anchor, allAccounts, isNewUser]) =>\n      fetchPrincipals(anchor, allAccounts, isNewUser),\n    { dedupingInterval: 60_000, refreshInterval: 60_000 },\n  )\n\n  console.debug(\"useAllPrincipals\", { principals })\n\n  return { principals }\n}\n","import clsx from \"clsx\"\nimport React, { ReactNode } from \"react\"\nimport { BsArrowDown } from \"react-icons/bs\"\n\ninterface TableData {\n  headings: string[]\n  rows: { val: React.ReactNode[]; key: string }[]\n  sort?: string[]\n  reverse?: boolean\n  handleHeaderClick?: (col: string) => void\n}\n\nexport const TableWrapper: React.FC<{ children: React.ReactElement }> = ({\n  children,\n}) => <div className={clsx(\"overflow-x-scroll\")}>{children}</div>\n\nexport const TableBase: React.FC<{\n  children: ReactNode[] | ReactNode\n  className?: string\n}> = ({ children, className }) => (\n  <table\n    className={clsx(\n      \"w-full text-left min-w-[640px]\",\n      className ?? \"table-auto\",\n    )}\n  >\n    {children}\n  </table>\n)\n\nexport const TableHead: React.FC<{\n  headings: string[]\n  sort?: string[]\n  reverse?: boolean\n  handleHeaderClick?: (col: string) => void\n}> = ({ sort, reverse, headings, handleHeaderClick }) => (\n  <thead className=\"contents\">\n    <tr className={clsx(`border-b border-gray-900`)}>\n      {headings.map((heading, i) => (\n        <th\n          className={clsx(\n            \"h-16 px-3\",\n            i === 0 && \"pl-[30px]\",\n            i === heading.length - 1 && \"pr-[30px]\",\n            sort?.includes(heading) && \"cursor-pointer hover:bg-gray-100\",\n          )}\n          key={`heading${heading}`}\n          onClick={() => handleHeaderClick && handleHeaderClick(heading)}\n        >\n          <div\n            className={clsx(\n              `flex h-full gap-2 items-center group whitespace-nowrap`,\n            )}\n          >\n            {heading}\n            {sort?.[0] === heading && (\n              <BsArrowDown className={clsx(reverse && `rotate-180`)} />\n            )}\n            {sort?.includes(heading) && sort?.[0] !== heading && (\n              <div className={clsx(`invisible group-hover:visible`)}>\n                <BsArrowDown />\n              </div>\n            )}\n          </div>\n        </th>\n      ))}\n    </tr>\n  </thead>\n)\n\nexport const TableBody: React.FC<{\n  rows: { val: React.ReactNode[]; key: string }[]\n  headings: string[]\n}> = ({ rows, headings }) => (\n  <tbody>\n    {rows.map((row, j) => (\n      <tr key={`row${row.key}`} className={clsx(`border-b border-grey-200`)}>\n        {row.val.map((cell, i) => (\n          <td\n            className={clsx(\n              \"h-[85px] px-3\",\n              i === 0 && \"pl-[30px]\",\n              i === row.val.length - 1 && \"pr-[30px]\",\n            )}\n            key={`row${row.key}cell${headings[i]}`}\n          >\n            {cell}\n          </td>\n        ))}\n      </tr>\n    ))}\n  </tbody>\n)\n\nexport default function Table({\n  headings,\n  rows,\n  sort,\n  reverse,\n  handleHeaderClick,\n}: TableData) {\n  return (\n    <TableWrapper>\n      <TableBase>\n        <TableHead\n          headings={headings}\n          sort={sort}\n          reverse={reverse}\n          handleHeaderClick={handleHeaderClick}\n        />\n        <TableBody rows={rows} headings={headings} />\n      </TableBase>\n    </TableWrapper>\n  )\n}\n","export function trimConcat(y: string, x: string) {\n  return y + x.replace(/\\s|#/g, \"\")\n}\n","import { StandardizedToken } from \"./types\"\n\nexport abstract class ConnectorFactory<N, T extends StandardizedToken<N>> {\n  connectors: any\n  connectorsStorage: Map<N, T>\n\n  constructor(connectors: any) {\n    this.connectors = connectors\n    this.connectorsStorage = this.toMap(this.connectors)\n  }\n\n  getKeys(): N[] {\n    return Array.from(this.connectorsStorage.keys())\n  }\n\n  async process(key: N, args: any[]) {\n    const connector = this.getConnector(key)\n    if (!connector) throw Error(key + \" not supported\")\n\n    return await this.getFunctionToCall(connector).apply(connector, args)\n  }\n\n  protected abstract getFunctionToCall(connector: T): Function\n\n  private toMap(connectors: T[]): Map<N, T> {\n    const connectorsMap = new Map<N, T>()\n    connectors.forEach((connector) => {\n      connectorsMap.set(connector.getTokenStandard(), connector)\n    })\n    return connectorsMap\n  }\n\n  private getConnector(key: N) {\n    return this.connectorsStorage.get(key)\n  }\n}\n","import { Chain, getGlobalKeys } from \"packages/integration/src/lib/lambda/ecdsa\"\nimport { useAllDip20Token } from \"src/features/fungable-token/dip-20/hooks/use-all-token-meta\"\nimport { useBalanceICPAll } from \"src/features/fungable-token/icp/hooks/use-balance-icp-all\"\nimport { stringICPtoE8s } from \"src/integration/wallet/utils\"\nimport { AssetFilter, Blockchain, TokenConfig } from \"src/ui/connnector/types\"\n\nimport { IconSvgDfinity } from \"@nfid-frontend/ui\"\nimport { accessList, authState } from \"@nfid/integration\"\nimport { toPresentation, WALLET_FEE_E8S } from \"@nfid/integration/token/icp\"\nimport { TokenStandards } from \"@nfid/integration/token/types\"\n\nexport const useICTokens = (assetFilter: AssetFilter[]): TokenConfig[] => {\n  const { appAccountBalance } = useBalanceICPAll(true, assetFilter)\n  const { token: dip20Token } = useAllDip20Token()\n\n  return [\n    {\n      icon: IconSvgDfinity,\n      tokenStandard: TokenStandards.ICP,\n      title: \"Internet Computer\",\n      currency: \"ICP\",\n      balance: appAccountBalance?.ICP.tokenBalance,\n      price: appAccountBalance?.ICP.usdBalance,\n      fee: BigInt(WALLET_FEE_E8S),\n      toPresentation,\n      transformAmount: stringICPtoE8s,\n      blockchain: Blockchain.IC,\n    },\n    ...(dip20Token\n      ? dip20Token.map(({ symbol, name, logo, ...rest }) => ({\n          tokenStandard: TokenStandards.DIP20,\n          icon: logo,\n          title: name,\n          currency: symbol,\n          balance: appAccountBalance?.[symbol].tokenBalance,\n          price: appAccountBalance?.[symbol].usdBalance,\n          blockchain: Blockchain.IC,\n          ...rest,\n        }))\n      : []\n    ).filter((token) => token.balance > 0),\n  ]\n}\n\nexport const getICPublicDelegation = async () => {\n  const { delegationIdentity } = authState.get()\n\n  const publicDelegation = await getGlobalKeys(\n    delegationIdentity!,\n    Chain.IC,\n    accessList,\n  )\n\n  return publicDelegation\n}\n","import { TokenBalanceSheet } from \"packages/integration/src/lib/asset/types\"\nimport React from \"react\"\n\nimport { toPresentation } from \"@nfid/integration/token/icp\"\n\nimport ICP from \"frontend/assets/dfinity.svg\"\nimport { useApplicationsMeta } from \"frontend/integration/identity-manager/queries\"\nimport { AssetFilter } from \"frontend/ui/connnector/types\"\n\nimport { accumulateAppAccountBalance } from \"../../accumulate-app-account-balances\"\nimport { useAllDip20Token } from \"../../dip-20/hooks/use-all-token-meta\"\nimport { useICPExchangeRate } from \"./use-icp-exchange-rate\"\nimport { useUserBalances } from \"./use-user-balances\"\n\ntype AppAccountBalanceByToken = {\n  [token: string]: TokenBalanceSheet\n}\n\ntype UseBalanceICPAllReturn = {\n  isLoading: boolean\n  appAccountBalance?: AppAccountBalanceByToken\n}\n\n/**\n * returns map of applications and there accumulated balance across all accounts\n *\n * @param excludeEmpty only include applications with non zero balance\n */\nexport const useBalanceICPAll = (\n  excludeEmpty: boolean = true,\n  assetFilters?: AssetFilter[],\n): UseBalanceICPAllReturn => {\n  const { applicationsMeta: applications } = useApplicationsMeta()\n  const { exchangeRate, isValidating: isLoadingICPExchangeRate } =\n    useICPExchangeRate()\n  const { token: dip20Token } = useAllDip20Token()\n\n  const { balances, isLoading: isLoadingBalances } = useUserBalances()\n\n  console.debug(\"useUserBalances\", { icpBalance: balances })\n\n  const appAccountBalance = React.useMemo(() => {\n    if (\n      isLoadingICPExchangeRate ||\n      isLoadingBalances ||\n      !exchangeRate ||\n      !balances\n    ) {\n      return\n    }\n\n    return {\n      ICP: accumulateAppAccountBalance({\n        balances: assetFilters?.length\n          ? balances.filter((b) =>\n              assetFilters?.find((f) => f.principal === b.principal.toString()),\n            )\n          : balances,\n        applications,\n        exchangeRate,\n        excludeEmpty,\n        includeEmptyApps: [\"nfid.one\", \"https://nns.ic0.app\"],\n        label: \"Internet Computer\",\n        token: \"ICP\",\n        icon: ICP,\n        toPresentation,\n      }),\n      ...(dip20Token\n        ? dip20Token.reduce(\n            (acc, { symbol, name, logo, toPresentation }) => ({\n              ...acc,\n              [symbol]: accumulateAppAccountBalance({\n                toPresentation,\n                balances: assetFilters?.length\n                  ? balances.filter((b) =>\n                      assetFilters?.find(\n                        (f) => f.principal === b.principal.toString(),\n                      ),\n                    )\n                  : balances,\n                applications,\n                icon: logo,\n                exchangeRate: symbol === \"WICP\" ? exchangeRate : 0,\n                excludeEmpty,\n                includeEmptyApps: [\"nfid.one\", \"https://nns.ic0.app\"],\n                label: name,\n                token: symbol,\n              }),\n            }),\n            {},\n          )\n        : {}),\n    }\n  }, [\n    isLoadingICPExchangeRate,\n    isLoadingBalances,\n    exchangeRate,\n    balances,\n    assetFilters,\n    applications,\n    excludeEmpty,\n    dip20Token,\n  ])\n\n  console.debug(\"useBalanceICPAll\", {\n    isLoadingICPExchangeRate,\n    isLoadingPrincipals: isLoadingBalances,\n    exchangeRate,\n    applicationsMeta: applications,\n    appAccountBalance,\n    balanceICPRaw: balances,\n  })\n\n  return {\n    isLoading: isLoadingBalances || isLoadingICPExchangeRate,\n    appAccountBalance,\n  }\n}\n","import { useActor } from \"@xstate/react\"\nimport clsx from \"clsx\"\nimport { useContext } from \"react\"\nimport React from \"react\"\nimport { toast } from \"react-toastify\"\nimport useSWR from \"swr\"\n\nimport { IconCmpWarning } from \"@nfid-frontend/ui\"\nimport { RootWallet } from \"@nfid/integration\"\n\nimport { useProfile } from \"frontend/integration/identity-manager/queries\"\nimport { ProfileContext } from \"frontend/provider\"\nimport { getICPublicDelegation } from \"frontend/ui/connnector/fungible-asset-screen/ic/hooks/use-icp\"\n\nexport const useMigrationTransfer = () => {\n  const { profile } = useProfile()\n\n  const { data: publicDelegation } = useSWR(\n    \"ICPublicDelegation\",\n    getICPublicDelegation,\n  )\n  const globalServices = useContext(ProfileContext)\n\n  const [, send] = useActor(globalServices.transferService)\n\n  const onTransferClick = React.useCallback(async () => {\n    if (!publicDelegation)\n      return toast.warn(\"Please wait a few seconds and try again.\")\n\n    send({ type: \"CHANGE_TOKEN_TYPE\", data: \"ft\" })\n    send({ type: \"CHANGE_DIRECTION\", data: \"send\" })\n    send({\n      type: \"ASSIGN_RECEIVER_WALLET\",\n      data: publicDelegation.getPrincipal().toText(),\n    })\n\n    send({ type: \"SHOW\" })\n  }, [publicDelegation, send])\n\n  return {\n    onTransferClick,\n    showMigrationWarning: profile?.wallet === RootWallet.II,\n  }\n}\n\nexport const MigrationWarning: React.FC = () => {\n  const { showMigrationWarning, onTransferClick } = useMigrationTransfer()\n  if (!showMigrationWarning) return null\n\n  return (\n    <div\n      className={clsx(\n        \"bg-orange-50 rounded-xl flex space-x-5 p-[30px] text-orange-900\",\n        \"mb-[30px]\",\n      )}\n    >\n      <IconCmpWarning className=\"w-[22px] h-[22px] shrink-0\" />\n      <div className=\"text-sm\">\n        <p className=\"font-bold mb-2.5\">NFID upgrade</p>\n        <p className=\"leading-[22px]\">\n          Starting November 1, 2023, assets from external applications will not\n          be displayed in NFID. To manage those assets in NFID, transfer them to\n          your <b>NFID Wallet</b>. Otherwise, you’ll only have access through\n          the application’s website.\n        </p>\n        <p\n          onClick={onTransferClick}\n          className=\"mt-4 font-semibold cursor-pointer text-blue\"\n        >\n          Transfer assets to my NFID Wallet\n        </p>\n      </div>\n    </div>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface IProfileContainer {\n  title?: string | React.ReactNode\n  subTitle?: string | React.ReactNode\n  children?: React.ReactNode\n  className?: string\n  showChildrenPadding?: boolean\n  id?: string\n}\n\nconst ProfileContainer: React.FC<IProfileContainer> = ({\n  title,\n  subTitle,\n  children,\n  className,\n  showChildrenPadding = true,\n  id,\n}) => {\n  return (\n    <div\n      id={id}\n      className={clsx(\n        \"block border border-gray-200 rounded-xl\",\n        \"py-4 sm:py-[26px]\",\n        className,\n      )}\n    >\n      <div className=\"px-5\">\n        {title && (\n          <div className=\"flex items-center justify-between mb-3 text-xl\">\n            {title}\n          </div>\n        )}\n        {subTitle && (\n          <div className=\"flex items-center justify-between mb-4 text-sm leading-5 text-secondary\">\n            {subTitle}\n          </div>\n        )}\n      </div>\n\n      <div className={clsx(showChildrenPadding && \"px-5 sm:px-[30px]\")}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileContainer\n"],"names":["NonFungibleAssetConnector","constructor","config","getIdentity","async","delegationIdentity","authState","Error","filterPrincipals","length","includes","getPrincipal","toString","this","assetFilter","identities","map","filter","principal","nfts","Promise","all","userNFTS","assetService","getItemsByUser","identity","items","nft","conf","account","domain","label","accountId","assetFullsize","url","image","defaultLogo","format","imageType","assetPreview","thumbnail","MaticSvg","blockchainLogo","blockchain","collection","description","id","name","contractName","standard","tokenType","clipboardText","contractId","contract","index","title","tokenId","owner","walletName","toUserNFT","getTokenStandard","getCacheTtl","ethereumNftConnector","Blockchain","IconPngEthereum","ethereumAsset","polygonNftConnector","polygonAsset","ethereumGoerliNftConnector","ethereumGoerliAsset","polygonMumbaiNftConnector","polygonMumbaiAsset","NftFactory","ConnectorFactory","getNFToken","assetFilters","process","getCacheKey","key","functionToCall","args","reduce","acc","getFunctionToCall","connector","getNonFungibleItems","nftFactory","useAllNFTs","supportedBlockchains","getKeys","configs","tokens","blockchains","data","rest","useSWR","e","console","error","flat","useNFTConfig","principals","useAllPrincipals","applicationsMeta","useApplicationsMeta","isLoading","isValidating","principalTokens","dedupingInterval","focusThrottleInterval","revalidateIfStale","React","getWalletName","canisterId","toText","link","Number","ICPLogo","find","f","concat","props","globalServices","useContext","ProfileContext","send","useActor","transferService","isTooltipOpen","setIsTooltipOpen","ref","useClickOutside","copyToClipboard","preventDefault","toast","toastId","navigator","clipboard","writeText","onTransferNFT","useCallback","type","className","clsx","trimConcat","replace","to","ProfileConstants","state","src","alt","onClick","transferIcon","copyIcon","DisplaySwitch","setState","CollectiblesModal","setBlockchainFilter","setCollectionsFilter","setWalletsFilter","blockchainOptions","collectionsOptions","walletOptions","blockchainFilter","collectionsFilter","walletsFilter","options","selectedValues","setSelectedValues","isSearch","bordered","GlauberTS","array","text","field","containsDeep","element","idx","Object","keys","assign","subElement","toLowerCase","indexOf","value","valueType","Array","isArray","some","values","sortFuncs","a","b","Wallet","Collection","default","sortUserTokens","fields","func","warn","sort","ProfileCollectibles","applications","search","setSearch","display","setDisplay","navigate","useNavigate","tokensFiltered","filters","result","token","filterUserTokens","tokensByCollections","agg","userTokensByCollection","sorting","setSorting","reverse","setReverse","handleHeaderClick","v","newValue","x","splice","unshift","rows","val","tip","wallets","userTokensByWallet","t","item","afterLabel","obj","o","option","icon","avatar","Set","onResetFilters","pageTitle","IconSvgBook","iconTooltip","onIconClick","onChange","currentTarget","size","placeholder","inputClassName","trigger","onReset","headings","EmptyNFT","useAllDip20Token","getAllToken","debug","useICPExchangeRate","exchangeRate","getExchangeRate","refreshInterval","useUserBalances","dip20Token","balances","mutate","refreshBalances","fetchBalances","profile","useProfile","accounts","useAccounts","allAccounts","extendWithFixedAccounts","useSWRImmutable","anchor","BigInt","wallet","RootWallet","isNewUser","fetchPrincipals","TableWrapper","children","TableBase","TableHead","heading","i","TableBody","row","j","cell","Table","y","connectors","connectorsStorage","toMap","from","getConnector","apply","connectorsMap","Map","forEach","set","get","useICTokens","appAccountBalance","excludeEmpty","isLoadingICPExchangeRate","isLoadingBalances","icpBalance","ICP","accumulateAppAccountBalance","includeEmptyApps","toPresentation","symbol","logo","isLoadingPrincipals","balanceICPRaw","useBalanceICPAll","IconSvgDfinity","tokenStandard","TokenStandards","currency","balance","tokenBalance","price","usdBalance","fee","WALLET_FEE_E8S","transformAmount","stringICPtoE8s","getICPublicDelegation","getGlobalKeys","Chain","accessList","MigrationWarning","showMigrationWarning","onTransferClick","publicDelegation","useMigrationTransfer","subTitle","showChildrenPadding"],"sourceRoot":""}