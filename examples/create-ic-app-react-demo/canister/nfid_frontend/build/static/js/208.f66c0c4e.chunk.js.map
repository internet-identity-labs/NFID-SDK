{"version":3,"file":"static/js/208.f66c0c4e.chunk.js","mappings":"oMAWA,MAwEA,EAxEwD,IAQjD,IAAD,gBARmD,QACvDA,EAAO,WACPC,EAAU,kBACVC,EAAiB,qBACjBC,EAAoB,qBACpBC,EAAoB,UACpBC,EAAS,SACTC,GACD,EACC,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,MACZ,OAAEC,EAAM,SAAEC,EAAQ,UAAEC,GAAcC,EAAAA,EAAAA,sBACtCX,EAAWY,QAAQC,SAEfC,EAAOR,EAAMG,GAEbM,GAAQC,EAAAA,EAAAA,UAAQ,KACbC,EAAAA,EAAAA,GAAUH,EAAMZ,IACtB,CAACY,EAAMZ,IAEJgB,GAAWF,EAAAA,EAAAA,UAAQ,KAAO,IAAD,YAC7B,IAAKD,EAAO,MAAO,GACnB,IAAIG,EAAsC,GAwB1C,OArBoB,OAAjBjB,QAAiB,IAAjBA,GAAuB,QAAN,EAAjBA,EAAmBkB,YAAI,OAAM,QAAN,EAAvB,EAAyBC,YAAI,OAA7B,EAA+BC,QAAQ,GAAGC,KACzB,OAAjBrB,QAAiB,IAAjBA,GAAuB,QAAN,EAAjBA,EAAmBkB,YAAI,OAAM,QAAN,EAAvB,EAAyBC,YAAI,OAA7B,EAA+BG,MACf,OAAjBtB,QAAiB,IAAjBA,GAAuB,QAAN,EAAjBA,EAAmBkB,YAAI,OAAgB,QAAhB,EAAvB,EAAyBK,sBAAc,QAAvC,EAAyCD,MAEzCL,EAASO,KAAK,CACZC,MAAO,sBACPC,SACE,4EAGFZ,EAAMa,wBACRV,EAASO,KAAK,CACZC,MAAO,kBACPC,UACE,wFAEE,iBAAME,UAAU,gBAAe,2CAKhCX,CAAQ,GACd,CACDH,EACiB,OAAjBd,QAAiB,IAAjBA,GAAuB,QAAN,EAAjBA,EAAmBkB,YAAI,OAAgB,QAAhB,EAAvB,EAAyBK,sBAAc,WAAtB,EAAjB,EAAyCD,KACxB,OAAjBtB,QAAiB,IAAjBA,GAAuB,QAAN,EAAjBA,EAAmBkB,YAAI,OAAM,QAAN,EAAvB,EAAyBC,YAAI,WAAZ,EAAjB,EAA+BC,QACd,OAAjBpB,QAAiB,IAAjBA,GAAuB,QAAN,EAAjBA,EAAmBkB,YAAI,OAAM,QAAN,EAAvB,EAAyBC,YAAI,WAAZ,EAAjB,EAA+BG,OAEjC,OACE,SAAC,IAAe,CACdG,MAAM,mBACNI,gBAAiB/B,EACjBgC,YAAuB,OAAV/B,QAAU,IAAVA,OAAU,EAAVA,EAAYgC,OAAO,GAAGC,KACnCC,UAAqB,OAAVlC,QAAU,IAAVA,OAAU,EAAVA,EAAYgC,OAAO,GAAGG,GACjCC,WAAYrB,EAAMsB,IAClBC,SAAUvB,EAAMwB,SAChBC,WAAYzB,EAAM0B,MAClBC,QAAShC,EACTD,SAAUD,EACVmC,UAAWvC,EACXwC,qBAAsBzC,EACtB0C,sBAAuB9B,EAAM+B,yBAC7B5B,SAAUA,EACV6B,SAAU1C,GACV,C","sources":["features/embed/components/mint.tsx"],"sourcesContent":["import { chainService } from \"packages/integration-ethereum/src/lib/decoder/chain-service\"\nimport { useMemo } from \"react\"\n\nimport { IWarningAccordionOption } from \"@nfid-frontend/ui\"\n\nimport { ApproverCmpProps } from \"frontend/features/embed/types\"\nimport { calcPrice } from \"frontend/features/embed/util/calcPriceUtil\"\nimport { useExchangeRates } from \"frontend/features/fungable-token/eth/hooks/use-eth-exchange-rate\"\n\nimport { SendTransaction } from \"../ui/send-transaction\"\n\nconst MappedMintComponent: React.FC<ApproverCmpProps> = ({\n  appMeta,\n  rpcMessage,\n  rpcMessageDecoded,\n  populatedTransaction,\n  disableConfirmButton,\n  onConfirm,\n  onReject,\n}) => {\n  const { rates } = useExchangeRates()\n  const { symbol, currency, chainName } = chainService.getSymbolAndChainName(\n    rpcMessage.options.chainId,\n  )\n  const rate = rates[currency]\n\n  const price = useMemo(() => {\n    return calcPrice(rate, populatedTransaction)\n  }, [rate, populatedTransaction])\n\n  const warnings = useMemo(() => {\n    if (!price) return []\n    let warnings: IWarningAccordionOption[] = []\n\n    if (\n      !rpcMessageDecoded?.data?.meta?.content[0].url &&\n      !rpcMessageDecoded?.data?.meta?.name &&\n      rpcMessageDecoded?.data?.collectionData?.name\n    )\n      warnings.push({\n        title: \"Preview unavailable\",\n        subtitle:\n          \"Unable to estimate asset changes. Please make sure you trust this dapp.\",\n      })\n\n    if (price.isNetworkIsBusyWarning)\n      warnings.push({\n        title: \"Network is busy\",\n        subtitle: (\n          <>\n            Gas prices are high and estimates are less accurate.\n            <span className=\"text-blue-600\"> Adjust the network fee.</span>\n          </>\n        ),\n      })\n\n    return warnings\n  }, [\n    price,\n    rpcMessageDecoded?.data?.collectionData?.name,\n    rpcMessageDecoded?.data?.meta?.content,\n    rpcMessageDecoded?.data?.meta?.name,\n  ])\n  return (\n    <SendTransaction\n      title=\"Mint collectible\"\n      applicationMeta={appMeta}\n      fromAddress={rpcMessage?.params[0].from}\n      toAddress={rpcMessage?.params[0].to}\n      networkFee={price.fee}\n      totalUSD={price.totalUsd}\n      totalToken={price.total}\n      network={chainName}\n      currency={symbol}\n      onApprove={onConfirm}\n      disableApproveButton={disableConfirmButton}\n      isInsufficientBalance={price.isInsufficientFundsError}\n      warnings={warnings}\n      onCancel={onReject}\n    />\n  )\n}\n\nexport default MappedMintComponent\n"],"names":["appMeta","rpcMessage","rpcMessageDecoded","populatedTransaction","disableConfirmButton","onConfirm","onReject","rates","useExchangeRates","symbol","currency","chainName","chainService","options","chainId","rate","price","useMemo","calcPrice","warnings","data","meta","content","url","name","collectionData","push","title","subtitle","isNetworkIsBusyWarning","className","applicationMeta","fromAddress","params","from","toAddress","to","networkFee","fee","totalUSD","totalUsd","totalToken","total","network","onApprove","disableApproveButton","isInsufficientBalance","isInsufficientFundsError","onCancel"],"sourceRoot":""}