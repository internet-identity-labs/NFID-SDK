{"version":3,"file":"static/js/276.3324f176.chunk.js","mappings":"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","sources":["ui/atoms/application-icon/index.tsx","ui/pages/new-profile/assets/header.tsx","ui/pages/new-profile/assets/transactions.svg","ui/pages/new-profile/assets/index.tsx","apps/identity-manager/profile/assets/use-account-options.tsx","apps/identity-manager/profile/assets/index.tsx","ui/molecules/migration-warning/index.tsx","ui/templates/profile-container/Container.tsx"],"sourcesContent":["import clsx from \"clsx\"\n\n\n\ninterface ApplicationIconProps {\n  appName: string\n  icon?: string\n  className?: string\n}\n\nexport const ApplicationIcon: React.FC<ApplicationIconProps> = ({\n  appName,\n  icon,\n  className,\n}) => {\n  return (\n    <div\n      className={clsx(\n        \"bg-white rounded-full w-[40px] h-[40px] text-blue\",\n        \"flex items-center justify-center\",\n        \"text-xl font-medium\",\n        className,\n      )}\n    >\n      {icon ? (\n        <img\n          className=\"rounded-full w-[26px] h-[26px] object-contain object-center\"\n          src={icon}\n          alt=\"app icon\"\n        />\n      ) : (\n        <div>{appName[0].toUpperCase()}</div>\n      )}\n    </div>\n  )\n}\n","import { FilterPopover } from \"@nfid-frontend/ui\"\nimport { DropdownSelect, IconCmpFilters, IOption } from \"@nfid-frontend/ui\"\n\nimport { AssetFilter } from \"frontend/ui/connnector/types\"\n\ninterface IProfileAssetsHeader {\n  blockchainOptions: IOption[]\n  blockchainFilter: string[]\n  setBlockchainFilter: (value: string[]) => void\n  accountsOptions: IOption[]\n  assetFilter: AssetFilter[]\n  setAssetFilter: (value: AssetFilter[]) => void\n  resetFilters: () => void\n}\n\nexport const ProfileAssetsHeader = ({\n  accountsOptions,\n  assetFilter,\n  setAssetFilter,\n  blockchainFilter,\n  blockchainOptions,\n  setBlockchainFilter,\n  resetFilters,\n}: IProfileAssetsHeader) => {\n  return (\n    <div className=\"flex items-center justify-between w-full\">\n      <p>Your tokens</p>\n      <div className=\"flex items-center\">\n        <div className=\"flex justify-center cursor-pointer\" id=\"asset_filter\">\n          <FilterPopover\n            onReset={() => resetFilters()}\n            trigger={<IconCmpFilters />}\n            align=\"end\"\n          >\n            <DropdownSelect\n              label=\"Blockchain\"\n              options={blockchainOptions}\n              selectedValues={blockchainFilter}\n              setSelectedValues={setBlockchainFilter}\n              id=\"blockchain_filter\"\n            />\n            <DropdownSelect\n              label=\"Account\"\n              options={accountsOptions}\n              selectedValues={assetFilter.map((item) => item?.principal ?? \"\")}\n              setSelectedValues={(values) =>\n                setAssetFilter(values.map((item) => ({ principal: item })))\n              }\n              id=\"account_filter\"\n            />\n          </FilterPopover>\n        </div>\n      </div>\n    </div>\n  )\n}\n","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgTransactions(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 9V13C16 14.8856 16 15.8284 15.4142 16.4142C14.8284 17 13.8856 17 12 17H4C2.89543 17 2 16.1046 2 15V15C2 13.8954 2.89543 13 4 13H12C13.8856 13 14.8284 13 15.4142 12.4142C16 11.8284 16 10.8856 16 9V5C16 3.11438 16 2.17157 15.4142 1.58579C14.8284 1 13.8856 1 12 1H6C4.11438 1 3.17157 1 2.58579 1.58579C2 2.17157 2 3.11438 2 5V14.7778\",\n    stroke: \"black\",\n    strokeWidth: 1.8\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 6L12 6\",\n    stroke: \"black\",\n    strokeWidth: 1.8,\n    strokeLinecap: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTransactions);\nexport default __webpack_public_path__ + \"static/media/transactions.0b39786c551f058036b58abde52b4457.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from \"clsx\"\nimport React, { useMemo, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\n\nimport { blockchains } from \"@nfid/config\"\n\nimport { useAccountOptions } from \"frontend/apps/identity-manager/profile/assets/use-account-options\"\nimport { ProfileConstants } from \"frontend/apps/identity-manager/profile/routes\"\nimport { ApplicationIcon } from \"frontend/ui/atoms/application-icon\"\nimport { Loader } from \"frontend/ui/atoms/loader\"\nimport { AssetFilter, Blockchain } from \"frontend/ui/connnector/types\"\nimport { MigrationWarning } from \"frontend/ui/molecules/migration-warning\"\nimport ProfileContainer from \"frontend/ui/templates/profile-container/Container\"\nimport ProfileTemplate from \"frontend/ui/templates/profile-template/Template\"\n\nimport { ProfileAssetsHeader } from \"./header\"\nimport Icon from \"./transactions.svg\"\n\ntype Token = {\n  toPresentation: (amount?: bigint) => number\n  icon: string\n  title: string\n  currency: string\n  balance?: bigint\n  price?: string\n  blockchain: Blockchain\n}\n\ninterface IProfileAssetsPage extends React.HTMLAttributes<HTMLDivElement> {\n  onIconClick: () => void\n  tokens: Token[]\n  assetFilter: AssetFilter[]\n  setAssetFilter: (value: AssetFilter[]) => void\n}\n\nconst ProfileAssetsPage: React.FC<IProfileAssetsPage> = ({\n  onIconClick,\n  tokens,\n  assetFilter,\n  setAssetFilter,\n}) => {\n  const [blockchainFilter, setBlockchainFilter] = useState<string[]>([])\n  const { options } = useAccountOptions(blockchainFilter)\n  const navigate = useNavigate()\n\n  const navigateToTransactions = React.useCallback(\n    (blockchain: Blockchain) => () => {\n      navigate(`${ProfileConstants.base}/${ProfileConstants.transactions}`, {\n        state: {\n          blockchain,\n        },\n      })\n    },\n    [navigate],\n  )\n\n  console.debug(\"ProfileAssetsPage\", { tokens })\n\n  const filteredTokens = useMemo(() => {\n    return tokens.filter((token) => {\n      if (!blockchainFilter.length) return true\n      return blockchainFilter.includes(token.blockchain)\n    })\n  }, [blockchainFilter, tokens])\n\n  const blockchainOptions = React.useMemo(() => {\n    return blockchains.map((blockchain) => ({\n      label: blockchain,\n      value: blockchain,\n    }))\n  }, [])\n\n  const resetFilters = React.useCallback(() => {\n    setBlockchainFilter([])\n    setAssetFilter([])\n  }, [setAssetFilter])\n\n  return (\n    <ProfileTemplate\n      pageTitle=\"Assets\"\n      icon={Icon}\n      iconTooltip=\"Activity history\"\n      onIconClick={onIconClick}\n      iconId=\"activity\"\n      className=\"overflow-inherit\"\n    >\n      <MigrationWarning />\n      <ProfileContainer\n        title={\n          <ProfileAssetsHeader\n            accountsOptions={options}\n            assetFilter={assetFilter}\n            setAssetFilter={setAssetFilter}\n            blockchainOptions={blockchainOptions}\n            blockchainFilter={blockchainFilter}\n            setBlockchainFilter={setBlockchainFilter}\n            resetFilters={resetFilters}\n          />\n        }\n        showChildrenPadding={false}\n        className=\"sm:pb-0\"\n      >\n        <div className=\"px-5\">\n          <Loader isLoading={!tokens.length} />\n          <table className={clsx(\"text-left w-full hidden sm:table\")}>\n            <thead className={clsx(\"border-b border-black  h-16\")}>\n              <tr className={clsx(\"font-bold text-sm leading-5\")}>\n                <th>Name</th>\n                <th>Network</th>\n                <th className=\"text-right\">Token balance</th>\n                <th className=\"pr-16 text-right\">USD balance</th>\n              </tr>\n            </thead>\n            <tbody className=\"h-16 text-sm text-[#0B0E13]\">\n              {filteredTokens.map((token, index) => (\n                <tr\n                  key={`token_${index}`}\n                  id={`token_${token.title.replace(/\\s+/g, \"\")}`}\n                  onClick={navigateToTransactions(token.blockchain)}\n                  className=\"border-b border-gray-200 cursor-pointer last:border-b-0 hover:bg-gray-100\"\n                >\n                  <td className=\"flex items-center h-16\">\n                    <ApplicationIcon\n                      className=\"mr-[18px]\"\n                      icon={token.icon}\n                      appName={token.title}\n                    />\n                    <div>\n                      <p\n                        className=\"text-sm font-bold\"\n                        id={`token_${token.title.replace(/\\s/g, \"\")}_currency`}\n                      >\n                        {token.currency}\n                      </p>\n                      <p className={\"text-[#9CA3AF] text-xs items-left flex\"}>\n                        {token.title}\n                      </p>\n                    </div>\n                  </td>\n                  <td\n                    className=\"text-left\"\n                    id={`token_${token.title.replace(/\\s/g, \"\")}_blockchain`}\n                  >\n                    {token.blockchain}\n                  </td>\n                  <td\n                    className=\"text-sm text-right\"\n                    id={`token_${token.title.replace(/\\s/g, \"\")}_balance`}\n                  >\n                    {token.toPresentation(token.balance)} {token.currency}\n                  </td>\n                  <td\n                    className=\"pr-16 text-sm text-right\"\n                    id={`token_${token.title.replace(/\\s/g, \"\")}_usd`}\n                  >\n                    {token.price}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <div className=\"px-5 sm:hidden\">\n            {tokens.map((token, index) => (\n              <div\n                key={`token_${index}`}\n                className=\"flex items-center justify-between h-16\"\n                onClick={navigateToTransactions(token.blockchain)}\n              >\n                <div className=\"flex items-center text-[#0B0E13]\">\n                  <img\n                    src={token.icon}\n                    alt=\"icon\"\n                    className=\"w-6 h-6 mr-[13px]\"\n                  />\n                  <div>\n                    <p className=\"text-sm font-bold leading-5\">{token.title}</p>\n                    <p className=\"text-[#9CA3AF] text-xs items-left flex leading-3\">\n                      {token.currency}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"text-sm leading-5\">\n                    {token.toPresentation(token.balance)} {token.currency}\n                  </div>\n                  <div className=\"text-xs leading-3 text-gray-400\">\n                    {token.price}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </ProfileContainer>\n    </ProfileTemplate>\n  )\n}\n\nexport default ProfileAssetsPage\n","import { useMemo } from \"react\"\n\nimport { IOption } from \"@nfid-frontend/ui\"\nimport { getWalletName } from \"@nfid/integration\"\n\nimport { useApplicationsMeta } from \"frontend/integration/identity-manager/queries\"\nimport { useAllPrincipals } from \"frontend/integration/internet-identity/queries\"\nimport { Blockchain } from \"frontend/ui/connnector/types\"\nimport { keepStaticOrder, sortAlphabetic } from \"frontend/ui/utils/sorting\"\n\nexport const useAccountOptions = (blockchainFilter: string[]) => {\n  const { principals } = useAllPrincipals()\n  const { applicationsMeta } = useApplicationsMeta()\n\n  const options = useMemo(() => {\n    if (!applicationsMeta || !principals) return []\n\n    const filteredPrincipals = principals.filter(({ account, principal }) => {\n      if (\n        blockchainFilter.length &&\n        !blockchainFilter.includes(Blockchain.IC)\n      ) {\n        return account.accountId === \"-1\"\n      }\n\n      return true\n    })\n\n    const opt = filteredPrincipals\n      .map(({ account, principal }) => {\n        return {\n          label: getWalletName(\n            applicationsMeta,\n            account.domain,\n            account.accountId,\n          ),\n          value: principal.toString(),\n        } as IOption\n      })\n      .sort(sortAlphabetic(({ label }) => label ?? \"\"))\n\n    return keepStaticOrder<IOption>(\n      ({ label }) => label ?? \"\",\n      [\"NFID\", \"NNS\"],\n    )(opt || [])\n  }, [applicationsMeta, blockchainFilter, principals])\n\n  return {\n    options,\n  }\n}\n","import React from \"react\"\n\nimport { useAllToken } from \"frontend/features/fungable-token/use-all-token\"\nimport { AssetFilter } from \"frontend/ui/connnector/types\"\nimport ProfileAssetsPage from \"frontend/ui/pages/new-profile/assets\"\nimport { useNFIDNavigate } from \"frontend/ui/utils/use-nfid-navigate\"\n\nimport { ProfileConstants } from \"../routes\"\n\nconst ProfileAssets = () => {\n  const [assetFilter, setAssetFilter] = React.useState<AssetFilter[]>([])\n  const { navigate } = useNFIDNavigate()\n  const { token } = useAllToken(assetFilter)\n\n  console.debug(\"ProfileAssets\", { token })\n\n  return (\n    <ProfileAssetsPage\n      onIconClick={() =>\n        navigate(`${ProfileConstants.base}/${ProfileConstants.transactions}`)\n      }\n      tokens={token}\n      assetFilter={assetFilter}\n      setAssetFilter={setAssetFilter}\n    />\n  )\n}\n\nexport default ProfileAssets\n","import { useActor } from \"@xstate/react\"\nimport clsx from \"clsx\"\nimport { useContext } from \"react\"\nimport React from \"react\"\nimport { toast } from \"react-toastify\"\nimport useSWR from \"swr\"\n\nimport { IconCmpWarning } from \"@nfid-frontend/ui\"\nimport { RootWallet } from \"@nfid/integration\"\n\nimport { useProfile } from \"frontend/integration/identity-manager/queries\"\nimport { ProfileContext } from \"frontend/provider\"\nimport { getICPublicDelegation } from \"frontend/ui/connnector/fungible-asset-screen/ic/hooks/use-icp\"\n\nexport const useMigrationTransfer = () => {\n  const { profile } = useProfile()\n\n  const { data: publicDelegation } = useSWR(\n    \"ICPublicDelegation\",\n    getICPublicDelegation,\n  )\n  const globalServices = useContext(ProfileContext)\n\n  const [, send] = useActor(globalServices.transferService)\n\n  const onTransferClick = React.useCallback(async () => {\n    if (!publicDelegation)\n      return toast.warn(\"Please wait a few seconds and try again.\")\n\n    send({ type: \"CHANGE_TOKEN_TYPE\", data: \"ft\" })\n    send({ type: \"CHANGE_DIRECTION\", data: \"send\" })\n    send({\n      type: \"ASSIGN_RECEIVER_WALLET\",\n      data: publicDelegation.getPrincipal().toText(),\n    })\n\n    send({ type: \"SHOW\" })\n  }, [publicDelegation, send])\n\n  return {\n    onTransferClick,\n    showMigrationWarning: profile?.wallet === RootWallet.II,\n  }\n}\n\nexport const MigrationWarning: React.FC = () => {\n  const { showMigrationWarning, onTransferClick } = useMigrationTransfer()\n  if (!showMigrationWarning) return null\n\n  return (\n    <div\n      className={clsx(\n        \"bg-orange-50 rounded-xl flex space-x-5 p-[30px] text-orange-900\",\n        \"mb-[30px]\",\n      )}\n    >\n      <IconCmpWarning className=\"w-[22px] h-[22px] shrink-0\" />\n      <div className=\"text-sm\">\n        <p className=\"font-bold mb-2.5\">NFID upgrade</p>\n        <p className=\"leading-[22px]\">\n          Starting November 1, 2023, assets from external applications will not\n          be displayed in NFID. To manage those assets in NFID, transfer them to\n          your <b>NFID Wallet</b>. Otherwise, you’ll only have access through\n          the application’s website.\n        </p>\n        <p\n          onClick={onTransferClick}\n          className=\"mt-4 font-semibold cursor-pointer text-blue\"\n        >\n          Transfer assets to my NFID Wallet\n        </p>\n      </div>\n    </div>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface IProfileContainer {\n  title?: string | React.ReactNode\n  subTitle?: string | React.ReactNode\n  children?: React.ReactNode\n  className?: string\n  showChildrenPadding?: boolean\n  id?: string\n}\n\nconst ProfileContainer: React.FC<IProfileContainer> = ({\n  title,\n  subTitle,\n  children,\n  className,\n  showChildrenPadding = true,\n  id,\n}) => {\n  return (\n    <div\n      id={id}\n      className={clsx(\n        \"block border border-gray-200 rounded-xl\",\n        \"py-4 sm:py-[26px]\",\n        className,\n      )}\n    >\n      <div className=\"px-5\">\n        {title && (\n          <div className=\"flex items-center justify-between mb-3 text-xl\">\n            {title}\n          </div>\n        )}\n        {subTitle && (\n          <div className=\"flex items-center justify-between mb-4 text-sm leading-5 text-secondary\">\n            {subTitle}\n          </div>\n        )}\n      </div>\n\n      <div className={clsx(showChildrenPadding && \"px-5 sm:px-[30px]\")}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileContainer\n"],"names":["ApplicationIcon","appName","icon","className","clsx","src","alt","toUpperCase","ProfileAssetsHeader","accountsOptions","assetFilter","setAssetFilter","blockchainFilter","blockchainOptions","setBlockchainFilter","resetFilters","id","onReset","trigger","align","label","options","selectedValues","setSelectedValues","map","item","principal","values","onIconClick","tokens","useState","principals","useAllPrincipals","applicationsMeta","useApplicationsMeta","useMemo","opt","filter","account","length","includes","Blockchain","accountId","getWalletName","domain","value","toString","sort","sortAlphabetic","keepStaticOrder","useAccountOptions","navigate","useNavigate","navigateToTransactions","React","blockchain","ProfileConstants","state","console","debug","filteredTokens","token","blockchains","pageTitle","Icon","iconTooltip","iconId","title","showChildrenPadding","isLoading","index","replace","onClick","currency","toPresentation","balance","price","useNFIDNavigate","useAllToken","MigrationWarning","showMigrationWarning","onTransferClick","profile","useProfile","data","publicDelegation","useSWR","getICPublicDelegation","globalServices","useContext","ProfileContext","send","useActor","transferService","async","toast","type","getPrincipal","toText","wallet","RootWallet","useMigrationTransfer","subTitle","children"],"sourceRoot":""}