{"version":3,"file":"static/js/355.71464b4f.chunk.js","mappings":"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","sources":["ui/pages/new-profile/copy-recovery-phrase/index.tsx","apps/identity-manager/profile/copy-recovery-phrase.tsx","ui/atoms/icons/copy.tsx","ui/templates/profile-container/Container.tsx","../../../node_modules/@xstate/react/es/useActor.js"],"sourcesContent":["import React from \"react\"\n\nimport { Button } from \"frontend/ui/atoms/button\"\nimport { CopyIcon } from \"frontend/ui/atoms/icons/copy\"\nimport { P } from \"frontend/ui/atoms/typography/paragraph\"\nimport ProfileContainer from \"frontend/ui/templates/profile-container/Container\"\nimport ProfileTemplate from \"frontend/ui/templates/profile-template/Template\"\n\ninterface ProfileCopyPhrasePageProps {\n  recoveryPhrase: string\n  continueButtonText: string\n  onContinueButtonClick: () => void\n}\n\nconst ProfileCopyPhrasePage: React.FC<ProfileCopyPhrasePageProps> = ({\n  recoveryPhrase,\n  continueButtonText,\n  onContinueButtonClick,\n}) => {\n  const [copied, setCopied] = React.useState(false)\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(recoveryPhrase).then(function () {\n      setCopied(true)\n    })\n  }\n  return (\n    <ProfileTemplate>\n      <ProfileContainer>\n        <div className=\"p-4 border rounded-t border-black\">\n          <P className=\"font-mono\">{recoveryPhrase}</P>\n        </div>\n\n        <Button\n          primary\n          className=\"!rounded-t-none w-full flex items-center justify-center space-x-3 focus:outline-none\"\n          onClick={() => copyToClipboard()}\n        >\n          <CopyIcon />\n          <span>{copied ? \"Copied\" : \"Copy\"}</span>\n        </Button>\n\n        <Button\n          onClick={onContinueButtonClick}\n          disabled={!copied}\n          primary\n          large\n          className=\"mt-8\"\n        >\n          {continueButtonText}\n        </Button>\n      </ProfileContainer>\n    </ProfileTemplate>\n  )\n}\n\nexport default ProfileCopyPhrasePage\n","import React from \"react\"\nimport { useLocation } from \"react-router-dom\"\n\nimport ProfilePhraseCopyPage from \"frontend/ui/pages/new-profile/copy-recovery-phrase\"\nimport { useNFIDNavigate } from \"frontend/ui/utils/use-nfid-navigate\"\n\nimport { ProfileConstants } from \"./routes\"\n\ninterface CopyRecoveryPhraseLocationState {\n  recoveryPhrase: string\n}\n\ninterface CopyRecoveryPhraseProps {}\n\nconst CopyRecoveryPhrase: React.FC<CopyRecoveryPhraseProps> = () => {\n  const { state } = useLocation()\n  const { navigateFactory } = useNFIDNavigate()\n\n  return (\n    <ProfilePhraseCopyPage\n      recoveryPhrase={(state as CopyRecoveryPhraseLocationState).recoveryPhrase}\n      onContinueButtonClick={navigateFactory(\n        `${ProfileConstants.base}/${ProfileConstants.security}`,\n      )}\n      continueButtonText={\"Done\"}\n    />\n  )\n}\n\nexport default CopyRecoveryPhrase\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface CopyIconProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const CopyIcon: React.FC<CopyIconProps> = ({ className }) => {\n  return (\n    <svg\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={clsx(className)}\n    >\n      <path\n        d=\"M15 6.75H8.25C7.42157 6.75 6.75 7.42157 6.75 8.25V15C6.75 15.8284 7.42157 16.5 8.25 16.5H15C15.8284 16.5 16.5 15.8284 16.5 15V8.25C16.5 7.42157 15.8284 6.75 15 6.75Z\"\n        stroke=\"inherit\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M3.75 11.25H3C2.60218 11.25 2.22064 11.092 1.93934 10.8107C1.65804 10.5294 1.5 10.1478 1.5 9.75V3C1.5 2.60218 1.65804 2.22064 1.93934 1.93934C2.22064 1.65804 2.60218 1.5 3 1.5H9.75C10.1478 1.5 10.5294 1.65804 10.8107 1.93934C11.092 2.22064 11.25 2.60218 11.25 3V3.75\"\n        stroke=\"inherit\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface IProfileContainer {\n  title?: string | React.ReactNode\n  subTitle?: string | React.ReactNode\n  children?: React.ReactNode\n  className?: string\n  showChildrenPadding?: boolean\n  id?: string\n}\n\nconst ProfileContainer: React.FC<IProfileContainer> = ({\n  title,\n  subTitle,\n  children,\n  className,\n  showChildrenPadding = true,\n  id,\n}) => {\n  return (\n    <div\n      id={id}\n      className={clsx(\n        \"block border border-gray-200 rounded-xl\",\n        \"py-4 sm:py-[26px]\",\n        className,\n      )}\n    >\n      <div className=\"px-5\">\n        {title && (\n          <div className=\"flex items-center justify-between mb-3 text-xl\">\n            {title}\n          </div>\n        )}\n        {subTitle && (\n          <div className=\"flex items-center justify-between mb-4 text-sm leading-5 text-secondary\">\n            {subTitle}\n          </div>\n        )}\n      </div>\n\n      <div className={clsx(showChildrenPadding && \"px-5 sm:px-[30px]\")}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileContainer\n","import { useRef, useCallback } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport useConstant from './useConstant';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nexport function isActorWithState(actorRef) {\n    return 'state' in actorRef;\n}\nfunction isDeferredActor(actorRef) {\n    return 'deferred' in actorRef;\n}\nfunction defaultGetSnapshot(actorRef) {\n    return 'getSnapshot' in actorRef\n        ? actorRef.getSnapshot()\n        : isActorWithState(actorRef)\n            ? actorRef.state\n            : undefined;\n}\nexport function useActor(actorRef, getSnapshot) {\n    if (getSnapshot === void 0) { getSnapshot = defaultGetSnapshot; }\n    var actorRefRef = useRef(actorRef);\n    var deferredEventsRef = useRef([]);\n    var subscribe = useCallback(function (handleStoreChange) {\n        var unsubscribe = actorRef.subscribe(handleStoreChange).unsubscribe;\n        return unsubscribe;\n    }, [actorRef]);\n    var boundGetSnapshot = useCallback(function () { return getSnapshot(actorRef); }, [\n        actorRef,\n        getSnapshot\n    ]);\n    var storeSnapshot = useSyncExternalStore(subscribe, boundGetSnapshot, boundGetSnapshot);\n    var send = useConstant(function () { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var event = args[0];\n        if (process.env.NODE_ENV !== 'production' && args.length > 1) {\n            console.warn(\"Unexpected payload: \".concat(JSON.stringify(args[1]), \". Only a single event object can be sent to actor send() functions.\"));\n        }\n        var currentActorRef = actorRefRef.current;\n        // If the previous actor is a deferred actor,\n        // queue the events so that they can be replayed\n        // on the non-deferred actor.\n        if (isDeferredActor(currentActorRef) && currentActorRef.deferred) {\n            deferredEventsRef.current.push(event);\n        }\n        else {\n            currentActorRef.send(event);\n        }\n    }; });\n    useIsomorphicLayoutEffect(function () {\n        actorRefRef.current = actorRef;\n        // Dequeue deferred events from the previous deferred actorRef\n        while (deferredEventsRef.current.length > 0) {\n            var deferredEvent = deferredEventsRef.current.shift();\n            actorRef.send(deferredEvent);\n        }\n    }, [actorRef]);\n    return [storeSnapshot, send];\n}\n"],"names":["recoveryPhrase","continueButtonText","onContinueButtonClick","copied","setCopied","React","className","P","primary","onClick","navigator","clipboard","writeText","then","disabled","large","state","useLocation","navigateFactory","useNFIDNavigate","ProfileConstants","CopyIcon","width","height","viewBox","fill","xmlns","clsx","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","title","subTitle","children","showChildrenPadding","id","isDeferredActor","actorRef","defaultGetSnapshot","getSnapshot","isActorWithState","undefined","useActor","actorRefRef","useRef","deferredEventsRef","subscribe","useCallback","handleStoreChange","unsubscribe","boundGetSnapshot","storeSnapshot","useSyncExternalStore","send","args","_i","arguments","length","event","currentActorRef","current","deferred","push","deferredEvent","shift"],"sourceRoot":""}