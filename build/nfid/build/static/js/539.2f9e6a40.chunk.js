"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([[539],{13485:(e,t,n)=>{n.d(t,{Z:()=>i});n(87273);const i=n.p+"static/media/dfinity.583ab84ba16070ca501453d1e291dff4.svg"},98026:(e,t,n)=>{n.r(t),n.d(t,{default:()=>y});var i=n(64279),a=n(87273),o=n(95163),s=n(1719),r=n(53844),c=n(84732),u=n(71520);var l=n(78765),d=n(29572);var h=n(18392),g=n(29323);const p=(0,r.C)({tsTypes:{},schema:{events:{},context:{}},id:"auth-remote-sender",initial:"Start",states:{Start:{type:"parallel",states:{GetAuthRequest:{initial:"Fetch",states:{Fetch:{invoke:{src:"getDataFromPath",id:"getDataFromPath",onDone:[{actions:"assignAuthRequest",target:"Done"}]}},Done:{type:"final"}}},GetAppMeta:{initial:"Fetch",states:{Fetch:{invoke:{src:"getAppMeta",id:"getAppMeta",onDone:[{actions:"assignAppMeta",target:"Done"}]}},Done:{type:"final"}}}},onDone:{target:"AuthenticationMachine"}},AuthenticationMachine:{invoke:{src:"AuthenticationMachine",id:"authenticate",onDone:{target:"PostDelegation",actions:"assignAuthSession"},data:e=>({appMeta:e.appMeta,authRequest:e.authRequest})}},PostDelegation:{invoke:{src:"postRemoteDelegationService",id:"postRemoteDelegationService",onDone:"End",data:e=>({appMeta:e.appMeta,authRequest:e.authRequest,auhtSession:e.authSession})}},End:{type:"final"}}},{guards:{},services:{AuthenticationMachine:g.Z,postRemoteDelegationService:async function(e,t){var n,i;console.debug("postRemoteDelegationService",{context:e,event:t});const{chain:a,sessionKey:o}=l.fD.get();if(!a)throw new Error("postRemoteDelegationService authState missing chain");if(!o)throw new Error("postRemoteDelegationService authState missing sessionKey");if(!e.pubsubChannel)throw new Error("postRemoteDelegationService context.pubsubChannel missing");if(null===(n=e.authSession)||void 0===n||!n.anchor)throw new Error("postRemoteDelegationService context.authSession.anchor missing");const s=(0,d.uQ)(BigInt(null===(i=e.authSession)||void 0===i?void 0:i.anchor),a,o);await(0,d.HV)(e.pubsubChannel);const r=await(0,d.lB)(e.pubsubChannel,[s]);console.debug("postRemoteDelegationService postMessage",{response:r})},getAppMeta:h.nt,getDataFromPath:function e(){const t=Object.fromEntries(new URLSearchParams(window.location.search).entries()),{secret:n,maxTimeToLive:i,aliasDomain:a,derivationOrigin:o}=t;console.debug(e.name,{...t});const s=new Uint8Array((0,u.Wu)(n));return Promise.resolve({authRequest:{hostname:a,maxTimeToLive:BigInt(i),sessionPublicKey:s,derivationOrigin:o},pubsubChannel:n})}},actions:{assignAppMeta:(0,c.f0)(((e,t)=>({appMeta:t.data}))),assignAuthRequest:(0,c.f0)(((e,t)=>({authRequest:t.data.authRequest,pubsubChannel:t.data.pubsubChannel}))),assignAuthSession:(0,c.f0)(((e,t)=>(console.debug("RemoteSenderMachine assignAuthSession",{authSession:t.data}),{authSession:t.data})))}}),v=p;var m=n(93302),w=n(8880),f=n(33693);function y(e){let{machine:t}=e;const[n]=(0,i.e)(t||v),{isAuthenticated:r}=(0,s.J)();switch(a.useEffect((()=>{console.debug("RemoteIDPCoordinator",{state:n.value,context:n.context})}),[n.value,n.context]),!0){case n.matches("Start"):return(0,f.jsx)(m.B,{isLoading:!0});case n.matches("AuthenticationMachine"):return(0,f.jsx)(w.d,{actor:n.children.authenticate});case n.matches("End")&&r:return(0,f.jsx)(o.Fg,{to:"/profile/security"});default:return(0,f.jsx)(m.B,{isLoading:!0})}}},18392:(e,t,n)=>{n.d(t,{gn:()=>w,qN:()=>f,nt:()=>m,YN:()=>p,ss:()=>v});var i=n(54915),a=n(18351),o=n(30365),s=n(78765);const r=async e=>{let{scope:t,anchor:n,applicationName:r="Undefined application",chain:c="Internet Computer"}=e;const u=await(0,o.JU)(n,t),l=u.toString();!async function(e){const t=s.ic.isLocal?"/auth":AWS_AUTH_STATS,n=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!n.ok)throw new Error(await n.text())}({application:r,billable:(0,a.g)(),blockchainAddress:(0,i.PZ)(u),chain:c,principal:l})};var c=n(76716);function u(){const e=window.opener||window.parent;if(!e)throw new Error("Could not identify window opener.");return e}function l(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"*";const n=u();console.debug("postMessageToClient",{event:e,hostname:t}),n.postMessage(e,t)}const d=e=>{const t=e.data;if(console.debug("isIdentityClientAuthEvent",{msg:t}),"object"!==typeof t)return!1;if(null===t)return!1;const n=t;if(!(0,c.n)(n,"kind")||"authorize-client"!==n.kind)return!1;if(!(0,c.n)(n,"sessionPublicKey")||!(n.sessionPublicKey instanceof Uint8Array))return!1;const i=n.maxTimeToLive;if("undefined"!==typeof i&&"bigint"!==typeof i)return!1;const a=n.derivationOrigin;return"undefined"===typeof a||"string"===typeof a};var h=n(23439),g=n(13791);async function p(){const e=setInterval((()=>l({kind:"authorize-ready"})),500),t=(n=d,new Promise((e=>{window.addEventListener("message",(t=>{if(n(t))return e(t);console.warn(`awaitClientMessage: Unexpected message: ${JSON.stringify(t)}`)}))}))).then((async t=>{console.debug("handshake",{event:t});const n=await(async(e,t)=>{if(void 0===t||t===e)return{result:"valid"};const n=/^https:\/\/([\w-]*)(\.raw)?\.ic0\.app$/.exec(t);if(null===n)return{result:"invalid",message:'derivationOrigin does not match regex "^https:\\/\\/([\\w-]*)(\\.raw)?\\.ic0\\.app$"'};try{const t=`https://${g.Principal.fromText(n[1]).toText()}.ic0.app/.well-known/ii-alternative-origins`,i=await fetch(t,{redirect:"error"});if(200!==i.status)return{result:"invalid",message:`resource ${t} returned invalid status: ${i.status}`};const a=await i.json();if(console.log(">> ",{alternativeOriginsObj:a}),!Array.isArray(null===a||void 0===a?void 0:a.alternativeOrigins))return{result:"invalid",message:`resource ${t} has invalid format: received ${a}`};if(a.alternativeOrigins.length>10)return{result:"invalid",message:`Resource ${t} has too many entries: To prevent misuse at most 10 alternative origins are allowed.`};if(!a.alternativeOrigins.includes(e))return{result:"invalid",message:`"${e}" is not listed in the list of allowed alternative origins. Allowed alternative origins: ${a.alternativeOrigins}`}}catch(i){return{result:"invalid",message:`An error occurred while validating the derivationOrigin "${t}" for alias domain "${e}": ${null===i||void 0===i?void 0:i.message}`}}return{result:"valid"}})(t.origin,t.data.derivationOrigin);if(console.debug("handshake",{validation:n,derivationOrigin:t.data.derivationOrigin}),"valid"!==n.result)throw new Error(n.message);return clearInterval(e),{maxTimeToLive:t.data.maxTimeToLive,sessionPublicKey:t.data.sessionPublicKey,derivationOrigin:t.data.derivationOrigin,hostname:t.origin}}));var n;return l({kind:"authorize-ready"}),t}async function v(e){var t;if(console.debug("postDelegation"),null===(t=e.authRequest)||void 0===t||!t.hostname)throw new Error("postDelegation context.authRequest.hostname missing");if(!e.thirdPartyAuthoSession)throw new Error("postDelegation context.thirdPartyAuthoSession missing");if(!e.appMeta)throw new Error("postDelegation context.appMeta missing");const n=[(i=e.thirdPartyAuthoSession.signedDelegation,{delegation:{pubkey:Uint8Array.from(i.delegation.pubkey),expiration:i.delegation.expiration,targets:void 0},signature:Uint8Array.from(i.signature)})];var i;const a=e.thirdPartyAuthoSession.userPublicKey;r({scope:e.thirdPartyAuthoSession.scope,anchor:e.thirdPartyAuthoSession.anchor,applicationName:e.appMeta.name,chain:"Internet Computer"}),l({kind:"authorize-client-success",delegations:n,userPublicKey:a},e.authRequest.hostname),window.close()}async function m(){return function(){const e=new URLSearchParams(window.location.search);return{name:e.get("applicationName")||void 0,logo:e.get("applicationLogo")||void 0}}()}async function w(){try{return window.self!==window.top}catch(e){return!0}}async function f(e){let{authRequest:{hostname:t,derivationOrigin:n}={hostname:""}}=e;if(console.debug("checkIsIframeAllowed",{hostname:t,derivationOrigin:n}),!t)throw new Error("checkIsIframeAllowed hostname cannot be empty");const{isIFrameAllowed:i,domain:a}=await(0,h.UM)(n||t);return console.debug("checkIsIframeAllowed",{isIFrameAllowed:i,domain:a}),i}},75205:(e,t,n)=>{n.d(t,{Gr:()=>s,g_:()=>o});var i=n(20964),a=n.n(i);const o=()=>a().getParser(window.navigator.userAgent).getBrowser().name,s=e=>(/^(http|https):\/\//.test(e)||(e=`${window.location.protocol}//${e}`),new URL(e))}}]);
//# sourceMappingURL=539.2f9e6a40.chunk.js.map