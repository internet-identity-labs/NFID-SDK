{"version":3,"file":"static/js/479.53152376.chunk.js","mappings":"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","sources":["ui/pages/new-profile/credentials/add-phone-number.tsx","apps/identity-manager/profile/credentials/phone-number.tsx","apps/identity-manager/profile/state.ts","integration/lambda/phone/index.ts","integration/lambda/util/util.ts","ui/templates/profile-container/Container.tsx","../../../node_modules/@xstate/react/es/useActor.js"],"sourcesContent":["import clsx from \"clsx\"\nimport React, { Dispatch, SetStateAction } from \"react\"\nimport { SubmitHandler, useForm } from \"react-hook-form\"\n\nimport { Input, phoneRules } from \"@nfid-frontend/ui\"\n\nimport { Button } from \"frontend/ui/atoms/button\"\nimport ProfileContainer from \"frontend/ui/templates/profile-container/Container\"\nimport ProfileTemplate from \"frontend/ui/templates/profile-template/Template\"\n\ninterface IProfileAddPhoneNumber {\n  responseError?: string\n  isLoading?: boolean\n  onSubmit: SubmitHandler<{ phone: string }>\n  setResponseError?: Dispatch<SetStateAction<string>>\n}\n\nconst ProfileAddPhoneNumber: React.FC<IProfileAddPhoneNumber> = ({\n  isLoading,\n  onSubmit,\n  responseError,\n  setResponseError,\n}) => {\n  const {\n    formState: { errors },\n    register,\n    handleSubmit,\n    setError,\n  } = useForm<{ phone: string }>({\n    mode: \"all\",\n  })\n\n  React.useEffect(() => {\n    if (responseError && errors.phone?.message !== responseError) {\n      setError(\"phone\", { message: responseError })\n    }\n  }, [errors.phone, responseError, setError])\n\n  return (\n    <ProfileTemplate\n      pageTitle=\"Add phone number\"\n      isLoading={isLoading}\n      showBackButton\n    >\n      <ProfileContainer>\n        <div className={clsx(\"text-sm\")}>\n          <p>\n            Verify your non-VOIP mobile phone number with NFID. Standard text\n            messaging rates may apply.\n          </p>\n          <p className=\"mt-3 max-w-[766px]\">\n            Your phone number can only be registered with one identity. To\n            register it with your existing Internet Identity anchor please see\n            these{\" \"}\n            <a\n              className=\"transition-opacity cursor-pointer text-blue hover:opacity-75\"\n              href=\"https://docs.nfid.one/sign-in-with-ii-and-nfid\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              instructions\n            </a>\n            .\n          </p>\n        </div>\n        <form\n          className={clsx(\"mt-5 flex flex-col flex-1\", \"sm:block\")}\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <div className=\"space-y-2\">\n            <Input\n              id=\"phone-number\"\n              className=\"max-w-[350px]\"\n              labelText=\"Phone number\"\n              placeholder=\"+1 234 856 7890\"\n              errorText={errors.phone?.message}\n              onKeyUp={() => setResponseError && setResponseError(\"\")}\n              {...register(\"phone\", {\n                required: phoneRules.errorMessages.required,\n                pattern: {\n                  value: phoneRules.regex,\n                  message: phoneRules.errorMessages.pattern,\n                },\n                minLength: {\n                  value: phoneRules.minLength,\n                  message: phoneRules.errorMessages.length,\n                },\n                maxLength: {\n                  value: phoneRules.maxLength,\n                  message: phoneRules.errorMessages.length,\n                },\n              })}\n            />\n          </div>\n          <Button\n            id=\"add-phone-number\"\n            primary\n            className=\"px-10 mt-3 sm:mt-5\"\n            onClick={handleSubmit(onSubmit)}\n          >\n            Verify phone number\n          </Button>\n        </form>\n      </ProfileContainer>\n    </ProfileTemplate>\n  )\n}\n\nexport default ProfileAddPhoneNumber\n","import { useAtom } from \"jotai\"\nimport React from \"react\"\n\nimport { authState } from \"@nfid/integration\"\n\nimport { verifyPhoneNumber } from \"frontend/integration/lambda/phone\"\nimport ProfileAddPhoneNumber from \"frontend/ui/pages/new-profile/credentials/add-phone-number\"\nimport { useNFIDNavigate } from \"frontend/ui/utils/use-nfid-navigate\"\n\nimport { ProfileConstants } from \"../routes\"\nimport { phoneNumberAtom } from \"../state\"\n\nconst ProfilePhone = () => {\n  const [, setPhoneNumber] = useAtom(phoneNumberAtom)\n  const [isLoading, toggleLoading] = React.useReducer((s) => !s, false)\n  const [error, setError] = React.useState(\"\")\n  const { navigate } = useNFIDNavigate()\n  const { delegationIdentity } = authState.get()\n\n  const handleSubmitPhoneNumber = React.useCallback(\n    async ({ phone }: { phone: string }) => {\n      if (!delegationIdentity) throw new Error(\"User delegation is undefined\")\n      toggleLoading()\n\n      let response\n\n      try {\n        response = await verifyPhoneNumber(phone, delegationIdentity)\n        setPhoneNumber(phone)\n\n        return navigate(\n          `${ProfileConstants.base}/${ProfileConstants.credentials}/${ProfileConstants.verifySMS}`,\n        )\n      } catch (e: any) {\n        if (e.message) setError(e.message)\n        else setError(\"This phone number is already registered\")\n        console.debug(\"handleSubmitPhoneNumber\", e)\n      } finally {\n        toggleLoading()\n      }\n      return response\n    },\n    [delegationIdentity, navigate, setPhoneNumber],\n  )\n  return (\n    <ProfileAddPhoneNumber\n      onSubmit={handleSubmitPhoneNumber}\n      isLoading={isLoading}\n      responseError={error}\n      setResponseError={setError}\n    />\n  )\n}\n\nexport default ProfilePhone\n","import { atom } from \"jotai\"\n\nexport const phoneNumberAtom = atom<string | null>(null)\n","import { Cbor, QueryFields } from \"@dfinity/agent\"\nimport { IDL } from \"@dfinity/candid\"\nimport { toHexString } from \"@dfinity/candid/lib/cjs/utils/buffer\"\nimport { DelegationIdentity } from \"@dfinity/identity\"\nimport { Principal } from \"@dfinity/principal\"\nimport nacl from \"tweetnacl\"\nimport nacl_util from \"tweetnacl-util\"\n\nimport { ic } from \"@nfid/integration\"\n\nimport { getTransformedRequest } from \"frontend/integration/lambda/util/util\"\n\nif (!VERIFY_PHONE_NUMBER) {\n  throw new Error(`Phone verification lambda is not defined.`)\n}\n\nexport function verifySignature(\n  msg: string,\n  hexSignature: string,\n  principal: Principal,\n) {\n  const signature = Uint8Array.from(\n    (hexSignature.match(/.{1,2}/g) || []).map((byte) => parseInt(byte, 16)),\n  )\n  return nacl.sign.detached.verify(\n    nacl_util.decodeUTF8(msg),\n    signature,\n    principal.toUint8Array(),\n  )\n}\n\n/**\n * Send an SMS token for the user to validate. Associates phone number to principal on success.\n * @param phoneNumber\n * @param principal\n * @returns Empty object on success\n */\nexport async function verifyPhoneNumber(\n  phoneNumber: string,\n  identity: DelegationIdentity,\n): Promise<string> {\n  const url = ic.isLocal ? \"/verify\" : VERIFY_PHONE_NUMBER\n  const trimmed = phoneNumber.replace(/\\s/g, \"\")\n  const fields: QueryFields = {\n    methodName: \"validate_signature\",\n    arg: IDL.encode([IDL.Opt(IDL.Text)], [[trimmed]]),\n  }\n\n  const request: any = await getTransformedRequest(\n    identity,\n    IDENTITY_MANAGER_CANISTER_ID,\n    fields,\n  )\n\n  let body = Cbor.encode(request.body)\n  let str = toHexString(body)\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ message: str }),\n  })\n\n  console.debug(\"verifyPhoneNumber\", {\n    phoneNumber,\n    fields,\n    canister: IDENTITY_MANAGER_CANISTER_ID,\n    response,\n    principal: identity.getPrincipal().toText(),\n  })\n\n  if (!response.ok) {\n    const errorObject = await response.json().then((err) => err)\n    console.log({ errorObject })\n    throw Error(errorObject.error)\n  }\n\n  const data = await response.json()\n\n  return data.phoneNumberEncrypted\n}\n","import { Endpoint, Expiry, QueryFields, ReadRequest } from \"@dfinity/agent\"\nimport { DelegationIdentity } from \"@dfinity/identity\"\nimport { Principal } from \"@dfinity/principal\"\n\nconst DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS = 5 * 60 * 1000\n\nexport async function getTransformedRequest(\n  identity: DelegationIdentity,\n  canisterId: string,\n  fields: QueryFields,\n) {\n  const canister =\n    typeof canisterId === \"string\" ? Principal.fromText(canisterId) : canisterId\n  const sender = identity.getPrincipal()\n  const request = {\n    request_type: \"query\",\n    canister_id: canister,\n    method_name: fields.methodName,\n    arg: fields.arg,\n    sender,\n    ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),\n  } as ReadRequest\n  return await identity.transformRequest({\n    request: {\n      method: \"POST\",\n      headers: Object.assign({ \"Content-Type\": \"application/cbor\" }),\n    },\n    endpoint: \"query\" as Endpoint.Query,\n    body: request,\n  })\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface IProfileContainer {\n  title?: string | React.ReactNode\n  subTitle?: string | React.ReactNode\n  children?: React.ReactNode\n  className?: string\n  showChildrenPadding?: boolean\n  id?: string\n}\n\nconst ProfileContainer: React.FC<IProfileContainer> = ({\n  title,\n  subTitle,\n  children,\n  className,\n  showChildrenPadding = true,\n  id,\n}) => {\n  return (\n    <div\n      id={id}\n      className={clsx(\n        \"block border border-gray-200 rounded-xl\",\n        \"py-4 sm:py-[26px]\",\n        className,\n      )}\n    >\n      <div className=\"px-5\">\n        {title && (\n          <div className=\"flex items-center justify-between mb-3 text-xl\">\n            {title}\n          </div>\n        )}\n        {subTitle && (\n          <div className=\"flex items-center justify-between mb-4 text-sm leading-5 text-secondary\">\n            {subTitle}\n          </div>\n        )}\n      </div>\n\n      <div className={clsx(showChildrenPadding && \"px-5 sm:px-[30px]\")}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileContainer\n","import { useRef, useCallback } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport useConstant from './useConstant';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nexport function isActorWithState(actorRef) {\n    return 'state' in actorRef;\n}\nfunction isDeferredActor(actorRef) {\n    return 'deferred' in actorRef;\n}\nfunction defaultGetSnapshot(actorRef) {\n    return 'getSnapshot' in actorRef\n        ? actorRef.getSnapshot()\n        : isActorWithState(actorRef)\n            ? actorRef.state\n            : undefined;\n}\nexport function useActor(actorRef, getSnapshot) {\n    if (getSnapshot === void 0) { getSnapshot = defaultGetSnapshot; }\n    var actorRefRef = useRef(actorRef);\n    var deferredEventsRef = useRef([]);\n    var subscribe = useCallback(function (handleStoreChange) {\n        var unsubscribe = actorRef.subscribe(handleStoreChange).unsubscribe;\n        return unsubscribe;\n    }, [actorRef]);\n    var boundGetSnapshot = useCallback(function () { return getSnapshot(actorRef); }, [\n        actorRef,\n        getSnapshot\n    ]);\n    var storeSnapshot = useSyncExternalStore(subscribe, boundGetSnapshot, boundGetSnapshot);\n    var send = useConstant(function () { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var event = args[0];\n        if (process.env.NODE_ENV !== 'production' && args.length > 1) {\n            console.warn(\"Unexpected payload: \".concat(JSON.stringify(args[1]), \". Only a single event object can be sent to actor send() functions.\"));\n        }\n        var currentActorRef = actorRefRef.current;\n        // If the previous actor is a deferred actor,\n        // queue the events so that they can be replayed\n        // on the non-deferred actor.\n        if (isDeferredActor(currentActorRef) && currentActorRef.deferred) {\n            deferredEventsRef.current.push(event);\n        }\n        else {\n            currentActorRef.send(event);\n        }\n    }; });\n    useIsomorphicLayoutEffect(function () {\n        actorRefRef.current = actorRef;\n        // Dequeue deferred events from the previous deferred actorRef\n        while (deferredEventsRef.current.length > 0) {\n            var deferredEvent = deferredEventsRef.current.shift();\n            actorRef.send(deferredEvent);\n        }\n    }, [actorRef]);\n    return [storeSnapshot, send];\n}\n"],"names":["isLoading","onSubmit","responseError","setResponseError","formState","errors","register","handleSubmit","setError","useForm","mode","React","phone","message","pageTitle","showBackButton","className","clsx","href","target","rel","id","labelText","placeholder","errorText","onKeyUp","required","phoneRules","pattern","value","minLength","maxLength","primary","onClick","setPhoneNumber","useAtom","phoneNumberAtom","toggleLoading","s","error","navigate","useNFIDNavigate","delegationIdentity","authState","handleSubmitPhoneNumber","async","response","Error","verifyPhoneNumber","ProfileConstants","e","console","debug","atom","VERIFY_PHONE_NUMBER","phoneNumber","identity","url","ic","trimmed","replace","fields","methodName","arg","IDL","request","getTransformedRequest","IDENTITY_MANAGER_CANISTER_ID","body","Cbor","str","toHexString","fetch","method","headers","JSON","stringify","canister","principal","getPrincipal","toText","ok","errorObject","json","then","err","log","phoneNumberEncrypted","canisterId","Principal","sender","request_type","canister_id","method_name","ingress_expiry","Expiry","transformRequest","Object","assign","endpoint","title","subTitle","children","showChildrenPadding","isDeferredActor","actorRef","defaultGetSnapshot","getSnapshot","isActorWithState","state","undefined","useActor","actorRefRef","useRef","deferredEventsRef","subscribe","useCallback","handleStoreChange","unsubscribe","boundGetSnapshot","storeSnapshot","useSyncExternalStore","send","args","_i","arguments","length","event","currentActorRef","current","deferred","push","deferredEvent","shift"],"sourceRoot":""}