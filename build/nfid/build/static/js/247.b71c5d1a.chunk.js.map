{"version":3,"file":"static/js/247.b71c5d1a.chunk.js","mappings":"mJAUOA,eAAeC,EACpBC,EACAC,GAEA,IAAIC,QAAeC,EAAAA,EAAAA,IAAuBH,EAAYC,SAChDG,EAAAA,EAAAA,IAAkBF,EAC1B,CAEOJ,eAAeO,EACpBL,EACAE,SAEMI,EAAAA,EAAAA,IAAaN,EAAYE,SACzBE,EAAAA,EAAAA,IAAkBF,EAC1B,C,2KCpBA,MAAMK,EAAgB,CACpB,UACA,UACA,OACA,QACA,QACA,SACA,SACA,WACA,SACA,QACA,SACA,WACA,UACA,SACA,UACA,OACA,WACA,UACA,SACA,MACA,SACA,QACA,UACA,SACA,QACA,MACA,SACA,UACA,SACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,QACA,MACA,QACA,QACA,QACA,MACA,MACA,UACA,QACA,QACA,QACA,UACA,QACA,QACA,MACA,QACA,QACA,SACA,QACA,QACA,UACA,OACA,QACA,SACA,UACA,UACA,QACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,QACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,UACA,MACA,QACA,UACA,SACA,QACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,MACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,QACA,MACA,WACA,SACA,UACA,MACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,WACA,UACA,UACA,QACA,SACA,OACA,SACA,OACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,UACA,QACA,UACA,OACA,OACA,WACA,QACA,QACA,MACA,UACA,UACA,OACA,SACA,SACA,SACA,MACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,SACA,UACA,SACA,OACA,SACA,QACA,SACA,SACA,UACA,QACA,OACA,QACA,UACA,OACA,SACA,SACA,UACA,SACA,UACA,MACA,OACA,OACA,UACA,OACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,SACA,SACA,SACA,OACA,SACA,SACA,MACA,MACA,UACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,WACA,SACA,SACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,UACA,QACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,QACA,MACA,WACA,OACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,OACA,OACA,OACA,SACA,OACA,MACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,MACA,SACA,OACA,QACA,SACA,QACA,OACA,OACA,OACA,SACA,SACA,SACA,MACA,UACA,QACA,WACA,SACA,SACA,QACA,UACA,OACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,WACA,SACA,QACA,UACA,SACA,QACA,OACA,QACA,QACA,SACA,OACA,SACA,QACA,UACA,QACA,QACA,UACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,OACA,QACA,QACA,OACA,UACA,OACA,OACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,UACA,OACA,SACA,OACA,OACA,UACA,QACA,SACA,UACA,OACA,UACA,QACA,SACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,UACA,WACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,SACA,UACA,SACA,QACA,MACA,UACA,OACA,UACA,MACA,WACA,UACA,UACA,UACA,QACA,UACA,SACA,OACA,QACA,MACA,SACA,OACA,QACA,SACA,SACA,OACA,WACA,OACA,MACA,OACA,SACA,SACA,SACA,WACA,SACA,UACA,WACA,WACA,OACA,UACA,SACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,SACA,OACA,UACA,UACA,SACA,SACA,UACA,SACA,SACA,UACA,OACA,UACA,QACA,OACA,SACA,OACA,SACA,UACA,UACA,UACA,SACA,WACA,SACA,OACA,WACA,WACA,UACA,OACA,UACA,WACA,UACA,WACA,SACA,SACA,UACA,QACA,SACA,WACA,MACA,OACA,UACA,SACA,SACA,SACA,QACA,OACA,OACA,SACA,OACA,QACA,SACA,QACA,UACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,SACA,OACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,SACA,OACA,OACA,OACA,UACA,UACA,OACA,OACA,UACA,SACA,MACA,QACA,SACA,QACA,QACA,WACA,UACA,UACA,WACA,WACA,QACA,OACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,QACA,SACA,QACA,MACA,UACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,WACA,UACA,QACA,QACA,MACA,QACA,QACA,UACA,QACA,QACA,SACA,QACA,UACA,SACA,UACA,SACA,WACA,OACA,QACA,SACA,QACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,MACA,UACA,SACA,OACA,UACA,OACA,QACA,QACA,OACA,QACA,OACA,SACA,SACA,MACA,QACA,UACA,OACA,UACA,MACA,QACA,SACA,UACA,QACA,WACA,UACA,WACA,UACA,MACA,OACA,OACA,SACA,QACA,WACA,QACA,QACA,MACA,QACA,UACA,QACA,SACA,OACA,OACA,SACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,QACA,SACA,OACA,MACA,UACA,MACA,OACA,QACA,QACA,OACA,SACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,MACA,OACA,QACA,MACA,OACA,OACA,SACA,OACA,OACA,QACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,SACA,QACA,MACA,UACA,QACA,WACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,MACA,QACA,UACA,OACA,SACA,SACA,OACA,SACA,UACA,OACA,MACA,SACA,UACA,SACA,SACA,UACA,MACA,OACA,OACA,SACA,QACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,UACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,UACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,OACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,MACA,MACA,QACA,OACA,OACA,SACA,UACA,OACA,QACA,SACA,OACA,QACA,UACA,MACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,WACA,SACA,QACA,SACA,OACA,MACA,OACA,SACA,OACA,OACA,OACA,MACA,OACA,UACA,QACA,SACA,OACA,OACA,UACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,QACA,WACA,OACA,QACA,OACA,QACA,MACA,OACA,QACA,SACA,QACA,UACA,SACA,OACA,SACA,QACA,OACA,UACA,SACA,MACA,OACA,OACA,WACA,OACA,SACA,MACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,SACA,UACA,UACA,OACA,UACA,SACA,WACA,QACA,WACA,SACA,WACA,SACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,UACA,SACA,SACA,SACA,UACA,UACA,SACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,UACA,QACA,OACA,QACA,SACA,SACA,MACA,OACA,UACA,QACA,QACA,QACA,MACA,OACA,OACA,UACA,MACA,QACA,QACA,OACA,SACA,SACA,OACA,OACA,WACA,OACA,OACA,UACA,MACA,OACA,MACA,SACA,OACA,UACA,OACA,MACA,UACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,MACA,QACA,QACA,SACA,OACA,OACA,OACA,WACA,SACA,QACA,QACA,QACA,QACA,UACA,OACA,MACA,OACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,UACA,QACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,UACA,UACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,QACA,OACA,QACA,SACA,OACA,OACA,UACA,OACA,SACA,OACA,QACA,QACA,UACA,SACA,QACA,QACA,SACA,SACA,UACA,MACA,QACA,SACA,OACA,OACA,OACA,QACA,OACA,SACA,MACA,SACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,WACA,OACA,OACA,SACA,QACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,OACA,UACA,OACA,WACA,QACA,QACA,SACA,OACA,SACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,OACA,UACA,QACA,SACA,SACA,WACA,OACA,UACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,SACA,OACA,UACA,MACA,QACA,UACA,SACA,QACA,SACA,MACA,SACA,UACA,SACA,UACA,QACA,OACA,QACA,OACA,UACA,WACA,SACA,SACA,QACA,WACA,QACA,OACA,QACA,OACA,SACA,OACA,WACA,SACA,SACA,WACA,QACA,OACA,SACA,SACA,UACA,OACA,QACA,OACA,SACA,SACA,QACA,SACA,SACA,OACA,OACA,OACA,WACA,UACA,UACA,SACA,QACA,OACA,MACA,UACA,UACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,OACA,UACA,OACA,UACA,SACA,QACA,MACA,UACA,SACA,QACA,MACA,MACA,OACA,SACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,QACA,MACA,OACA,MACA,QACA,UACA,OACA,OACA,MACA,QACA,SACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,QACA,UACA,QACA,WACA,QACA,SACA,WACA,SACA,UACA,QACA,UACA,QACA,SACA,UACA,OACA,OACA,OACA,MACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,SACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,SACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,SACA,UACA,QACA,OACA,UACA,QACA,SACA,OACA,UACA,UACA,MACA,UACA,SACA,SACA,SACA,UACA,SACA,SACA,MACA,QACA,QACA,SACA,WACA,QACA,SACA,UACA,QACA,MACA,SACA,OACA,QACA,OACA,UACA,OACA,SACA,QACA,QACA,QACA,SACA,UACA,QACA,OACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,OACA,OACA,UACA,UACA,WACA,WACA,OACA,SACA,UACA,UACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,QACA,WACA,UACA,UACA,QACA,UACA,SACA,UACA,OACA,OACA,QACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,QACA,OACA,MACA,SACA,UACA,UACA,UACA,UACA,WACA,QACA,OACA,OACA,QACA,SACA,UACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,OACA,SACA,QACA,MACA,QACA,QACA,OACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,OACA,SACA,WACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,WACA,SACA,WACA,WACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,MACA,SACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,UACA,OACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,MACA,SACA,UACA,OACA,OACA,QACA,SACA,QACA,OACA,SACA,OACA,SACA,OACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,UACA,QACA,SACA,SACA,UACA,WACA,WACA,QACA,QACA,SACA,SACA,QACA,MACA,SACA,SACA,OACA,SACA,SACA,UACA,WACA,OACA,OACA,UACA,SACA,OACA,UACA,SACA,QACA,WACA,SACA,UACA,UACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,QACA,WACA,QACA,SACA,QACA,UACA,MACA,UACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,UACA,SACA,QACA,OACA,QACA,SACA,UACA,MACA,OACA,QACA,SACA,MACA,QACA,OACA,QACA,QACA,OACA,OACA,QACA,UACA,QACA,QACA,SACA,OACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,OACA,QACA,UACA,QACA,WACA,QACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,SACA,MACA,SACA,UACA,WACA,SACA,UACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,WACA,SACA,SACA,SACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,SACA,UACA,OACA,SACA,SACA,QACA,UACA,OACA,SACA,MACA,QACA,SACA,QACA,SACA,UACA,OACA,UACA,QACA,WACA,WACA,SACA,UACA,UACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,OACA,OACA,OACA,SACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,MACA,SACA,SACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,QACA,SACA,QACA,QACA,UACA,SACA,OACA,QACA,OACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,QACA,UACA,QACA,UACA,MACA,WACA,SACA,QACA,SACA,WACA,OACA,SACA,UACA,OACA,QACA,MACA,QACA,SACA,QACA,UACA,WACA,OACA,QACA,UACA,SACA,QACA,OACA,MACA,QACA,QACA,UACA,SACA,QACA,WACA,OACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,UACA,OACA,OACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,QACA,MACA,OACA,UACA,SACA,OACA,SACA,SACA,OACA,SACA,SACA,SACA,QACA,OACA,QACA,MACA,OACA,UACA,OACA,WACA,SACA,UACA,QACA,UACA,QACA,OACA,SACA,SACA,UACA,UACA,SACA,OACA,WACA,UACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,OACA,QACA,QACA,QACA,OACA,QACA,MACA,OACA,SACA,UACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,MACA,SACA,QACA,UACA,OACA,QACA,UACA,SACA,SACA,UACA,QACA,OACA,SACA,UACA,OACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,OACA,UACA,UACA,SACA,UACA,QACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,UACA,SACA,OACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,OACA,UACA,OACA,UACA,OACA,OACA,QACA,QACA,OACA,MACA,SACA,SACA,OACA,SACA,UACA,MACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,UACA,OACA,QACA,OACA,OACA,OACA,MACA,SACA,OACA,OACA,OACA,SACA,SACA,OACA,SACA,OACA,OACA,UACA,OACA,QACA,SACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,OACA,SACA,MACA,QACA,QACA,QACA,OACA,OACA,OAQK,SAASC,IACd,MAAMC,EAAU,IAAIC,YAAY,IAEhC,OADAC,OAAOC,gBAAgBH,IAChBI,EAAAA,EAAAA,KAAkBC,EAAAA,EAAAA,IAAYL,GAAUF,EACjD,C,oCCr+DA,MAAMQ,EAAWC,IACf,OAAQA,EAAOC,MAAMC,MAAM,KAAK,IAC9B,IAAK,UACL,IAAK,MACH,MAAO,SACT,IAAK,SACH,MAAO,UACT,QACE,MAAO,SAAQ,EAIfC,EAAcH,GACXA,EAAOC,MAAMG,QAAQ,OAAQ,IAAIF,MAAM,QAAQ,GAGlDG,EAAiBL,GACdA,EAAOC,MAAMG,QAAQ,OAAQ,IAAIF,M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","sources":["integration/facade/index.ts","integration/internet-identity/crypto/mnemonic.ts","integration/identity-manager/devices/hooks.ts","integration/identity/index.ts"],"sourcesContent":["import {\n  DeviceKey,\n  UserNumber,\n} from \"frontend/integration/_ic_api/internet_identity.d\"\nimport { removeAccessPoint } from \"frontend/integration/identity-manager\"\nimport {\n  removeDevice,\n  removeRecoveryDeviceII,\n} from \"frontend/integration/internet-identity\"\n\nexport async function removeRecoveryDeviceFacade(\n  userNumber: UserNumber,\n  seedPhrase: string,\n): Promise<void> {\n  let pubKey = await removeRecoveryDeviceII(userNumber, seedPhrase)\n  await removeAccessPoint(pubKey)\n}\n\nexport async function removeAccessPointFacade(\n  userNumber: UserNumber,\n  pubKey: DeviceKey,\n): Promise<void> {\n  await removeDevice(userNumber, pubKey)\n  await removeAccessPoint(pubKey)\n}\n","import { toHexString } from \"@dfinity/candid/lib/cjs/utils/buffer\"\nimport { entropyToMnemonic, validateMnemonic } from \"bip39\"\n\n// TODO: find a better way to do this\nconst ENGLISH_WORDS = [\n  \"abandon\",\n  \"ability\",\n  \"able\",\n  \"about\",\n  \"above\",\n  \"absent\",\n  \"absorb\",\n  \"abstract\",\n  \"absurd\",\n  \"abuse\",\n  \"access\",\n  \"accident\",\n  \"account\",\n  \"accuse\",\n  \"achieve\",\n  \"acid\",\n  \"acoustic\",\n  \"acquire\",\n  \"across\",\n  \"act\",\n  \"action\",\n  \"actor\",\n  \"actress\",\n  \"actual\",\n  \"adapt\",\n  \"add\",\n  \"addict\",\n  \"address\",\n  \"adjust\",\n  \"admit\",\n  \"adult\",\n  \"advance\",\n  \"advice\",\n  \"aerobic\",\n  \"affair\",\n  \"afford\",\n  \"afraid\",\n  \"again\",\n  \"age\",\n  \"agent\",\n  \"agree\",\n  \"ahead\",\n  \"aim\",\n  \"air\",\n  \"airport\",\n  \"aisle\",\n  \"alarm\",\n  \"album\",\n  \"alcohol\",\n  \"alert\",\n  \"alien\",\n  \"all\",\n  \"alley\",\n  \"allow\",\n  \"almost\",\n  \"alone\",\n  \"alpha\",\n  \"already\",\n  \"also\",\n  \"alter\",\n  \"always\",\n  \"amateur\",\n  \"amazing\",\n  \"among\",\n  \"amount\",\n  \"amused\",\n  \"analyst\",\n  \"anchor\",\n  \"ancient\",\n  \"anger\",\n  \"angle\",\n  \"angry\",\n  \"animal\",\n  \"ankle\",\n  \"announce\",\n  \"annual\",\n  \"another\",\n  \"answer\",\n  \"antenna\",\n  \"antique\",\n  \"anxiety\",\n  \"any\",\n  \"apart\",\n  \"apology\",\n  \"appear\",\n  \"apple\",\n  \"approve\",\n  \"april\",\n  \"arch\",\n  \"arctic\",\n  \"area\",\n  \"arena\",\n  \"argue\",\n  \"arm\",\n  \"armed\",\n  \"armor\",\n  \"army\",\n  \"around\",\n  \"arrange\",\n  \"arrest\",\n  \"arrive\",\n  \"arrow\",\n  \"art\",\n  \"artefact\",\n  \"artist\",\n  \"artwork\",\n  \"ask\",\n  \"aspect\",\n  \"assault\",\n  \"asset\",\n  \"assist\",\n  \"assume\",\n  \"asthma\",\n  \"athlete\",\n  \"atom\",\n  \"attack\",\n  \"attend\",\n  \"attitude\",\n  \"attract\",\n  \"auction\",\n  \"audit\",\n  \"august\",\n  \"aunt\",\n  \"author\",\n  \"auto\",\n  \"autumn\",\n  \"average\",\n  \"avocado\",\n  \"avoid\",\n  \"awake\",\n  \"aware\",\n  \"away\",\n  \"awesome\",\n  \"awful\",\n  \"awkward\",\n  \"axis\",\n  \"baby\",\n  \"bachelor\",\n  \"bacon\",\n  \"badge\",\n  \"bag\",\n  \"balance\",\n  \"balcony\",\n  \"ball\",\n  \"bamboo\",\n  \"banana\",\n  \"banner\",\n  \"bar\",\n  \"barely\",\n  \"bargain\",\n  \"barrel\",\n  \"base\",\n  \"basic\",\n  \"basket\",\n  \"battle\",\n  \"beach\",\n  \"bean\",\n  \"beauty\",\n  \"because\",\n  \"become\",\n  \"beef\",\n  \"before\",\n  \"begin\",\n  \"behave\",\n  \"behind\",\n  \"believe\",\n  \"below\",\n  \"belt\",\n  \"bench\",\n  \"benefit\",\n  \"best\",\n  \"betray\",\n  \"better\",\n  \"between\",\n  \"beyond\",\n  \"bicycle\",\n  \"bid\",\n  \"bike\",\n  \"bind\",\n  \"biology\",\n  \"bird\",\n  \"birth\",\n  \"bitter\",\n  \"black\",\n  \"blade\",\n  \"blame\",\n  \"blanket\",\n  \"blast\",\n  \"bleak\",\n  \"bless\",\n  \"blind\",\n  \"blood\",\n  \"blossom\",\n  \"blouse\",\n  \"blue\",\n  \"blur\",\n  \"blush\",\n  \"board\",\n  \"boat\",\n  \"body\",\n  \"boil\",\n  \"bomb\",\n  \"bone\",\n  \"bonus\",\n  \"book\",\n  \"boost\",\n  \"border\",\n  \"boring\",\n  \"borrow\",\n  \"boss\",\n  \"bottom\",\n  \"bounce\",\n  \"box\",\n  \"boy\",\n  \"bracket\",\n  \"brain\",\n  \"brand\",\n  \"brass\",\n  \"brave\",\n  \"bread\",\n  \"breeze\",\n  \"brick\",\n  \"bridge\",\n  \"brief\",\n  \"bright\",\n  \"bring\",\n  \"brisk\",\n  \"broccoli\",\n  \"broken\",\n  \"bronze\",\n  \"broom\",\n  \"brother\",\n  \"brown\",\n  \"brush\",\n  \"bubble\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"build\",\n  \"bulb\",\n  \"bulk\",\n  \"bullet\",\n  \"bundle\",\n  \"bunker\",\n  \"burden\",\n  \"burger\",\n  \"burst\",\n  \"bus\",\n  \"business\",\n  \"busy\",\n  \"butter\",\n  \"buyer\",\n  \"buzz\",\n  \"cabbage\",\n  \"cabin\",\n  \"cable\",\n  \"cactus\",\n  \"cage\",\n  \"cake\",\n  \"call\",\n  \"calm\",\n  \"camera\",\n  \"camp\",\n  \"can\",\n  \"canal\",\n  \"cancel\",\n  \"candy\",\n  \"cannon\",\n  \"canoe\",\n  \"canvas\",\n  \"canyon\",\n  \"capable\",\n  \"capital\",\n  \"captain\",\n  \"car\",\n  \"carbon\",\n  \"card\",\n  \"cargo\",\n  \"carpet\",\n  \"carry\",\n  \"cart\",\n  \"case\",\n  \"cash\",\n  \"casino\",\n  \"castle\",\n  \"casual\",\n  \"cat\",\n  \"catalog\",\n  \"catch\",\n  \"category\",\n  \"cattle\",\n  \"caught\",\n  \"cause\",\n  \"caution\",\n  \"cave\",\n  \"ceiling\",\n  \"celery\",\n  \"cement\",\n  \"census\",\n  \"century\",\n  \"cereal\",\n  \"certain\",\n  \"chair\",\n  \"chalk\",\n  \"champion\",\n  \"change\",\n  \"chaos\",\n  \"chapter\",\n  \"charge\",\n  \"chase\",\n  \"chat\",\n  \"cheap\",\n  \"check\",\n  \"cheese\",\n  \"chef\",\n  \"cherry\",\n  \"chest\",\n  \"chicken\",\n  \"chief\",\n  \"child\",\n  \"chimney\",\n  \"choice\",\n  \"choose\",\n  \"chronic\",\n  \"chuckle\",\n  \"chunk\",\n  \"churn\",\n  \"cigar\",\n  \"cinnamon\",\n  \"circle\",\n  \"citizen\",\n  \"city\",\n  \"civil\",\n  \"claim\",\n  \"clap\",\n  \"clarify\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clerk\",\n  \"clever\",\n  \"click\",\n  \"client\",\n  \"cliff\",\n  \"climb\",\n  \"clinic\",\n  \"clip\",\n  \"clock\",\n  \"clog\",\n  \"close\",\n  \"cloth\",\n  \"cloud\",\n  \"clown\",\n  \"club\",\n  \"clump\",\n  \"cluster\",\n  \"clutch\",\n  \"coach\",\n  \"coast\",\n  \"coconut\",\n  \"code\",\n  \"coffee\",\n  \"coil\",\n  \"coin\",\n  \"collect\",\n  \"color\",\n  \"column\",\n  \"combine\",\n  \"come\",\n  \"comfort\",\n  \"comic\",\n  \"common\",\n  \"company\",\n  \"concert\",\n  \"conduct\",\n  \"confirm\",\n  \"congress\",\n  \"connect\",\n  \"consider\",\n  \"control\",\n  \"convince\",\n  \"cook\",\n  \"cool\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"core\",\n  \"corn\",\n  \"correct\",\n  \"cost\",\n  \"cotton\",\n  \"couch\",\n  \"country\",\n  \"couple\",\n  \"course\",\n  \"cousin\",\n  \"cover\",\n  \"coyote\",\n  \"crack\",\n  \"cradle\",\n  \"craft\",\n  \"cram\",\n  \"crane\",\n  \"crash\",\n  \"crater\",\n  \"crawl\",\n  \"crazy\",\n  \"cream\",\n  \"credit\",\n  \"creek\",\n  \"crew\",\n  \"cricket\",\n  \"crime\",\n  \"crisp\",\n  \"critic\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crowd\",\n  \"crucial\",\n  \"cruel\",\n  \"cruise\",\n  \"crumble\",\n  \"crunch\",\n  \"crush\",\n  \"cry\",\n  \"crystal\",\n  \"cube\",\n  \"culture\",\n  \"cup\",\n  \"cupboard\",\n  \"curious\",\n  \"current\",\n  \"curtain\",\n  \"curve\",\n  \"cushion\",\n  \"custom\",\n  \"cute\",\n  \"cycle\",\n  \"dad\",\n  \"damage\",\n  \"damp\",\n  \"dance\",\n  \"danger\",\n  \"daring\",\n  \"dash\",\n  \"daughter\",\n  \"dawn\",\n  \"day\",\n  \"deal\",\n  \"debate\",\n  \"debris\",\n  \"decade\",\n  \"december\",\n  \"decide\",\n  \"decline\",\n  \"decorate\",\n  \"decrease\",\n  \"deer\",\n  \"defense\",\n  \"define\",\n  \"defy\",\n  \"degree\",\n  \"delay\",\n  \"deliver\",\n  \"demand\",\n  \"demise\",\n  \"denial\",\n  \"dentist\",\n  \"deny\",\n  \"depart\",\n  \"depend\",\n  \"deposit\",\n  \"depth\",\n  \"deputy\",\n  \"derive\",\n  \"describe\",\n  \"desert\",\n  \"design\",\n  \"desk\",\n  \"despair\",\n  \"destroy\",\n  \"detail\",\n  \"detect\",\n  \"develop\",\n  \"device\",\n  \"devote\",\n  \"diagram\",\n  \"dial\",\n  \"diamond\",\n  \"diary\",\n  \"dice\",\n  \"diesel\",\n  \"diet\",\n  \"differ\",\n  \"digital\",\n  \"dignity\",\n  \"dilemma\",\n  \"dinner\",\n  \"dinosaur\",\n  \"direct\",\n  \"dirt\",\n  \"disagree\",\n  \"discover\",\n  \"disease\",\n  \"dish\",\n  \"dismiss\",\n  \"disorder\",\n  \"display\",\n  \"distance\",\n  \"divert\",\n  \"divide\",\n  \"divorce\",\n  \"dizzy\",\n  \"doctor\",\n  \"document\",\n  \"dog\",\n  \"doll\",\n  \"dolphin\",\n  \"domain\",\n  \"donate\",\n  \"donkey\",\n  \"donor\",\n  \"door\",\n  \"dose\",\n  \"double\",\n  \"dove\",\n  \"draft\",\n  \"dragon\",\n  \"drama\",\n  \"drastic\",\n  \"draw\",\n  \"dream\",\n  \"dress\",\n  \"drift\",\n  \"drill\",\n  \"drink\",\n  \"drip\",\n  \"drive\",\n  \"drop\",\n  \"drum\",\n  \"dry\",\n  \"duck\",\n  \"dumb\",\n  \"dune\",\n  \"during\",\n  \"dust\",\n  \"dutch\",\n  \"duty\",\n  \"dwarf\",\n  \"dynamic\",\n  \"eager\",\n  \"eagle\",\n  \"early\",\n  \"earn\",\n  \"earth\",\n  \"easily\",\n  \"east\",\n  \"easy\",\n  \"echo\",\n  \"ecology\",\n  \"economy\",\n  \"edge\",\n  \"edit\",\n  \"educate\",\n  \"effort\",\n  \"egg\",\n  \"eight\",\n  \"either\",\n  \"elbow\",\n  \"elder\",\n  \"electric\",\n  \"elegant\",\n  \"element\",\n  \"elephant\",\n  \"elevator\",\n  \"elite\",\n  \"else\",\n  \"embark\",\n  \"embody\",\n  \"embrace\",\n  \"emerge\",\n  \"emotion\",\n  \"employ\",\n  \"empower\",\n  \"empty\",\n  \"enable\",\n  \"enact\",\n  \"end\",\n  \"endless\",\n  \"endorse\",\n  \"enemy\",\n  \"energy\",\n  \"enforce\",\n  \"engage\",\n  \"engine\",\n  \"enhance\",\n  \"enjoy\",\n  \"enlist\",\n  \"enough\",\n  \"enrich\",\n  \"enroll\",\n  \"ensure\",\n  \"enter\",\n  \"entire\",\n  \"entry\",\n  \"envelope\",\n  \"episode\",\n  \"equal\",\n  \"equip\",\n  \"era\",\n  \"erase\",\n  \"erode\",\n  \"erosion\",\n  \"error\",\n  \"erupt\",\n  \"escape\",\n  \"essay\",\n  \"essence\",\n  \"estate\",\n  \"eternal\",\n  \"ethics\",\n  \"evidence\",\n  \"evil\",\n  \"evoke\",\n  \"evolve\",\n  \"exact\",\n  \"example\",\n  \"excess\",\n  \"exchange\",\n  \"excite\",\n  \"exclude\",\n  \"excuse\",\n  \"execute\",\n  \"exercise\",\n  \"exhaust\",\n  \"exhibit\",\n  \"exile\",\n  \"exist\",\n  \"exit\",\n  \"exotic\",\n  \"expand\",\n  \"expect\",\n  \"expire\",\n  \"explain\",\n  \"expose\",\n  \"express\",\n  \"extend\",\n  \"extra\",\n  \"eye\",\n  \"eyebrow\",\n  \"fabric\",\n  \"face\",\n  \"faculty\",\n  \"fade\",\n  \"faint\",\n  \"faith\",\n  \"fall\",\n  \"false\",\n  \"fame\",\n  \"family\",\n  \"famous\",\n  \"fan\",\n  \"fancy\",\n  \"fantasy\",\n  \"farm\",\n  \"fashion\",\n  \"fat\",\n  \"fatal\",\n  \"father\",\n  \"fatigue\",\n  \"fault\",\n  \"favorite\",\n  \"feature\",\n  \"february\",\n  \"federal\",\n  \"fee\",\n  \"feed\",\n  \"feel\",\n  \"female\",\n  \"fence\",\n  \"festival\",\n  \"fetch\",\n  \"fever\",\n  \"few\",\n  \"fiber\",\n  \"fiction\",\n  \"field\",\n  \"figure\",\n  \"file\",\n  \"film\",\n  \"filter\",\n  \"final\",\n  \"find\",\n  \"fine\",\n  \"finger\",\n  \"finish\",\n  \"fire\",\n  \"firm\",\n  \"first\",\n  \"fiscal\",\n  \"fish\",\n  \"fit\",\n  \"fitness\",\n  \"fix\",\n  \"flag\",\n  \"flame\",\n  \"flash\",\n  \"flat\",\n  \"flavor\",\n  \"flee\",\n  \"flight\",\n  \"flip\",\n  \"float\",\n  \"flock\",\n  \"floor\",\n  \"flower\",\n  \"fluid\",\n  \"flush\",\n  \"fly\",\n  \"foam\",\n  \"focus\",\n  \"fog\",\n  \"foil\",\n  \"fold\",\n  \"follow\",\n  \"food\",\n  \"foot\",\n  \"force\",\n  \"forest\",\n  \"forget\",\n  \"fork\",\n  \"fortune\",\n  \"forum\",\n  \"forward\",\n  \"fossil\",\n  \"foster\",\n  \"found\",\n  \"fox\",\n  \"fragile\",\n  \"frame\",\n  \"frequent\",\n  \"fresh\",\n  \"friend\",\n  \"fringe\",\n  \"frog\",\n  \"front\",\n  \"frost\",\n  \"frown\",\n  \"frozen\",\n  \"fruit\",\n  \"fuel\",\n  \"fun\",\n  \"funny\",\n  \"furnace\",\n  \"fury\",\n  \"future\",\n  \"gadget\",\n  \"gain\",\n  \"galaxy\",\n  \"gallery\",\n  \"game\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"garlic\",\n  \"garment\",\n  \"gas\",\n  \"gasp\",\n  \"gate\",\n  \"gather\",\n  \"gauge\",\n  \"gaze\",\n  \"general\",\n  \"genius\",\n  \"genre\",\n  \"gentle\",\n  \"genuine\",\n  \"gesture\",\n  \"ghost\",\n  \"giant\",\n  \"gift\",\n  \"giggle\",\n  \"ginger\",\n  \"giraffe\",\n  \"girl\",\n  \"give\",\n  \"glad\",\n  \"glance\",\n  \"glare\",\n  \"glass\",\n  \"glide\",\n  \"glimpse\",\n  \"globe\",\n  \"gloom\",\n  \"glory\",\n  \"glove\",\n  \"glow\",\n  \"glue\",\n  \"goat\",\n  \"goddess\",\n  \"gold\",\n  \"good\",\n  \"goose\",\n  \"gorilla\",\n  \"gospel\",\n  \"gossip\",\n  \"govern\",\n  \"gown\",\n  \"grab\",\n  \"grace\",\n  \"grain\",\n  \"grant\",\n  \"grape\",\n  \"grass\",\n  \"gravity\",\n  \"great\",\n  \"green\",\n  \"grid\",\n  \"grief\",\n  \"grit\",\n  \"grocery\",\n  \"group\",\n  \"grow\",\n  \"grunt\",\n  \"guard\",\n  \"guess\",\n  \"guide\",\n  \"guilt\",\n  \"guitar\",\n  \"gun\",\n  \"gym\",\n  \"habit\",\n  \"hair\",\n  \"half\",\n  \"hammer\",\n  \"hamster\",\n  \"hand\",\n  \"happy\",\n  \"harbor\",\n  \"hard\",\n  \"harsh\",\n  \"harvest\",\n  \"hat\",\n  \"have\",\n  \"hawk\",\n  \"hazard\",\n  \"head\",\n  \"health\",\n  \"heart\",\n  \"heavy\",\n  \"hedgehog\",\n  \"height\",\n  \"hello\",\n  \"helmet\",\n  \"help\",\n  \"hen\",\n  \"hero\",\n  \"hidden\",\n  \"high\",\n  \"hill\",\n  \"hint\",\n  \"hip\",\n  \"hire\",\n  \"history\",\n  \"hobby\",\n  \"hockey\",\n  \"hold\",\n  \"hole\",\n  \"holiday\",\n  \"hollow\",\n  \"home\",\n  \"honey\",\n  \"hood\",\n  \"hope\",\n  \"horn\",\n  \"horror\",\n  \"horse\",\n  \"hospital\",\n  \"host\",\n  \"hotel\",\n  \"hour\",\n  \"hover\",\n  \"hub\",\n  \"huge\",\n  \"human\",\n  \"humble\",\n  \"humor\",\n  \"hundred\",\n  \"hungry\",\n  \"hunt\",\n  \"hurdle\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hybrid\",\n  \"ice\",\n  \"icon\",\n  \"idea\",\n  \"identify\",\n  \"idle\",\n  \"ignore\",\n  \"ill\",\n  \"illegal\",\n  \"illness\",\n  \"image\",\n  \"imitate\",\n  \"immense\",\n  \"immune\",\n  \"impact\",\n  \"impose\",\n  \"improve\",\n  \"impulse\",\n  \"inch\",\n  \"include\",\n  \"income\",\n  \"increase\",\n  \"index\",\n  \"indicate\",\n  \"indoor\",\n  \"industry\",\n  \"infant\",\n  \"inflict\",\n  \"inform\",\n  \"inhale\",\n  \"inherit\",\n  \"initial\",\n  \"inject\",\n  \"injury\",\n  \"inmate\",\n  \"inner\",\n  \"innocent\",\n  \"input\",\n  \"inquiry\",\n  \"insane\",\n  \"insect\",\n  \"inside\",\n  \"inspire\",\n  \"install\",\n  \"intact\",\n  \"interest\",\n  \"into\",\n  \"invest\",\n  \"invite\",\n  \"involve\",\n  \"iron\",\n  \"island\",\n  \"isolate\",\n  \"issue\",\n  \"item\",\n  \"ivory\",\n  \"jacket\",\n  \"jaguar\",\n  \"jar\",\n  \"jazz\",\n  \"jealous\",\n  \"jeans\",\n  \"jelly\",\n  \"jewel\",\n  \"job\",\n  \"join\",\n  \"joke\",\n  \"journey\",\n  \"joy\",\n  \"judge\",\n  \"juice\",\n  \"jump\",\n  \"jungle\",\n  \"junior\",\n  \"junk\",\n  \"just\",\n  \"kangaroo\",\n  \"keen\",\n  \"keep\",\n  \"ketchup\",\n  \"key\",\n  \"kick\",\n  \"kid\",\n  \"kidney\",\n  \"kind\",\n  \"kingdom\",\n  \"kiss\",\n  \"kit\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kiwi\",\n  \"knee\",\n  \"knife\",\n  \"knock\",\n  \"know\",\n  \"lab\",\n  \"label\",\n  \"labor\",\n  \"ladder\",\n  \"lady\",\n  \"lake\",\n  \"lamp\",\n  \"language\",\n  \"laptop\",\n  \"large\",\n  \"later\",\n  \"latin\",\n  \"laugh\",\n  \"laundry\",\n  \"lava\",\n  \"law\",\n  \"lawn\",\n  \"lawsuit\",\n  \"layer\",\n  \"lazy\",\n  \"leader\",\n  \"leaf\",\n  \"learn\",\n  \"leave\",\n  \"lecture\",\n  \"left\",\n  \"leg\",\n  \"legal\",\n  \"legend\",\n  \"leisure\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"leopard\",\n  \"lesson\",\n  \"letter\",\n  \"level\",\n  \"liar\",\n  \"liberty\",\n  \"library\",\n  \"license\",\n  \"life\",\n  \"lift\",\n  \"light\",\n  \"like\",\n  \"limb\",\n  \"limit\",\n  \"link\",\n  \"lion\",\n  \"liquid\",\n  \"list\",\n  \"little\",\n  \"live\",\n  \"lizard\",\n  \"load\",\n  \"loan\",\n  \"lobster\",\n  \"local\",\n  \"lock\",\n  \"logic\",\n  \"lonely\",\n  \"long\",\n  \"loop\",\n  \"lottery\",\n  \"loud\",\n  \"lounge\",\n  \"love\",\n  \"loyal\",\n  \"lucky\",\n  \"luggage\",\n  \"lumber\",\n  \"lunar\",\n  \"lunch\",\n  \"luxury\",\n  \"lyrics\",\n  \"machine\",\n  \"mad\",\n  \"magic\",\n  \"magnet\",\n  \"maid\",\n  \"mail\",\n  \"main\",\n  \"major\",\n  \"make\",\n  \"mammal\",\n  \"man\",\n  \"manage\",\n  \"mandate\",\n  \"mango\",\n  \"mansion\",\n  \"manual\",\n  \"maple\",\n  \"marble\",\n  \"march\",\n  \"margin\",\n  \"marine\",\n  \"market\",\n  \"marriage\",\n  \"mask\",\n  \"mass\",\n  \"master\",\n  \"match\",\n  \"material\",\n  \"math\",\n  \"matrix\",\n  \"matter\",\n  \"maximum\",\n  \"maze\",\n  \"meadow\",\n  \"mean\",\n  \"measure\",\n  \"meat\",\n  \"mechanic\",\n  \"medal\",\n  \"media\",\n  \"melody\",\n  \"melt\",\n  \"member\",\n  \"memory\",\n  \"mention\",\n  \"menu\",\n  \"mercy\",\n  \"merge\",\n  \"merit\",\n  \"merry\",\n  \"mesh\",\n  \"message\",\n  \"metal\",\n  \"method\",\n  \"middle\",\n  \"midnight\",\n  \"milk\",\n  \"million\",\n  \"mimic\",\n  \"mind\",\n  \"minimum\",\n  \"minor\",\n  \"minute\",\n  \"miracle\",\n  \"mirror\",\n  \"misery\",\n  \"miss\",\n  \"mistake\",\n  \"mix\",\n  \"mixed\",\n  \"mixture\",\n  \"mobile\",\n  \"model\",\n  \"modify\",\n  \"mom\",\n  \"moment\",\n  \"monitor\",\n  \"monkey\",\n  \"monster\",\n  \"month\",\n  \"moon\",\n  \"moral\",\n  \"more\",\n  \"morning\",\n  \"mosquito\",\n  \"mother\",\n  \"motion\",\n  \"motor\",\n  \"mountain\",\n  \"mouse\",\n  \"move\",\n  \"movie\",\n  \"much\",\n  \"muffin\",\n  \"mule\",\n  \"multiply\",\n  \"muscle\",\n  \"museum\",\n  \"mushroom\",\n  \"music\",\n  \"must\",\n  \"mutual\",\n  \"myself\",\n  \"mystery\",\n  \"myth\",\n  \"naive\",\n  \"name\",\n  \"napkin\",\n  \"narrow\",\n  \"nasty\",\n  \"nation\",\n  \"nature\",\n  \"near\",\n  \"neck\",\n  \"need\",\n  \"negative\",\n  \"neglect\",\n  \"neither\",\n  \"nephew\",\n  \"nerve\",\n  \"nest\",\n  \"net\",\n  \"network\",\n  \"neutral\",\n  \"never\",\n  \"news\",\n  \"next\",\n  \"nice\",\n  \"night\",\n  \"noble\",\n  \"noise\",\n  \"nominee\",\n  \"noodle\",\n  \"normal\",\n  \"north\",\n  \"nose\",\n  \"notable\",\n  \"note\",\n  \"nothing\",\n  \"notice\",\n  \"novel\",\n  \"now\",\n  \"nuclear\",\n  \"number\",\n  \"nurse\",\n  \"nut\",\n  \"oak\",\n  \"obey\",\n  \"object\",\n  \"oblige\",\n  \"obscure\",\n  \"observe\",\n  \"obtain\",\n  \"obvious\",\n  \"occur\",\n  \"ocean\",\n  \"october\",\n  \"odor\",\n  \"off\",\n  \"offer\",\n  \"office\",\n  \"often\",\n  \"oil\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympic\",\n  \"omit\",\n  \"once\",\n  \"one\",\n  \"onion\",\n  \"online\",\n  \"only\",\n  \"open\",\n  \"opera\",\n  \"opinion\",\n  \"oppose\",\n  \"option\",\n  \"orange\",\n  \"orbit\",\n  \"orchard\",\n  \"order\",\n  \"ordinary\",\n  \"organ\",\n  \"orient\",\n  \"original\",\n  \"orphan\",\n  \"ostrich\",\n  \"other\",\n  \"outdoor\",\n  \"outer\",\n  \"output\",\n  \"outside\",\n  \"oval\",\n  \"oven\",\n  \"over\",\n  \"own\",\n  \"owner\",\n  \"oxygen\",\n  \"oyster\",\n  \"ozone\",\n  \"pact\",\n  \"paddle\",\n  \"page\",\n  \"pair\",\n  \"palace\",\n  \"palm\",\n  \"panda\",\n  \"panel\",\n  \"panic\",\n  \"panther\",\n  \"paper\",\n  \"parade\",\n  \"parent\",\n  \"park\",\n  \"parrot\",\n  \"party\",\n  \"pass\",\n  \"patch\",\n  \"path\",\n  \"patient\",\n  \"patrol\",\n  \"pattern\",\n  \"pause\",\n  \"pave\",\n  \"payment\",\n  \"peace\",\n  \"peanut\",\n  \"pear\",\n  \"peasant\",\n  \"pelican\",\n  \"pen\",\n  \"penalty\",\n  \"pencil\",\n  \"people\",\n  \"pepper\",\n  \"perfect\",\n  \"permit\",\n  \"person\",\n  \"pet\",\n  \"phone\",\n  \"photo\",\n  \"phrase\",\n  \"physical\",\n  \"piano\",\n  \"picnic\",\n  \"picture\",\n  \"piece\",\n  \"pig\",\n  \"pigeon\",\n  \"pill\",\n  \"pilot\",\n  \"pink\",\n  \"pioneer\",\n  \"pipe\",\n  \"pistol\",\n  \"pitch\",\n  \"pizza\",\n  \"place\",\n  \"planet\",\n  \"plastic\",\n  \"plate\",\n  \"play\",\n  \"please\",\n  \"pledge\",\n  \"pluck\",\n  \"plug\",\n  \"plunge\",\n  \"poem\",\n  \"poet\",\n  \"point\",\n  \"polar\",\n  \"pole\",\n  \"police\",\n  \"pond\",\n  \"pony\",\n  \"pool\",\n  \"popular\",\n  \"portion\",\n  \"position\",\n  \"possible\",\n  \"post\",\n  \"potato\",\n  \"pottery\",\n  \"poverty\",\n  \"powder\",\n  \"power\",\n  \"practice\",\n  \"praise\",\n  \"predict\",\n  \"prefer\",\n  \"prepare\",\n  \"present\",\n  \"pretty\",\n  \"prevent\",\n  \"price\",\n  \"pride\",\n  \"primary\",\n  \"print\",\n  \"priority\",\n  \"prison\",\n  \"private\",\n  \"prize\",\n  \"problem\",\n  \"process\",\n  \"produce\",\n  \"profit\",\n  \"program\",\n  \"project\",\n  \"promote\",\n  \"proof\",\n  \"property\",\n  \"prosper\",\n  \"protect\",\n  \"proud\",\n  \"provide\",\n  \"public\",\n  \"pudding\",\n  \"pull\",\n  \"pulp\",\n  \"pulse\",\n  \"pumpkin\",\n  \"punch\",\n  \"pupil\",\n  \"puppy\",\n  \"purchase\",\n  \"purity\",\n  \"purpose\",\n  \"purse\",\n  \"push\",\n  \"put\",\n  \"puzzle\",\n  \"pyramid\",\n  \"quality\",\n  \"quantum\",\n  \"quarter\",\n  \"question\",\n  \"quick\",\n  \"quit\",\n  \"quiz\",\n  \"quote\",\n  \"rabbit\",\n  \"raccoon\",\n  \"race\",\n  \"rack\",\n  \"radar\",\n  \"radio\",\n  \"rail\",\n  \"rain\",\n  \"raise\",\n  \"rally\",\n  \"ramp\",\n  \"ranch\",\n  \"random\",\n  \"range\",\n  \"rapid\",\n  \"rare\",\n  \"rate\",\n  \"rather\",\n  \"raven\",\n  \"raw\",\n  \"razor\",\n  \"ready\",\n  \"real\",\n  \"reason\",\n  \"rebel\",\n  \"rebuild\",\n  \"recall\",\n  \"receive\",\n  \"recipe\",\n  \"record\",\n  \"recycle\",\n  \"reduce\",\n  \"reflect\",\n  \"reform\",\n  \"refuse\",\n  \"region\",\n  \"regret\",\n  \"regular\",\n  \"reject\",\n  \"relax\",\n  \"release\",\n  \"relief\",\n  \"rely\",\n  \"remain\",\n  \"remember\",\n  \"remind\",\n  \"remove\",\n  \"render\",\n  \"renew\",\n  \"rent\",\n  \"reopen\",\n  \"repair\",\n  \"repeat\",\n  \"replace\",\n  \"report\",\n  \"require\",\n  \"rescue\",\n  \"resemble\",\n  \"resist\",\n  \"resource\",\n  \"response\",\n  \"result\",\n  \"retire\",\n  \"retreat\",\n  \"return\",\n  \"reunion\",\n  \"reveal\",\n  \"review\",\n  \"reward\",\n  \"rhythm\",\n  \"rib\",\n  \"ribbon\",\n  \"rice\",\n  \"rich\",\n  \"ride\",\n  \"ridge\",\n  \"rifle\",\n  \"right\",\n  \"rigid\",\n  \"ring\",\n  \"riot\",\n  \"ripple\",\n  \"risk\",\n  \"ritual\",\n  \"rival\",\n  \"river\",\n  \"road\",\n  \"roast\",\n  \"robot\",\n  \"robust\",\n  \"rocket\",\n  \"romance\",\n  \"roof\",\n  \"rookie\",\n  \"room\",\n  \"rose\",\n  \"rotate\",\n  \"rough\",\n  \"round\",\n  \"route\",\n  \"royal\",\n  \"rubber\",\n  \"rude\",\n  \"rug\",\n  \"rule\",\n  \"run\",\n  \"runway\",\n  \"rural\",\n  \"sad\",\n  \"saddle\",\n  \"sadness\",\n  \"safe\",\n  \"sail\",\n  \"salad\",\n  \"salmon\",\n  \"salon\",\n  \"salt\",\n  \"salute\",\n  \"same\",\n  \"sample\",\n  \"sand\",\n  \"satisfy\",\n  \"satoshi\",\n  \"sauce\",\n  \"sausage\",\n  \"save\",\n  \"say\",\n  \"scale\",\n  \"scan\",\n  \"scare\",\n  \"scatter\",\n  \"scene\",\n  \"scheme\",\n  \"school\",\n  \"science\",\n  \"scissors\",\n  \"scorpion\",\n  \"scout\",\n  \"scrap\",\n  \"screen\",\n  \"script\",\n  \"scrub\",\n  \"sea\",\n  \"search\",\n  \"season\",\n  \"seat\",\n  \"second\",\n  \"secret\",\n  \"section\",\n  \"security\",\n  \"seed\",\n  \"seek\",\n  \"segment\",\n  \"select\",\n  \"sell\",\n  \"seminar\",\n  \"senior\",\n  \"sense\",\n  \"sentence\",\n  \"series\",\n  \"service\",\n  \"session\",\n  \"settle\",\n  \"setup\",\n  \"seven\",\n  \"shadow\",\n  \"shaft\",\n  \"shallow\",\n  \"share\",\n  \"shed\",\n  \"shell\",\n  \"sheriff\",\n  \"shield\",\n  \"shift\",\n  \"shine\",\n  \"ship\",\n  \"shiver\",\n  \"shock\",\n  \"shoe\",\n  \"shoot\",\n  \"shop\",\n  \"short\",\n  \"shoulder\",\n  \"shove\",\n  \"shrimp\",\n  \"shrug\",\n  \"shuffle\",\n  \"shy\",\n  \"sibling\",\n  \"sick\",\n  \"side\",\n  \"siege\",\n  \"sight\",\n  \"sign\",\n  \"silent\",\n  \"silk\",\n  \"silly\",\n  \"silver\",\n  \"similar\",\n  \"simple\",\n  \"since\",\n  \"sing\",\n  \"siren\",\n  \"sister\",\n  \"situate\",\n  \"six\",\n  \"size\",\n  \"skate\",\n  \"sketch\",\n  \"ski\",\n  \"skill\",\n  \"skin\",\n  \"skirt\",\n  \"skull\",\n  \"slab\",\n  \"slam\",\n  \"sleep\",\n  \"slender\",\n  \"slice\",\n  \"slide\",\n  \"slight\",\n  \"slim\",\n  \"slogan\",\n  \"slot\",\n  \"slow\",\n  \"slush\",\n  \"small\",\n  \"smart\",\n  \"smile\",\n  \"smoke\",\n  \"smooth\",\n  \"snack\",\n  \"snake\",\n  \"snap\",\n  \"sniff\",\n  \"snow\",\n  \"soap\",\n  \"soccer\",\n  \"social\",\n  \"sock\",\n  \"soda\",\n  \"soft\",\n  \"solar\",\n  \"soldier\",\n  \"solid\",\n  \"solution\",\n  \"solve\",\n  \"someone\",\n  \"song\",\n  \"soon\",\n  \"sorry\",\n  \"sort\",\n  \"soul\",\n  \"sound\",\n  \"soup\",\n  \"source\",\n  \"south\",\n  \"space\",\n  \"spare\",\n  \"spatial\",\n  \"spawn\",\n  \"speak\",\n  \"special\",\n  \"speed\",\n  \"spell\",\n  \"spend\",\n  \"sphere\",\n  \"spice\",\n  \"spider\",\n  \"spike\",\n  \"spin\",\n  \"spirit\",\n  \"split\",\n  \"spoil\",\n  \"sponsor\",\n  \"spoon\",\n  \"sport\",\n  \"spot\",\n  \"spray\",\n  \"spread\",\n  \"spring\",\n  \"spy\",\n  \"square\",\n  \"squeeze\",\n  \"squirrel\",\n  \"stable\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"stairs\",\n  \"stamp\",\n  \"stand\",\n  \"start\",\n  \"state\",\n  \"stay\",\n  \"steak\",\n  \"steel\",\n  \"stem\",\n  \"step\",\n  \"stereo\",\n  \"stick\",\n  \"still\",\n  \"sting\",\n  \"stock\",\n  \"stomach\",\n  \"stone\",\n  \"stool\",\n  \"story\",\n  \"stove\",\n  \"strategy\",\n  \"street\",\n  \"strike\",\n  \"strong\",\n  \"struggle\",\n  \"student\",\n  \"stuff\",\n  \"stumble\",\n  \"style\",\n  \"subject\",\n  \"submit\",\n  \"subway\",\n  \"success\",\n  \"such\",\n  \"sudden\",\n  \"suffer\",\n  \"sugar\",\n  \"suggest\",\n  \"suit\",\n  \"summer\",\n  \"sun\",\n  \"sunny\",\n  \"sunset\",\n  \"super\",\n  \"supply\",\n  \"supreme\",\n  \"sure\",\n  \"surface\",\n  \"surge\",\n  \"surprise\",\n  \"surround\",\n  \"survey\",\n  \"suspect\",\n  \"sustain\",\n  \"swallow\",\n  \"swamp\",\n  \"swap\",\n  \"swarm\",\n  \"swear\",\n  \"sweet\",\n  \"swift\",\n  \"swim\",\n  \"swing\",\n  \"switch\",\n  \"sword\",\n  \"symbol\",\n  \"symptom\",\n  \"syrup\",\n  \"system\",\n  \"table\",\n  \"tackle\",\n  \"tag\",\n  \"tail\",\n  \"talent\",\n  \"talk\",\n  \"tank\",\n  \"tape\",\n  \"target\",\n  \"task\",\n  \"taste\",\n  \"tattoo\",\n  \"taxi\",\n  \"teach\",\n  \"team\",\n  \"tell\",\n  \"ten\",\n  \"tenant\",\n  \"tennis\",\n  \"tent\",\n  \"term\",\n  \"test\",\n  \"text\",\n  \"thank\",\n  \"that\",\n  \"theme\",\n  \"then\",\n  \"theory\",\n  \"there\",\n  \"they\",\n  \"thing\",\n  \"this\",\n  \"thought\",\n  \"three\",\n  \"thrive\",\n  \"throw\",\n  \"thumb\",\n  \"thunder\",\n  \"ticket\",\n  \"tide\",\n  \"tiger\",\n  \"tilt\",\n  \"timber\",\n  \"time\",\n  \"tiny\",\n  \"tip\",\n  \"tired\",\n  \"tissue\",\n  \"title\",\n  \"toast\",\n  \"tobacco\",\n  \"today\",\n  \"toddler\",\n  \"toe\",\n  \"together\",\n  \"toilet\",\n  \"token\",\n  \"tomato\",\n  \"tomorrow\",\n  \"tone\",\n  \"tongue\",\n  \"tonight\",\n  \"tool\",\n  \"tooth\",\n  \"top\",\n  \"topic\",\n  \"topple\",\n  \"torch\",\n  \"tornado\",\n  \"tortoise\",\n  \"toss\",\n  \"total\",\n  \"tourist\",\n  \"toward\",\n  \"tower\",\n  \"town\",\n  \"toy\",\n  \"track\",\n  \"trade\",\n  \"traffic\",\n  \"tragic\",\n  \"train\",\n  \"transfer\",\n  \"trap\",\n  \"trash\",\n  \"travel\",\n  \"tray\",\n  \"treat\",\n  \"tree\",\n  \"trend\",\n  \"trial\",\n  \"tribe\",\n  \"trick\",\n  \"trigger\",\n  \"trim\",\n  \"trip\",\n  \"trophy\",\n  \"trouble\",\n  \"truck\",\n  \"true\",\n  \"truly\",\n  \"trumpet\",\n  \"trust\",\n  \"truth\",\n  \"try\",\n  \"tube\",\n  \"tuition\",\n  \"tumble\",\n  \"tuna\",\n  \"tunnel\",\n  \"turkey\",\n  \"turn\",\n  \"turtle\",\n  \"twelve\",\n  \"twenty\",\n  \"twice\",\n  \"twin\",\n  \"twist\",\n  \"two\",\n  \"type\",\n  \"typical\",\n  \"ugly\",\n  \"umbrella\",\n  \"unable\",\n  \"unaware\",\n  \"uncle\",\n  \"uncover\",\n  \"under\",\n  \"undo\",\n  \"unfair\",\n  \"unfold\",\n  \"unhappy\",\n  \"uniform\",\n  \"unique\",\n  \"unit\",\n  \"universe\",\n  \"unknown\",\n  \"unlock\",\n  \"until\",\n  \"unusual\",\n  \"unveil\",\n  \"update\",\n  \"upgrade\",\n  \"uphold\",\n  \"upon\",\n  \"upper\",\n  \"upset\",\n  \"urban\",\n  \"urge\",\n  \"usage\",\n  \"use\",\n  \"used\",\n  \"useful\",\n  \"useless\",\n  \"usual\",\n  \"utility\",\n  \"vacant\",\n  \"vacuum\",\n  \"vague\",\n  \"valid\",\n  \"valley\",\n  \"valve\",\n  \"van\",\n  \"vanish\",\n  \"vapor\",\n  \"various\",\n  \"vast\",\n  \"vault\",\n  \"vehicle\",\n  \"velvet\",\n  \"vendor\",\n  \"venture\",\n  \"venue\",\n  \"verb\",\n  \"verify\",\n  \"version\",\n  \"very\",\n  \"vessel\",\n  \"veteran\",\n  \"viable\",\n  \"vibrant\",\n  \"vicious\",\n  \"victory\",\n  \"video\",\n  \"view\",\n  \"village\",\n  \"vintage\",\n  \"violin\",\n  \"virtual\",\n  \"virus\",\n  \"visa\",\n  \"visit\",\n  \"visual\",\n  \"vital\",\n  \"vivid\",\n  \"vocal\",\n  \"voice\",\n  \"void\",\n  \"volcano\",\n  \"volume\",\n  \"vote\",\n  \"voyage\",\n  \"wage\",\n  \"wagon\",\n  \"wait\",\n  \"walk\",\n  \"wall\",\n  \"walnut\",\n  \"want\",\n  \"warfare\",\n  \"warm\",\n  \"warrior\",\n  \"wash\",\n  \"wasp\",\n  \"waste\",\n  \"water\",\n  \"wave\",\n  \"way\",\n  \"wealth\",\n  \"weapon\",\n  \"wear\",\n  \"weasel\",\n  \"weather\",\n  \"web\",\n  \"wedding\",\n  \"weekend\",\n  \"weird\",\n  \"welcome\",\n  \"west\",\n  \"wet\",\n  \"whale\",\n  \"what\",\n  \"wheat\",\n  \"wheel\",\n  \"when\",\n  \"where\",\n  \"whip\",\n  \"whisper\",\n  \"wide\",\n  \"width\",\n  \"wife\",\n  \"wild\",\n  \"will\",\n  \"win\",\n  \"window\",\n  \"wine\",\n  \"wing\",\n  \"wink\",\n  \"winner\",\n  \"winter\",\n  \"wire\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"witness\",\n  \"wolf\",\n  \"woman\",\n  \"wonder\",\n  \"wood\",\n  \"wool\",\n  \"word\",\n  \"work\",\n  \"world\",\n  \"worry\",\n  \"worth\",\n  \"wrap\",\n  \"wreck\",\n  \"wrestle\",\n  \"wrist\",\n  \"write\",\n  \"wrong\",\n  \"yard\",\n  \"year\",\n  \"yellow\",\n  \"you\",\n  \"young\",\n  \"youth\",\n  \"zebra\",\n  \"zero\",\n  \"zone\",\n  \"zoo\",\n]\n\n/**\n * NEVER LOG THE RECOVERY PHRASE TO CONSOLE OR SEND\n * TO EXTERNAL SERVICE\n * @returns A random BIP39 mnemonic with 256 bits of entropy.\n */\nexport function generate(): string {\n  const entropy = new Uint32Array(32)\n  crypto.getRandomValues(entropy)\n  return entropyToMnemonic(toHexString(entropy), ENGLISH_WORDS)\n}\n\n/**\n * @returns true if the mnemonic is valid, false otherwise.\n */\nexport function validate(mnemonic: string): boolean {\n  return validateMnemonic(mnemonic)\n}\n","import {\n  fromHexString,\n  toHexString,\n} from \"@dfinity/candid/lib/cjs/utils/buffer\"\nimport { WebAuthnIdentity } from \"@dfinity/identity\"\nimport { Principal } from \"@dfinity/principal\"\nimport React from \"react\"\nimport useSWR from \"swr\"\n\nimport { im, Icon } from \"@nfid/integration\"\n\nimport {\n  AccessPointRequest,\n  AccessPointResponse,\n} from \"frontend/integration/_ic_api/identity_manager.d\"\nimport {\n  DeviceData,\n  PublicKey,\n} from \"frontend/integration/_ic_api/internet_identity.d\"\nimport { useDeviceInfo } from \"frontend/integration/device\"\nimport { removeAccessPointFacade } from \"frontend/integration/facade\"\nimport { ERROR_DEVICE_IN_EXCLUDED_CREDENTIAL_LIST } from \"frontend/integration/identity\"\nimport {\n  addDevice,\n  fetchAllDevices,\n  fetchAuthenticatorDevices,\n  fetchRecoveryDevices,\n  IC_DERIVATION_PATH,\n} from \"frontend/integration/internet-identity\"\nimport { fromMnemonicWithoutValidation } from \"frontend/integration/internet-identity/crypto/ed25519\"\nimport { generate } from \"frontend/integration/internet-identity/crypto/mnemonic\"\nimport { derFromPubkey } from \"frontend/integration/internet-identity/utils\"\nimport { creationOptions } from \"frontend/integration/webauthn/creation-options\"\n\nimport { useAccount } from \"../account/hooks\"\nimport { LegacyDevice, RecoveryDevice } from \"./state\"\n\nexport interface WebAuthnDevice {\n  publicKey: string\n  rawId: string\n  deviceName: string\n}\n\nconst getIcon = (device: DeviceData): Icon => {\n  switch (device.alias.split(\" \")[3]) {\n    case \"Android\":\n    case \"iOS\":\n      return \"mobile\"\n    case \"Mac OS\":\n      return \"desktop\"\n    default:\n      return \"laptop\"\n  }\n}\n\nconst getBrowser = (device: DeviceData): string => {\n  return device.alias.replace(\"NFID\", \"\").split(\" on \")[0]\n}\n\nconst getDeviceName = (device: DeviceData): string => {\n  return device.alias.replace(\"NFID\", \"\").split(\" on \")[1]\n}\n\nconst normalizeDevices = (\n  devices: DeviceData[],\n  accessPoints: AccessPointResponse[] = [],\n): LegacyDevice[] => {\n  return devices.map((device) => {\n    const devicePrincipalId = Principal.selfAuthenticating(\n      new Uint8Array(device.pubkey),\n    ).toString()\n    const accessPoint = accessPoints.find(\n      (ap) => ap.principal_id === devicePrincipalId,\n    )\n    return {\n      isAccessPoint: !!accessPoint,\n      label: accessPoint?.device || getDeviceName(device),\n      icon: (accessPoint?.icon as Icon) || getIcon(device),\n      pubkey: device.pubkey,\n      lastUsed: accessPoint?.last_used\n        ? Number(BigInt(accessPoint.last_used) / BigInt(1000000))\n        : 0,\n      browser: accessPoint?.browser || getBrowser(device),\n      isSecurityKey:\n        Object.keys(device.key_type).indexOf(\"cross_platform\") > -1,\n    }\n  })\n}\n\nconst normalizeDeviceRequest = (device: LegacyDevice): AccessPointRequest => {\n  return {\n    icon: device.icon,\n    device: device.label,\n    pub_key: Principal.selfAuthenticating(\n      new Uint8Array(device.pubkey),\n    ).toText(),\n    browser: device.browser,\n  }\n}\n\nconst getRecoveryDeviceLabel = (accessPoint?: AccessPointResponse) => {\n  if (accessPoint?.device === \"recovery\") {\n    return \"Recovery Phrase\"\n  }\n  if (accessPoint?.device) {\n    return accessPoint.device\n  }\n  return \"Unknown Device\"\n}\n\nconst getRecoveryDeviceIcon = (accessPoint?: AccessPointResponse): Icon => {\n  if (accessPoint?.icon === \"recovery\") {\n    return \"document\"\n  }\n  if (accessPoint?.icon) {\n    return accessPoint.icon as Icon\n  }\n  return \"usb\"\n}\n\nconst normalizeRecoveryDevices = (\n  devices: DeviceData[],\n  accessPoints: AccessPointResponse[] = [],\n): RecoveryDevice[] => {\n  return devices.map((device) => {\n    const devicePrincipalId = Principal.selfAuthenticating(\n      new Uint8Array(device.pubkey),\n    ).toString()\n    const accessPoint = accessPoints.find(\n      (ap) => ap.principal_id === devicePrincipalId,\n    )\n\n    return {\n      isAccessPoint: !!accessPoint,\n      label: getRecoveryDeviceLabel(accessPoint),\n      icon: getRecoveryDeviceIcon(accessPoint),\n      pubkey: device.pubkey,\n      lastUsed: accessPoint?.last_used\n        ? Number(BigInt(accessPoint.last_used) / BigInt(1000000))\n        : 0,\n      isRecoveryPhrase:\n        Object.keys(device.key_type).indexOf(\"seed_phrase\") > -1,\n      isSecurityKey:\n        Object.keys(device.key_type).indexOf(\"cross_platform\") > -1,\n      isProtected: device.protection.hasOwnProperty(\"protected\"),\n    }\n  })\n}\n\nasync function fetchDevices(anchor: string) {\n  console.log(\">> fetchDevices\", { anchor })\n\n  const [accessPoints, existingDevices] = await Promise.all([\n    im.read_access_points().catch((e) => {\n      throw new Error(\n        `useDevices.handleLoadDevices im.read_access_points: ${e.message}`,\n      )\n    }),\n    fetchAuthenticatorDevices(BigInt(anchor)),\n  ])\n  console.debug(\"fetchDevices\", { accessPoints, existingDevices })\n\n  const normalizedDevices = normalizeDevices(\n    existingDevices,\n    accessPoints?.data[0],\n  )\n  console.debug(\"fetchDevices\", { normalizedDevices })\n  return normalizedDevices\n}\n\nasync function fetchAccountRecoveryMethods(anchor: string) {\n  console.debug(\"fetchAccountRecoveryMethods\", { anchor })\n  const [accessPoints, existingRecoveryDevices] = await Promise.all([\n    im.read_access_points().catch((e) => {\n      throw new Error(\n        `useDevices.getRecoveryDevices im.read_access_points: ${e.message}`,\n      )\n    }),\n    fetchRecoveryDevices(BigInt(anchor)),\n  ])\n  console.debug(\"fetchAccountRecoveryMethods\", {\n    accessPoints,\n    existingRecoveryDevices,\n  })\n\n  const normalizedRecoveryDevices = normalizeRecoveryDevices(\n    existingRecoveryDevices,\n    accessPoints?.data[0],\n  )\n  console.debug(\"fetchAccountRecoveryMethods\", {\n    normalizedRecoveryDevices,\n  })\n  return normalizedRecoveryDevices\n}\n\ninterface GoogleDeviceFilter {\n  browser: string\n}\ninterface WalletDeviceFilter {\n  label: string\n}\n\nexport const byGoogleDevice = ({ browser }: GoogleDeviceFilter) => {\n  return browser.includes(\"google\")\n}\n\nexport const byWalletDevice = ({ label }: WalletDeviceFilter) => {\n  const knownWalletDevices = [\"Internet Identity\", \"Metamask\"]\n  return knownWalletDevices.indexOf(label) > -1\n}\n\nexport const byNotGoogleDevice = ({ browser }: GoogleDeviceFilter) =>\n  !byGoogleDevice({ browser })\n\nexport const byNotWalletDevice = ({ label }: WalletDeviceFilter) =>\n  !byWalletDevice({ label })\n\nexport const useDevices = () => {\n  const { profile } = useAccount()\n\n  const {\n    data: authenticatorDevices,\n    error: authenticatorDevicesError,\n    mutate: refreshDevices,\n  } = useSWR(\n    profile?.anchor ? [profile.anchor.toString(), \"authenticator\"] : null,\n    ([anchor]) => fetchDevices(anchor),\n    {\n      dedupingInterval: 60_000 * 5,\n      focusThrottleInterval: 60_000 * 5,\n    },\n  )\n\n  const {\n    data: recoveryDevices,\n    error: fetchRecoveryDevicesError,\n    mutate: refreshRecoveryDevices,\n  } = useSWR(\n    profile?.anchor ? [profile.anchor.toString(), \"recovery\"] : null,\n    ([anchor]) => fetchAccountRecoveryMethods(anchor),\n    {\n      dedupingInterval: 60_000 * 5,\n      focusThrottleInterval: 60_000 * 5,\n    },\n  )\n\n  const socialDevices = React.useMemo(() => {\n    return (\n      authenticatorDevices?.filter(byGoogleDevice).map((socialDevice) => ({\n        ...socialDevice,\n        // TODO: move to normalizer\n        icon: \"google\" as Icon,\n        label: \"Google\",\n        isAccessPoint: true,\n        isSocialDevice: true,\n      })) ?? []\n    )\n  }, [authenticatorDevices])\n\n  const walletDevices = React.useMemo(() => {\n    return (\n      authenticatorDevices?.filter(byWalletDevice).map((walletDevice) => ({\n        ...walletDevice,\n        isAccessPoint: true,\n        isWalletDevice: true,\n      })) ?? []\n    )\n  }, [authenticatorDevices])\n\n  // TODO replace by having social device like separate device type (as recover)\n  const devices = React.useMemo(() => {\n    return authenticatorDevices\n      ?.filter(byNotGoogleDevice)\n      ?.filter(byNotWalletDevice)\n  }, [authenticatorDevices])\n\n  const {\n    newDeviceName,\n    browser: { name: browserName },\n  } = useDeviceInfo()\n\n  const updateDevice = React.useCallback(\n    async (device: LegacyDevice) => {\n      const normalizedDevice = normalizeDeviceRequest(device)\n\n      if (!device.isAccessPoint) {\n        const createAccessPointResponse = await im\n          .create_access_point(normalizedDevice)\n          .catch((e) => {\n            throw new Error(\n              `useDevices.updateDevice im.create_access_point: ${e.message}`,\n            )\n          })\n        refreshDevices()\n        return createAccessPointResponse\n      }\n      const updatedAccessPoint = await im\n        .update_access_point(normalizedDevice)\n        .catch((e) => {\n          throw new Error(\n            `useDevices.updateDevice im.update_access_point: ${e.message}`,\n          )\n        })\n      refreshDevices()\n      return updatedAccessPoint\n    },\n    [refreshDevices],\n  )\n\n  const deleteDevice = React.useCallback(\n    async (pubkey: PublicKey) => {\n      if (profile?.anchor) {\n        await removeAccessPointFacade(BigInt(profile?.anchor), pubkey)\n        refreshDevices()\n      }\n    },\n    [profile?.anchor, refreshDevices],\n  )\n\n  const createWebAuthNDevice = React.useCallback(\n    async (userNumber: bigint): Promise<{ device: WebAuthnDevice }> => {\n      const existingDevices = await fetchAllDevices(userNumber)\n\n      const identity = await WebAuthnIdentity.create({\n        publicKey: creationOptions(existingDevices),\n      })\n      const publicKey = toHexString(identity.getPublicKey().toDer())\n      const rawId = toHexString(identity.rawId)\n\n      const device = {\n        publicKey,\n        rawId,\n        deviceName: newDeviceName,\n      }\n\n      return { device }\n    },\n    [newDeviceName],\n  )\n\n  const createDevice = React.useCallback(\n    async ({\n      userNumber,\n      deviceName,\n      publicKey,\n      rawId,\n    }: {\n      userNumber: bigint\n      deviceName: string\n      publicKey: string\n      rawId: string\n    }) => {\n      const pub_key = fromHexString(publicKey)\n\n      await Promise.all([\n        addDevice(\n          userNumber,\n          deviceName,\n          { unknown: null },\n          { authentication: null },\n          derFromPubkey(Array.from(new Uint8Array(pub_key))),\n          fromHexString(rawId),\n        ),\n        im\n          .create_access_point({\n            icon: \"\",\n            device: deviceName,\n            browser: browserName ?? \"\",\n            pub_key: Principal.selfAuthenticating(\n              new Uint8Array(pub_key),\n            ).toText(),\n          })\n          .catch((e) => {\n            throw new Error(\n              `useDevices.createDevice im.create_access_point: ${e.message}`,\n            )\n          }),\n      ])\n    },\n    [browserName],\n  )\n\n  const createRecoveryDevice = React.useCallback(\n    async (recoverIdentity: Blob, icon?: string, device?: string) => {\n      const newDevice = {\n        icon: icon ?? \"document\",\n        device: device ?? \"Recovery Phrase\",\n        browser: \"\",\n        pub_key: Principal.selfAuthenticating(\n          new Uint8Array(await recoverIdentity.arrayBuffer()),\n        ).toText(),\n      }\n\n      return await im.create_access_point(newDevice).catch((e) => {\n        throw new Error(\n          `useDevices.createRecoveryDevice im.create_access_point: ${e.message}`,\n        )\n      })\n    },\n    [],\n  )\n\n  const recoverDevice = React.useCallback(\n    async (userNumber: number) => {\n      try {\n        const { device } = await createWebAuthNDevice(BigInt(userNumber))\n\n        await createDevice({\n          ...device,\n          userNumber: BigInt(userNumber),\n        })\n\n        refreshRecoveryDevices()\n        refreshDevices()\n\n        return {\n          message: \"Device created successfully\",\n        }\n      } catch (error: any) {\n        if (ERROR_DEVICE_IN_EXCLUDED_CREDENTIAL_LIST.includes(error.message)) {\n          return {\n            message: \"This device is already registered\",\n          }\n        }\n        throw error\n      }\n    },\n    [\n      createDevice,\n      createWebAuthNDevice,\n      refreshDevices,\n      refreshRecoveryDevices,\n    ],\n  )\n\n  /**\n   * NEVER LOG THE RECOVERY PHRASE TO CONSOLE OR SEND\n   * TO EXTERNAL SERVICE\n   */\n  const createRecoveryPhrase = React.useCallback(\n    async (protect = true) => {\n      if (!profile?.anchor)\n        throw new Error(\n          \"useDevice.createRecoveryPhrase profile?.anchor missing\",\n        )\n\n      // NOTE: NEVER LOG RECOVERY PHRASE\n      const recovery = generate().trim()\n      const recoverIdentity = await fromMnemonicWithoutValidation(\n        recovery,\n        IC_DERIVATION_PATH,\n      )\n      const deviceName = \"Recovery phrase\"\n\n      await Promise.all([\n        addDevice(\n          BigInt(profile?.anchor),\n          deviceName,\n          { seed_phrase: null },\n          { recovery: null },\n          recoverIdentity.getPublicKey().toDer(),\n          undefined as any,\n          protect,\n        ),\n        createRecoveryDevice(\n          new Blob([recoverIdentity.getPublicKey().toDer()]),\n          \"document\",\n          deviceName,\n        ),\n      ])\n      refreshRecoveryDevices()\n      refreshDevices()\n      return `${profile.anchor} ${recovery}`\n    },\n    [\n      createRecoveryDevice,\n      refreshDevices,\n      refreshRecoveryDevices,\n      profile?.anchor,\n    ],\n  )\n\n  const createSecurityDevice = React.useCallback(\n    async (\n      userNumberOverwrite?: bigint,\n      purpose: \"recover\" | \"authentication\" = \"recover\",\n    ) => {\n      const actualUserNumber = profile?.anchor || userNumberOverwrite\n      if (!actualUserNumber)\n        throw new Error(\"useDevice.createSecurityDevice userNumber missing\")\n\n      const devices = await fetchAllDevices(BigInt(actualUserNumber))\n      const deviceName = \"Security Key\"\n\n      let recoverIdentity\n      try {\n        recoverIdentity = await WebAuthnIdentity.create({\n          publicKey: creationOptions(devices, \"cross-platform\"),\n        })\n        await Promise.all([\n          addDevice(\n            BigInt(actualUserNumber),\n            deviceName,\n            { cross_platform: null },\n            purpose && purpose === \"recover\"\n              ? { recovery: null }\n              : { authentication: null },\n            recoverIdentity.getPublicKey().toDer(),\n            recoverIdentity.rawId,\n          ),\n          createRecoveryDevice(\n            new Blob([recoverIdentity.getPublicKey().toDer()]),\n            \"usb\",\n            deviceName,\n          ),\n        ])\n      } catch (error: any) {\n        if (!ERROR_DEVICE_IN_EXCLUDED_CREDENTIAL_LIST.includes(error.message)) {\n          throw error\n        }\n        console.debug(\"createSecurityDevice\", \"device already registered\")\n      }\n      refreshRecoveryDevices()\n      refreshDevices()\n    },\n    [\n      createRecoveryDevice,\n      refreshDevices,\n      refreshRecoveryDevices,\n      profile?.anchor,\n    ],\n  )\n\n  const getGoogleDevice = React.useCallback(\n    async ({ token }: { token?: string }) => {\n      const response = await fetch(SIGNIN_GOOGLE, {\n        method: \"POST\",\n        body: JSON.stringify({ token }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n\n      return await response.json()\n    },\n    [],\n  )\n\n  return {\n    loadingDevices: !devices && !authenticatorDevicesError,\n    devices: devices || [],\n    socialDevices,\n    walletDevices,\n    loadingRecoveryDevices: !recoveryDevices && !fetchRecoveryDevicesError,\n    recoveryDevices: recoveryDevices || [],\n    hasSecurityKey:\n      !!authenticatorDevices?.find((d) => d.isSecurityKey) ||\n      !!recoveryDevices?.find((d) => d.isSecurityKey),\n    createWebAuthNDevice,\n    createRecoveryPhrase,\n    createSecurityDevice,\n    getGoogleDevice,\n    getDevices: refreshDevices,\n    getRecoveryDevices: refreshRecoveryDevices,\n    createDevice,\n    createRecoveryDevice,\n    recoverDevice,\n    updateDevice,\n    deleteDevice,\n  }\n}\n","import { WebAuthnIdentity } from \"@dfinity/identity\"\n\nimport { DeviceData } from \"../_ic_api/internet_identity.d\"\nimport { fetchProfile } from \"../identity-manager\"\nimport { Device, fetchAuthenticatorDevices } from \"../internet-identity\"\nimport { creationOptions, getCredentials } from \"../webauthn/creation-options\"\nimport { MultiWebAuthnIdentity } from \"./multiWebAuthnIdentity\"\n\n/**\n * Creates an identity authorized to call internet identity canister by looping through device\n * credentials associated with an anchor to find a credential provided by the current device.\n * @param devices List of devices retrieved from ii.lookup\n * @param withSecurityDevices Flag to include security devices\n * @returns\n */\nexport function identityFromDeviceList(\n  devices: Device[],\n  withSecurityDevices?: boolean,\n): MultiWebAuthnIdentity {\n  return MultiWebAuthnIdentity.fromCredentials(\n    getCredentials(devices),\n    withSecurityDevices,\n  )\n}\n\nexport const ERROR_DEVICE_IN_EXCLUDED_CREDENTIAL_LIST = [\n  \"The user attempted to register an authenticator that contains one of the credentials already registered with the relying party.\",\n  \"At least one credential matches an entry of the excludeCredentials list in the platform attached authenticator.\",\n  \"An attempt was made to use an object that is not, or is no longer, usable\",\n]\n\n/**\n * Create a new WebAuthnIdentity. Used during registration of a new NFID.\n * @returns WebAuthnIdentity\n */\nexport async function createWebAuthnIdentity() {\n  return await WebAuthnIdentity.create({\n    publicKey: creationOptions(),\n  })\n}\n\nexport const includesSecurityKey = (device: DeviceData[]) =>\n  device.findIndex((x) => \"cross_platform\" in x.key_type) >= 0\n\nexport async function hasSecurityKeyService() {\n  const profile = await fetchProfile()\n  console.debug(\"hasSecurityKey\", { profile })\n  const usersAuthenticatorDevices = await fetchAuthenticatorDevices(\n    BigInt(profile.anchor),\n    true,\n  )\n  const hasSecurityKey = includesSecurityKey(usersAuthenticatorDevices)\n  console.debug(\"hasSecurityKey\", {\n    usersAuthenticatorDevices,\n    hasSecurityKey,\n  })\n  return hasSecurityKey\n}\n"],"names":["async","removeRecoveryDeviceFacade","userNumber","seedPhrase","pubKey","removeRecoveryDeviceII","removeAccessPoint","removeAccessPointFacade","removeDevice","ENGLISH_WORDS","generate","entropy","Uint32Array","crypto","getRandomValues","entropyToMnemonic","toHexString","getIcon","device","alias","split","getBrowser","replace","getDeviceName","getRecoveryDeviceLabel","accessPoint","getRecoveryDeviceIcon","icon","fetchDevices","anchor","console","log","accessPoints","existingDevices","Promise","all","im","catch","e","Error","message","fetchAuthenticatorDevices","BigInt","debug","normalizedDevices","devices","map","devicePrincipalId","Principal","Uint8Array","pubkey","toString","find","ap","principal_id","isAccessPoint","label","lastUsed","last_used","Number","browser","isSecurityKey","Object","keys","key_type","indexOf","normalizeDevices","data","fetchAccountRecoveryMethods","existingRecoveryDevices","fetchRecoveryDevices","normalizedRecoveryDevices","isRecoveryPhrase","isProtected","protection","hasOwnProperty","normalizeRecoveryDevices","byGoogleDevice","includes","byWalletDevice","byNotGoogleDevice","byNotWalletDevice","useDevices","profile","useAccount","authenticatorDevices","error","authenticatorDevicesError","mutate","refreshDevices","useSWR","dedupingInterval","focusThrottleInterval","recoveryDevices","fetchRecoveryDevicesError","refreshRecoveryDevices","socialDevices","React","filter","socialDevice","isSocialDevice","walletDevices","walletDevice","isWalletDevice","newDeviceName","name","browserName","useDeviceInfo","updateDevice","normalizedDevice","pub_key","toText","normalizeDeviceRequest","createAccessPointResponse","updatedAccessPoint","deleteDevice","createWebAuthNDevice","fetchAllDevices","identity","WebAuthnIdentity","publicKey","creationOptions","getPublicKey","toDer","rawId","deviceName","createDevice","fromHexString","addDevice","unknown","authentication","derFromPubkey","Array","from","createRecoveryDevice","recoverIdentity","newDevice","arrayBuffer","recoverDevice","ERROR_DEVICE_IN_EXCLUDED_CREDENTIAL_LIST","createRecoveryPhrase","protect","recovery","trim","fromMnemonicWithoutValidation","IC_DERIVATION_PATH","seed_phrase","undefined","Blob","createSecurityDevice","userNumberOverwrite","purpose","actualUserNumber","cross_platform","getGoogleDevice","token","response","fetch","SIGNIN_GOOGLE","method","body","JSON","stringify","headers","json","loadingDevices","loadingRecoveryDevices","hasSecurityKey","d","getDevices","getRecoveryDevices","identityFromDeviceList","withSecurityDevices","MultiWebAuthnIdentity","getCredentials","createWebAuthnIdentity","hasSecurityKeyService","fetchProfile","usersAuthenticatorDevices","findIndex","x"],"sourceRoot":""}