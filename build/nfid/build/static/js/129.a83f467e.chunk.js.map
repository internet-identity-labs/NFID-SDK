{"version":3,"file":"static/js/129.a83f467e.chunk.js","mappings":"8KAcO,MAAMA,EAAwC,IAK/B,IALgC,gBACpDC,EAAe,QACfC,EAAO,UACPC,EAAS,SACTC,GACc,EACd,OACE,iBAAKC,UAAU,uCAAsC,WACnD,SAAC,KAAkB,CACjBC,MAAM,YACNC,gBAAgC,OAAfN,QAAe,IAAfA,OAAe,EAAfA,EAAiBO,KAClCC,UACE,SAAC,IAA0B,CAACC,eAA+B,OAAfT,QAAe,IAAfA,OAAe,EAAfA,EAAiBU,SAGjE,cAAGN,UAAU,iBAAgB,wGAI7B,gBACEA,WAAWO,EAAAA,EAAAA,GACT,uDACA,mCACA,SAEDV,KAGH,gBAAKG,UAAU,OAAM,UACnB,iBAAKA,UAAU,uCAAsC,WACnD,SAAC,KAAM,CAACQ,KAAK,SAASR,UAAU,SAASS,QAASV,EAAS,qBAG3D,SAAC,KAAM,CAACS,KAAK,UAAUR,UAAU,SAASS,QAASX,EAAU,4BAK7D,EChCV,EAhBsD,IAK/C,IAAD,QALiD,QACrDY,EAAO,kBACPC,EAAiB,UACjBC,EAAS,SACTC,GACD,EACC,OACE,SAAClB,EAAY,CACXC,gBAAiBc,EACjBb,QAAyC,QAAlC,EAAmB,OAAjBc,QAAiB,IAAjBA,GAAuB,QAAN,EAAjBA,EAAmBG,YAAI,WAAN,EAAjB,EAAyBjB,eAAO,QAAI,GAC7CC,UAAWc,EACXb,SAAUc,GACV,C","sources":["features/embed/ui/personal-sign.tsx","features/embed/components/sign-message.tsx"],"sourcesContent":["import clsx from \"clsx\"\n\nimport { SDKApplicationMeta, Button } from \"@nfid-frontend/ui\"\n\nimport { RPCApplicationMetaSubtitle } from \"frontend/features/embed-controller/ui/app-meta/subtitle\"\nimport { AuthorizingAppMeta } from \"frontend/state/authorization\"\n\ninterface IPersonalSign {\n  applicationMeta: AuthorizingAppMeta\n  message: string\n  onApprove: () => void\n  onCancel: () => void\n}\n\nexport const PersonalSign: React.FC<IPersonalSign> = ({\n  applicationMeta,\n  message,\n  onApprove,\n  onCancel,\n}: IPersonalSign) => {\n  return (\n    <div className=\"flex flex-col justify-between flex-1\">\n      <SDKApplicationMeta\n        title=\"Signature\"\n        applicationLogo={applicationMeta?.logo}\n        subTitle={\n          <RPCApplicationMetaSubtitle applicationURL={applicationMeta?.url} />\n        }\n      />\n      <p className=\"text-sm my-3.5\">\n        Only sign this message if you fully understand the content and trust the\n        requesting site.\n      </p>\n      <div\n        className={clsx(\n          \"rounded-md bg-gray-50 px-3.5 py-2.5 flex-1 space-y-2\",\n          \"text-gray-500 break-all text-sm\",\n        )}\n      >\n        {message}\n      </div>\n\n      <div className=\"pt-5\">\n        <div className=\"flex items-center w-full space-x-2.5\">\n          <Button type=\"stroke\" className=\"w-full\" onClick={onCancel}>\n            Cancel\n          </Button>\n          <Button type=\"primary\" className=\"w-full\" onClick={onApprove}>\n            Confirm\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { ApproverCmpProps } from \"frontend/features/embed/types\"\n\nimport { PersonalSign } from \"../ui/personal-sign\"\n\nconst MappedSignMessage: React.FC<ApproverCmpProps> = ({\n  appMeta,\n  rpcMessageDecoded,\n  onConfirm,\n  onReject,\n}) => {\n  return (\n    <PersonalSign\n      applicationMeta={appMeta}\n      message={rpcMessageDecoded?.data?.message ?? \"\"}\n      onApprove={onConfirm}\n      onCancel={onReject}\n    />\n  )\n}\n\nexport default MappedSignMessage\n"],"names":["PersonalSign","applicationMeta","message","onApprove","onCancel","className","title","applicationLogo","logo","subTitle","applicationURL","url","clsx","type","onClick","appMeta","rpcMessageDecoded","onConfirm","onReject","data"],"sourceRoot":""}