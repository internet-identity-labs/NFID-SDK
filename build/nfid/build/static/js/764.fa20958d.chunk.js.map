{"version":3,"file":"static/js/764.fa20958d.chunk.js","mappings":"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","sources":["features/embed-controller/ui/app-meta/subtitle.tsx","features/embed/components/fallback.tsx","../../../node_modules/rxjs/src/internal/util/isArrayLike.ts","../../../node_modules/rxjs/src/internal/symbol/iterator.ts","../../../node_modules/rxjs/src/internal/observable/innerFrom.ts","../../../node_modules/rxjs/src/internal/util/isInteropObservable.ts","../../../node_modules/rxjs/src/internal/util/isPromise.ts","../../../node_modules/rxjs/src/internal/util/isAsyncIterable.ts","../../../node_modules/rxjs/src/internal/util/isIterable.ts","../../../node_modules/rxjs/src/internal/util/isReadableStreamLike.ts","../../../node_modules/rxjs/src/internal/util/throwUnobservableError.ts","../../../node_modules/rxjs/src/internal/operators/mergeMap.ts","../../../node_modules/rxjs/src/internal/operators/mergeInternals.ts","../../../node_modules/rxjs/src/internal/util/executeSchedule.ts","../../../node_modules/rxjs/src/internal/util/mapOneOrManyArgs.ts","../../../node_modules/rxjs/src/internal/observable/fromEvent.ts","../../../packages/integration-ethereum/src/lib/decoder/asset-decoder/asset-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/asset-decoder/asset-decoder-service.ts","../../../packages/integration-ethereum/src/lib/decoder/asset-decoder/erc721-asset-decoder/erc721-asset-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/asset-decoder/erc721-asset-decoder/erc721-asset-lazy-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/asset-decoder/erc721-asset-decoder/erc721-asset-lazy-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/asset-decoder/erc1155-asset-decoder/erc1155-asset-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/asset-decoder/erc1155-asset-decoder/erc1155-asset-lazy-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/asset-decoder/erc1155-asset-decoder/erc1155-asset-lazy-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/dependency-service.ts","../../../packages/integration-ethereum/src/lib/decoder/function-call-service.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/approve/approve-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/approve/approve-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/bulk-purchase/bulk-purchase-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/bulk-purchase/bulk-purchase-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decode-ethereum-function-call.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/burn/burn-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/burn/burn-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/cancel/cancel-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/cancel/cancel-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/create-token/create-token-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/create-token/create-token-private/create-token-private-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/create-token/create-token-private/create-token-private-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/create-token/create-token-public/create-token-public-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/create-token/create-token-public/create-token-public-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/direct-accept-bid/direct-accept-bid-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/direct-accept-bid/direct-accept-bid-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/direct-purchase/direct-purchase-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/direct-purchase/direct-purchase-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/mint/mint-and-transfer-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/mint/mint-and-transfer-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/safe-transfer-from/safe-transfer-from-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/safe-transfer-from/safe-transfer-from-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/set-approval-for-all/set-approval-for-all-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/set-approval-for-all/set-approval-for-all-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/rpc-message-decoder/rpc-message-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/rpc-message-decoder/eth-sendtransaction-rpc-message-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/rpc-message-decoder/personal-sign-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/rpc-message-decoder/sign-typed-data-v4-rpc-message-decoder..ts","../../../packages/integration-ethereum/src/lib/decoder/rpc-message-decoder/sign-typed-data-v4-rpc-message-decoder/order-sign-typed-data-v4-rpc-message-decoder copy.ts","../../../packages/integration-ethereum/src/lib/decoder/rpc-message-decoder/sign-typed-data-v4-rpc-message-decoder/mint721-sign-typed-data-v4-rpc-message-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/rpc-message-decoder/sign-typed-data-v4-rpc-message-decoder/mint1155-sign-typed-data-v4-rpc-message-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/function-call-decoder.ts","features/embed/services/rpc-receiver.ts","../../../node_modules/rxjs/src/internal/operators/filter.ts","features/embed/machine-v2.ts","features/embed/services/check-app-meta.ts","features/embed/services/execute-procedure.ts","features/embed/services/check-auth-state.ts","features/embed/ui/loader.tsx","features/embed/util/populateTxService.ts","features/embed/procedure-approval-coordinator.tsx","features/embed/ui/error.tsx","features/embed/coordinator.tsx","features/embed/ui/asset-preview/batch.tsx","features/embed/ui/asset-preview/single.tsx","features/embed/ui/asset-preview/index.tsx","features/embed/ui/send-transaction.tsx","features/embed/util/calcPriceUtil.ts","features/fungable-token/eth/hooks/use-eth-exchange-rate.ts","integration/facade/wallet.ts","ui/atoms/center-ellipsis/index.tsx","../../../packages/integration-ethereum/src/lib/decoder/chain-service.ts","../../../node_modules/ethers/src.ts/_version.ts","../../../node_modules/ethers/src.ts/ethers.ts"],"sourcesContent":["import { IconCmpInfo, Tooltip } from \"@nfid-frontend/ui\"\n\ninterface RPCApplicationMetaSubtitleProps {\n  applicationURL?: string\n}\nexport const RPCApplicationMetaSubtitle = ({\n  applicationURL,\n}: RPCApplicationMetaSubtitleProps) => {\n  return (\n    <div className=\"flex items-center space-x-1\">\n      <span>Request from</span>\n      <a\n        className=\"text-blue hover:opacity-70\"\n        href={`https://${applicationURL}`}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        {applicationURL}\n      </a>\n      <Tooltip tip=\"Verify app url\">\n        <IconCmpInfo className=\"w-4 text-black\" />\n      </Tooltip>\n    </div>\n  )\n}\n","import { chainService } from \"packages/integration-ethereum/src/lib/decoder/chain-service\"\nimport { useMemo } from \"react\"\n\nimport { IWarningAccordionOption } from \"@nfid-frontend/ui\"\n\nimport { ApproverCmpProps } from \"frontend/features/embed/types\"\nimport { calcPrice } from \"frontend/features/embed/util/calcPriceUtil\"\nimport { useExchangeRates } from \"frontend/features/fungable-token/eth/hooks/use-eth-exchange-rate\"\n\nimport { SendTransaction } from \"../ui/send-transaction\"\n\nconst MappedFallback: React.FC<ApproverCmpProps> = ({\n  appMeta,\n  rpcMessage,\n  rpcMessageDecoded,\n  populatedTransaction,\n  disableConfirmButton,\n  onConfirm,\n  onReject,\n}) => {\n  const { rates } = useExchangeRates()\n  const { symbol, currency, chainName } = chainService.getSymbolAndChainName(\n    rpcMessage.options.chainId,\n  )\n  const rate = rates[currency]\n\n  const price = useMemo(() => {\n    return calcPrice(rate, populatedTransaction)\n  }, [rate, populatedTransaction])\n\n  const warnings = useMemo(() => {\n    if (!price) return []\n    let warnings: IWarningAccordionOption[] = []\n\n    if (\n      !rpcMessageDecoded?.data?.meta?.content[0].url &&\n      !rpcMessageDecoded?.data?.meta?.name &&\n      rpcMessageDecoded?.data?.collectionData?.name\n    )\n      warnings.push({\n        title: \"Preview unavailable\",\n        subtitle:\n          \"Unable to estimate asset changes. Please make sure you trust this dapp.\",\n      })\n\n    if (price.isNetworkIsBusyWarning)\n      warnings.push({\n        title: \"Network is busy\",\n        subtitle: (\n          <>\n            Gas prices are high and estimates are less accurate.\n            <span className=\"text-blue-600\"> Adjust the network fee.</span>\n          </>\n        ),\n      })\n\n    return warnings\n  }, [\n    price,\n    rpcMessageDecoded?.data?.collectionData?.name,\n    rpcMessageDecoded?.data?.meta?.content,\n    rpcMessageDecoded?.data?.meta?.name,\n  ])\n\n  return (\n    <SendTransaction\n      title={`Review ${rpcMessageDecoded?.method ?? \"\"}`}\n      applicationMeta={appMeta}\n      fromAddress={rpcMessage?.params[0].from ?? rpcMessageDecoded?.from}\n      toAddress={rpcMessage?.params[0].to}\n      networkFee={price.fee}\n      totalUSD={price.totalUsd}\n      totalToken={price.total ?? rpcMessageDecoded?.total}\n      network={chainName}\n      currency={symbol}\n      onApprove={onConfirm}\n      disableApproveButton={disableConfirmButton}\n      isInsufficientBalance={price.isInsufficientFundsError}\n      warnings={warnings}\n      onCancel={onReject}\n      assets={[\n        {\n          icon:\n            rpcMessageDecoded?.data?.meta?.content[0].url ??\n            rpcMessageDecoded?.data?.makeAsset?.data?.meta?.content[0].url,\n          title:\n            rpcMessageDecoded?.data?.meta?.name ??\n            rpcMessageDecoded?.data?.makeAsset?.data?.meta?.name,\n          subtitle:\n            rpcMessageDecoded?.data?.collectionData?.name ??\n            rpcMessageDecoded?.data?.makeAsset?.data?.collectionData?.name,\n        },\n      ]}\n    />\n  )\n}\n\nexport default MappedFallback\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n","import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n","import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n","import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n","import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n","/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n","import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n","import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n","import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n// These constants are used to create handler registry functions using array mapping below.\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'] as const;\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'] as const;\nconst jqueryMethods = ['on', 'off'] as const;\n\nexport interface NodeStyleEventEmitter {\n  addListener(eventName: string | symbol, handler: NodeEventHandler): this;\n  removeListener(eventName: string | symbol, handler: NodeEventHandler): this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener(eventName: string, handler: NodeEventHandler): void | {};\n  removeListener(eventName: string, handler: NodeEventHandler): void | {};\n}\n\n// Use handler types like those in @types/jquery. See:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/847731ba1d7fa6db6b911c0e43aa0afe596e7723/types/jquery/misc.d.ts#L6395\nexport interface JQueryStyleEventEmitter<TContext, T> {\n  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n}\n\nexport interface EventListenerObject<E> {\n  handleEvent(evt: E): void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: EventListenerOptions | boolean\n  ): void;\n}\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\nexport function fromEvent<T>(target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>, eventName: string): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  resultSelector: (event: T) => R\n): Observable<R>;\nexport function fromEvent<T>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions,\n  resultSelector: (event: T) => R\n): Observable<R>;\n\nexport function fromEvent(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string\n): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent<T>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string,\n  resultSelector: (value: T, ...args: any[]) => R\n): Observable<R>;\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n *\n * Emit clicks happening on the DOM document\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * Use `addEventListener` with capture option\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n */\nexport function fromEvent<T>(\n  target: any,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: (...args: any[]) => T\n): Observable<T> {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    return fromEvent<T>(target, eventName, options as EventListenerOptions).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  // Figure out our add and remove methods. In order to do this,\n  // we are going to analyze the target in a preferred order, if\n  // the target matches a given signature, we take the two \"add\" and \"remove\"\n  // method names and apply them to a map to create opposite versions of the\n  // same function. This is because they all operate in duplicate pairs,\n  // `addListener(name, handler)`, `removeListener(name, handler)`, for example.\n  // The call only differs by method name, as to whether or not you're adding or removing.\n  const [add, remove] =\n    // If it is an EventTarget, we need to use a slightly different method than the other two patterns.\n    isEventTarget(target)\n      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))\n      : // In all other cases, the call pattern is identical with the exception of the method names.\n      isNodeStyleEventEmitter(target)\n      ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n      : isJQueryStyleEventEmitter(target)\n      ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n      : [];\n\n  // If add is falsy, it's because we didn't match a pattern above.\n  // Check to see if it is an ArrayLike, because if it is, we want to\n  // try to apply fromEvent to all of it's items. We do this check last,\n  // because there are may be some types that are both ArrayLike *and* implement\n  // event registry points, and we'd rather delegate to that when possible.\n  if (!add) {\n    if (isArrayLike(target)) {\n      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(\n        innerFrom(target)\n      ) as Observable<T>;\n    }\n  }\n\n  // If add is falsy and we made it here, it's because we didn't\n  // match any valid target objects above.\n  if (!add) {\n    throw new TypeError('Invalid event target');\n  }\n\n  return new Observable<T>((subscriber) => {\n    // The handler we are going to register. Forwards the event object, by itself, or\n    // an array of arguments to the event handler, if there is more than one argument,\n    // to the consumer.\n    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);\n    // Do the work of adding the handler to the target.\n    add(handler);\n    // When we finalize, we want to remove the handler and free up memory.\n    return () => remove!(handler);\n  });\n}\n\n/**\n * Used to create `add` and `remove` functions to register and unregister event handlers\n * from a target in the most common handler pattern, where there are only two arguments.\n * (e.g.  `on(name, fn)`, `off(name, fn)`, `addListener(name, fn)`, or `removeListener(name, fn)`)\n * @param target The target we're calling methods on\n * @param eventName The event name for the event we're creating register or unregister functions for\n */\nfunction toCommonHandlerRegistry(target: any, eventName: string) {\n  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);\n}\n\n/**\n * Checks to see if the target implements the required node-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {\n  return isFunction(target.addListener) && isFunction(target.removeListener);\n}\n\n/**\n * Checks to see if the target implements the required jQuery-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {\n  return isFunction(target.on) && isFunction(target.off);\n}\n\n/**\n * Checks to see if the target implements the required EventTarget methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isEventTarget(target: any): target is HasEventTargetAddRemove<any> {\n  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","export const assetAbi = {\n  contract: \"address\",\n  tokenId: \"uint256\",\n}\n","import { EthersEthereum } from \"@rarible/ethers-ethereum\"\nimport { ethers } from \"ethers\"\n\nimport { AssetId } from \"./asset-decoder\"\n\nconst ethereum = new EthersEthereum(ethers.Wallet.createRandom())\n\nexport enum AssetType {\n  ERC721 = \"0x73ad2146\",\n  ERC721_LAZY = \"0xd8f960c1\",\n  ERC1155 = \"0x973bb640\",\n  ERC1155_LAZY = \"0x1cdfaa40\",\n}\n\nexport class AssetDecoderService {\n  private ethereum: EthersEthereum\n\n  constructor(ethereum: EthersEthereum) {\n    this.ethereum = ethereum\n  }\n\n  map(abi: object, data: string): AssetId {\n    const result = this.ethereum.decodeParameter({ root: { abi } }, data)\n    return { collectionId: result[0][0][0], tokenId: result[0][0][1] }\n  }\n\n  mapLazy(abi: object, data: string): AssetId {\n    const nft =\n      \"0x0000000000000000000000000000000000000000000000000000000000000020\" +\n      data.substring(2)\n    const result = this.ethereum.decodeParameter(abi, nft)\n    return { collectionId: result[0][0], tokenId: result[0][1][0] }\n  }\n}\n\nexport const assetDecoderService = new AssetDecoderService(ethereum)\n","import { assetAbi } from \"../asset-abi\"\nimport { AssetDecoder, AssetId } from \"../asset-decoder\"\nimport {\n  assetDecoderService,\n  AssetDecoderService,\n  AssetType,\n} from \"../asset-decoder-service\"\n\nclass Erc721AssetDecoder implements AssetDecoder {\n  private assetDecoderService: AssetDecoderService\n\n  constructor(assetDecoderService: AssetDecoderService) {\n    this.assetDecoderService = assetDecoderService\n  }\n\n  getAbi(): object {\n    return assetAbi\n  }\n\n  getMethod(): string {\n    return AssetType.ERC721\n  }\n\n  map(data: string): AssetId {\n    return this.assetDecoderService.map(this.getAbi(), data)\n  }\n}\n\nexport const erc721AssetDecoder = new Erc721AssetDecoder(assetDecoderService)\n","export const erc721AssetLazyAbi = {\n  components: [\n    {\n      name: \"contract\",\n      type: \"address\",\n    },\n    {\n      components: [\n        {\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n        {\n          name: \"uri\",\n          type: \"string\",\n        },\n        {\n          components: [\n            {\n              name: \"account\",\n              type: \"address\",\n            },\n            {\n              name: \"value\",\n              type: \"uint96\",\n            },\n          ],\n          name: \"creators\",\n          type: \"tuple[]\",\n        },\n        {\n          components: [\n            {\n              name: \"account\",\n              type: \"address\",\n            },\n            {\n              name: \"value\",\n              type: \"uint96\",\n            },\n          ],\n          name: \"royalties\",\n          type: \"tuple[]\",\n        },\n        {\n          name: \"signatures\",\n          type: \"bytes[]\",\n        },\n      ],\n      name: \"data\",\n      type: \"tuple\",\n    },\n  ],\n  name: \"data\",\n  type: \"tuple\",\n}\n","import { AssetDecoder, AssetId } from \"../asset-decoder\"\nimport {\n  assetDecoderService,\n  AssetDecoderService,\n  AssetType,\n} from \"../asset-decoder-service\"\nimport { erc721AssetLazyAbi } from \"./erc721-asset-lazy-abi\"\n\nclass Erc721AssetLazyDecoder implements AssetDecoder {\n  private AssetDecoderService: AssetDecoderService\n\n  constructor(AssetDecoderService: AssetDecoderService) {\n    this.AssetDecoderService = AssetDecoderService\n  }\n\n  getAbi(): object {\n    return erc721AssetLazyAbi\n  }\n\n  getMethod(): string {\n    return AssetType.ERC721_LAZY\n  }\n\n  map(data: string): AssetId {\n    return this.AssetDecoderService.mapLazy(this.getAbi(), data)\n  }\n}\n\nexport const erc721AssetLazyDecoder = new Erc721AssetLazyDecoder(\n  assetDecoderService,\n)\n","import { assetAbi } from \"../asset-abi\"\nimport { AssetDecoder, AssetId } from \"../asset-decoder\"\nimport {\n  assetDecoderService,\n  AssetDecoderService,\n  AssetType,\n} from \"../asset-decoder-service\"\n\nclass Erc1155AssetDecoder implements AssetDecoder {\n  private AssetDecoderService: AssetDecoderService\n\n  constructor(AssetDecoderService: AssetDecoderService) {\n    this.AssetDecoderService = AssetDecoderService\n  }\n\n  getAbi(): object {\n    return assetAbi\n  }\n\n  getMethod(): string {\n    return AssetType.ERC1155\n  }\n\n  map(data: string): AssetId {\n    return this.AssetDecoderService.map(this.getAbi(), data)\n  }\n}\n\nexport const erc1155AssetDecoder = new Erc1155AssetDecoder(assetDecoderService)\n","export const erc1155AssetLazyAbi = {\n  components: [\n    {\n      name: \"contract\",\n      type: \"address\",\n    },\n    {\n      components: [\n        {\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n        {\n          name: \"uri\",\n          type: \"string\",\n        },\n        {\n          name: \"supply\",\n          type: \"uint256\",\n        },\n        {\n          components: [\n            {\n              name: \"account\",\n              type: \"address\",\n            },\n            {\n              name: \"value\",\n              type: \"uint96\",\n            },\n          ],\n          name: \"creators\",\n          type: \"tuple[]\",\n        },\n        {\n          components: [\n            {\n              name: \"account\",\n              type: \"address\",\n            },\n            {\n              name: \"value\",\n              type: \"uint96\",\n            },\n          ],\n          name: \"royalties\",\n          type: \"tuple[]\",\n        },\n        {\n          name: \"signatures\",\n          type: \"bytes[]\",\n        },\n      ],\n      name: \"data\",\n      type: \"tuple\",\n    },\n  ],\n  name: \"data\",\n  type: \"tuple\",\n}\n","import { AssetDecoder, AssetId } from \"../asset-decoder\"\nimport {\n  assetDecoderService,\n  AssetDecoderService,\n  AssetType,\n} from \"../asset-decoder-service\"\nimport { erc1155AssetLazyAbi } from \"./erc1155-asset-lazy-abi\"\n\nclass Erc1155TokenLazyDecoder implements AssetDecoder {\n  private AssetDecoderService: AssetDecoderService\n\n  constructor(AssetDecoderService: AssetDecoderService) {\n    this.AssetDecoderService = AssetDecoderService\n  }\n\n  getAbi(): object {\n    return erc1155AssetLazyAbi\n  }\n\n  getMethod(): string {\n    return AssetType.ERC1155_LAZY\n  }\n\n  map(data: string): AssetId {\n    return this.AssetDecoderService.mapLazy(this.getAbi(), data)\n  }\n}\n\nexport const erc1155TokenLazyDecoder = new Erc1155TokenLazyDecoder(\n  assetDecoderService,\n)\n","import { Decoder } from \"./decoder\"\n\nclass DependencyService {\n  group<A, I, O, T extends Decoder<A, string, I, O>>(\n    decoders: T[],\n  ): {\n    [key: string]: T\n  } {\n    return decoders\n      .map((x) => {\n        return { key: x.getMethod(), value: x }\n      })\n      .reduce((obj, item) => {\n        obj[item.key] = item.value\n        return obj\n      }, {} as Record<string, T>)\n  }\n}\n\nexport const dependencyService = new DependencyService()\n","import { Fragment, FunctionFragment, Interface } from \"ethers/lib/utils\"\n\nimport { DecodedFunctionCall } from \"./method-decoder/method-decoder\"\n\nclass FunctionCallService {\n  decode(data: string, fragment: Fragment): DecodedFunctionCall {\n    const method = fragment.name\n\n    try {\n      const iface = new Interface([fragment as Fragment])\n      const inputs = iface.decodeFunctionData(\n        FunctionFragment.from(fragment as Fragment),\n        data,\n      )\n      const names =\n        fragment.inputs?.map((input) => {\n          if (input.type.includes(\"tuple\")) {\n            return [input.name, input.components?.map((c) => c.name)]\n          }\n          return input.name\n        }) ?? []\n      const types =\n        fragment.inputs?.map((input) => {\n          if (input.type.includes(\"tuple\")) {\n            const componentTypes =\n              input.components?.map((c) => c.type).join(\",\") ?? \"\"\n            return `(${componentTypes})`\n          }\n          return input.type\n        }) ?? []\n      // FIXME:\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return { method, inputs, names, types }\n    } catch (error) {\n      console.debug(`${method} is not a match`)\n    }\n\n    return { method: \"\", inputs: [], names: [], types: [] }\n  }\n}\n\nexport const functionCallService = new FunctionCallService()\n","export const approveAbi = {\n  inputs: [\n    {\n      internalType: \"address\",\n      name: \"spender\",\n      type: \"address\",\n    },\n    {\n      internalType: \"uint256\",\n      name: \"amount\",\n      type: \"uint256\",\n    },\n  ],\n  name: \"approve\",\n  outputs: [\n    {\n      internalType: \"bool\",\n      name: \"\",\n      type: \"bool\",\n    },\n  ],\n  stateMutability: \"nonpayable\",\n  type: \"function\",\n}\n","import { BigNumber } from \"ethers\"\n\nimport {\n  DecodedFunctionCall,\n  FunctionCall,\n  MethodDecoder,\n} from \"../method-decoder\"\nimport { approveAbi } from \"./approve-abi\"\n\nexport type Approve = FunctionCall & {\n  data: {\n    spender: string\n    amount: string\n  }\n}\n\nclass ApproveMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    return approveAbi\n  }\n\n  getMethod(): string {\n    return \"0x095ea7b3\"\n  }\n\n  async map(x: DecodedFunctionCall): Promise<Approve> {\n    const [spender, amount] = x.inputs\n    return Promise.resolve({\n      interface: \"Approve\",\n      method: \"approve\",\n      data: {\n        spender,\n        amount: BigNumber.from(amount).toString(),\n      },\n    })\n  }\n}\n\nexport const approveMethodDecoder = new ApproveMethodDecoder()\n","export const bulkPurchaseAbi = {\n  inputs: [\n    {\n      components: [\n        {\n          internalType: \"enum RaribleExchangeWrapper.Markets\",\n          name: \"marketId\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"fees\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"data\",\n          type: \"bytes\",\n        },\n      ],\n      internalType: \"struct RaribleExchangeWrapper.PurchaseDetails[]\",\n      name: \"purchaseDetails\",\n      type: \"tuple[]\",\n    },\n    {\n      internalType: \"address\",\n      name: \"feeRecipientFirst\",\n      type: \"address\",\n    },\n    {\n      internalType: \"address\",\n      name: \"feeRecipientSecond\",\n      type: \"address\",\n    },\n    {\n      internalType: \"bool\",\n      name: \"allowFail\",\n      type: \"bool\",\n    },\n  ],\n  name: \"bulkPurchase\",\n  outputs: [],\n  stateMutability: \"payable\",\n  type: \"function\",\n}\n","import { BigNumber } from \"ethers\"\n\nimport { decode } from \"../../../decode-ethereum-function-call\"\nimport {\n  DecodedFunctionCall,\n  FunctionCall,\n  Item,\n  MethodDecoder,\n} from \"../method-decoder\"\nimport { bulkPurchaseAbi } from \"./bulk-purchase-abi\"\n\nexport type Buy = {\n  amount: BigNumber\n  fees: BigNumber\n  item: Item\n  marketId: number\n}\n\nexport type BulkPurchase = FunctionCall & {\n  data: {\n    allowFail: boolean\n    feeRecipientFirst: number\n    feeRecipientSecond: number\n    items: Buy[]\n  }\n}\n\nclass BulkPurchaseMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    return bulkPurchaseAbi\n  }\n\n  getMethod(): string {\n    return \"0xb94ee332\"\n  }\n\n  async map({ inputs }: DecodedFunctionCall, chainId: string): Promise<BulkPurchase> {\n    const [itemsData, feeRecipientFirst, feeRecipientSecond, allowFail] = inputs\n\n    const itemPromises = itemsData.map(async (item: any) => {\n      const [marketId, amount, fees, itemData] = item\n      const decodedItem = await decode(itemData, chainId)\n      return {\n        amount: amount.toString(),\n        fees: fees.toString(),\n        item: decodedItem,\n        marketId,\n      }\n    })\n\n    const items = await Promise.all(itemPromises)\n\n    return Promise.resolve({\n      interface: \"BatchBuyRequest\",\n      method: \"bulkPurchase\",\n      data: {\n        allowFail: allowFail as boolean,\n        feeRecipientFirst: parseInt(feeRecipientFirst, 16),\n        feeRecipientSecond: parseInt(feeRecipientSecond, 16),\n        items,\n      },\n    })\n  }\n}\n\nexport const bulkPurchaseMethodDecoder = new BulkPurchaseMethodDecoder()\n","import { functionCallDecoder } from \"./decoder/function-call-decoder\"\nimport { FunctionCall, Method } from \"./decoder/method-decoder/method-decoder\"\nimport { RpcMessageFunctionalCall } from \"./decoder/rpc-message-decoder/rpc-message-decoder\"\n\nexport interface RPCBase {\n  jsonrpc: string\n  id: string\n}\n\nexport type NfidRpcOptions = {\n  chainId?: string\n  rpcUrl?: string\n}\n\nexport interface RPCMessage extends RPCBase {\n  method: string\n  params: any[]\n  options: NfidRpcOptions\n}\n\nexport async function decodeRpcMessage(\n  rpcMessage: RPCMessage,\n): Promise<RpcMessageFunctionalCall> {\n  return functionCallDecoder.decodeRpcMessage(rpcMessage)\n}\n\nexport async function decode(data: string, chainId: string): Promise<FunctionCall> {\n  return functionCallDecoder.decode(data, chainId)\n}\n\nexport async function decodeTokenByAssetClass(\n  type: string,\n  data: string,\n  chainId: string,\n  method: Method = \"sell\",\n): Promise<FunctionCall> {\n  return functionCallDecoder.decodeByAssetClass(type, data, chainId, method)\n}\n","export const burnAbi = {\n  inputs: [\n    {\n      internalType: \"uint256\",\n      name: \"tokenId\",\n      type: \"uint256\",\n    },\n  ],\n  name: \"burn\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\",\n}\n","import {\n  DecodedFunctionCall,\n  FunctionCall,\n  MethodDecoder,\n} from \"../method-decoder\"\nimport { burnAbi } from \"./burn-abi\"\n\nexport type Burn = FunctionCall & {\n  data: {\n    tokenId: string\n  }\n}\n\nclass BurnMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    return burnAbi\n  }\n\n  getMethod(): string {\n    return \"0x42966c68\"\n  }\n\n  async map(x: DecodedFunctionCall): Promise<Burn> {\n    const [tokenId] = x.inputs\n    return Promise.resolve({\n      interface: \"Burn\",\n      method: \"burn\",\n      data: {\n        tokenId: tokenId.toString(),\n      },\n    })\n  }\n}\n\nexport const burnMethodDecoder = new BurnMethodDecoder()\n","export const cancelAbi = {\n  inputs: [\n    {\n      components: [\n        {\n          internalType: \"address\",\n          name: \"maker\",\n          type: \"address\",\n        },\n        {\n          components: [\n            {\n              components: [\n                {\n                  internalType: \"bytes4\",\n                  name: \"assetClass\",\n                  type: \"bytes4\",\n                },\n                {\n                  internalType: \"bytes\",\n                  name: \"data\",\n                  type: \"bytes\",\n                },\n              ],\n              internalType: \"struct LibAsset.AssetType\",\n              name: \"assetType\",\n              type: \"tuple\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"value\",\n              type: \"uint256\",\n            },\n          ],\n          internalType: \"struct LibAsset.Asset\",\n          name: \"makeAsset\",\n          type: \"tuple\",\n        },\n        {\n          internalType: \"address\",\n          name: \"taker\",\n          type: \"address\",\n        },\n        {\n          components: [\n            {\n              components: [\n                {\n                  internalType: \"bytes4\",\n                  name: \"assetClass\",\n                  type: \"bytes4\",\n                },\n                {\n                  internalType: \"bytes\",\n                  name: \"data\",\n                  type: \"bytes\",\n                },\n              ],\n              internalType: \"struct LibAsset.AssetType\",\n              name: \"assetType\",\n              type: \"tuple\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"value\",\n              type: \"uint256\",\n            },\n          ],\n          internalType: \"struct LibAsset.Asset\",\n          name: \"takeAsset\",\n          type: \"tuple\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"salt\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"start\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"end\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes4\",\n          name: \"dataType\",\n          type: \"bytes4\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"data\",\n          type: \"bytes\",\n        },\n      ],\n      internalType: \"struct LibOrder.Order\",\n      name: \"order\",\n      type: \"tuple\",\n    },\n  ],\n  name: \"cancel\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\",\n}\n","import { decodeTokenByAssetClass } from \"../../../decode-ethereum-function-call\"\nimport {\n  MethodDecoder,\n  FunctionCall,\n  DecodedFunctionCall,\n} from \"../method-decoder\"\nimport { cancelAbi } from \"./cancel-abi\"\n\nexport type CancelOrder = FunctionCall & {\n  data: {\n    maker: string\n    makeAsset: FunctionCall\n    taker: string\n    takeAssetPrice: string\n    salt: string\n    start: string\n    end: string\n  }\n}\n\nexport class CancelMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    return cancelAbi\n  }\n\n  getMethod(): string {\n    return \"0xe2864fe3\"\n  }\n\n  async map(x: DecodedFunctionCall, chainId: string): Promise<CancelOrder> {\n    const [[maker, makeAssets, taker, [_, takeAssetPrice], salt, start, end]] =\n      x.inputs\n    const [assetClass, assetId] = makeAssets[0]\n\n    const makeAsset = await decodeTokenByAssetClass(assetClass, assetId, chainId)\n\n    return {\n      interface: \"CancelOrder\",\n      method: \"cancel\",\n      data: {\n        maker,\n        makeAsset,\n        taker,\n        takeAssetPrice: takeAssetPrice.toString(),\n        salt: salt.toString(),\n        start: start.toString(),\n        end: end.toString(),\n      },\n    }\n  }\n}\n\nexport const cancelMethodDecoder = new CancelMethodDecoder()\n","import {\n  DecodedFunctionCall,\n  FunctionCall,\n  MethodDecoder,\n} from \"../method-decoder\"\n\nexport type CreateToken = FunctionCall & {\n  data: {\n    name: string\n    symbol: string\n    baseURI: string\n    contractURI: string\n    isPrivate: boolean\n  }\n}\n\nexport abstract class CreateTokenMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  getMethod(): string {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  async map({ inputs }: DecodedFunctionCall): Promise<CreateToken> {\n    const [name, symbol, baseURI, contractURI, isPrivate] = inputs\n\n    return Promise.resolve({\n      interface: \"CollectionRequest\",\n      method: \"createToken\",\n      data: {\n        name,\n        symbol,\n        baseURI,\n        contractURI,\n        isPrivate: !Array.isArray(isPrivate),\n      },\n    })\n  }\n}\n","export const createTokenPrivateAbi = {\n  inputs: [\n    {\n      internalType: \"string\",\n      name: \"_name\",\n      type: \"string\",\n    },\n    {\n      internalType: \"string\",\n      name: \"_symbol\",\n      type: \"string\",\n    },\n    {\n      internalType: \"string\",\n      name: \"baseURI\",\n      type: \"string\",\n    },\n    {\n      internalType: \"string\",\n      name: \"contractURI\",\n      type: \"string\",\n    },\n    {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\",\n    },\n  ],\n  name: \"createToken\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\",\n}\n","import { CreateTokenMethodDecoder } from \"../create-token-method-decoder\"\nimport { createTokenPrivateAbi } from \"./create-token-private-abi\"\n\nclass CreateTokenPrivateMethodDecoder extends CreateTokenMethodDecoder {\n  override getAbi(): object {\n    return createTokenPrivateAbi\n  }\n\n  override getMethod(): string {\n    return \"0x72397ad5\"\n  }\n}\n\nexport const createTokenPrivateMethodDecoder =\n  new CreateTokenPrivateMethodDecoder()\n","export const createTokenPublicAbi = {\n  inputs: [\n    {\n      internalType: \"string\",\n      name: \"_name\",\n      type: \"string\",\n    },\n    {\n      internalType: \"string\",\n      name: \"_symbol\",\n      type: \"string\",\n    },\n    {\n      internalType: \"string\",\n      name: \"baseURI\",\n      type: \"string\",\n    },\n    {\n      internalType: \"string\",\n      name: \"contractURI\",\n      type: \"string\",\n    },\n    {\n      internalType: \"address[]\",\n      name: \"operators\",\n      type: \"address[]\",\n    },\n    {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\",\n    },\n  ],\n  name: \"createToken\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\",\n}\n","import { CreateTokenMethodDecoder } from \"../create-token-method-decoder\"\nimport { createTokenPublicAbi } from \"./create-token-public-abi\"\n\nclass CreateTokenPublicMethodDecoder extends CreateTokenMethodDecoder {\n  override getAbi(): object {\n    return createTokenPublicAbi\n  }\n\n  override getMethod(): string {\n    return \"0x27050d1f\"\n  }\n}\n\nexport const createTokenPublicMethodDecoder =\n  new CreateTokenPublicMethodDecoder()\n","export const directAcceptBidAbi = {\n  inputs: [\n    {\n      components: [\n        {\n          internalType: \"address\",\n          name: \"bidMaker\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"bidNftAmount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes4\",\n          name: \"nftAssetClass\",\n          type: \"bytes4\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"nftData\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"bidPaymentAmount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"address\",\n          name: \"paymentToken\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"bidSalt\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"bidStart\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"bidEnd\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes4\",\n          name: \"bidDataType\",\n          type: \"bytes4\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"bidData\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"bidSignature\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"sellOrderPaymentAmount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"sellOrderNftAmount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"sellOrderData\",\n          type: \"bytes\",\n        },\n      ],\n      internalType: \"struct LibDirectTransfer.AcceptBid\",\n      name: \"direct\",\n      type: \"tuple\",\n    },\n  ],\n  name: \"directAcceptBid\",\n  outputs: [],\n  stateMutability: \"payable\",\n  type: \"function\",\n}\n","import { decodeTokenByAssetClass } from \"../../../decode-ethereum-function-call\"\nimport {\n  DecodedFunctionCall,\n  FunctionCall,\n  MethodDecoder,\n} from \"../method-decoder\"\nimport { directAcceptBidAbi } from \"./direct-accept-bid-abi\"\n\nexport type DirectAcceptBid = FunctionCall & {\n  data: {\n    bidMaker: string\n    bidNftAmount: string\n    nft: FunctionCall\n    bidPaymentAmount: string\n    paymentToken: string\n    bidSalt: string\n    bidStart: string\n    bidEnd: string\n    bidDataType: string\n    bidData: string\n    bidSignature: string\n    sellOrderPaymentAmount: string\n    sellOrderNftAmount: string\n    sellOrderData: string\n  }\n}\n\nclass DirectAcceptBidMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    return directAcceptBidAbi\n  }\n\n  getMethod(): string {\n    return \"0x67d49a3b\"\n  }\n\n  async map(x: DecodedFunctionCall, chainId: string): Promise<DirectAcceptBid> {\n    const [\n      bidMaker,\n      bidNftAmount,\n      nftAssetClass,\n      nftData,\n      bidPaymentAmount,\n      paymentToken,\n      bidSalt,\n      bidStart,\n      bidEnd,\n      bidDataType,\n      bidData,\n      bidSignature,\n      sellOrderPaymentAmount,\n      sellOrderNftAmount,\n      sellOrderData,\n    ] = x.inputs[0]\n    const nft: FunctionCall = await decodeTokenByAssetClass(\n      nftAssetClass,\n      nftData,\n      chainId\n    )\n    return Promise.resolve({\n      interface: \"DirectAcceptBid\",\n      method: \"directAcceptBid\",\n      data: {\n        bidMaker,\n        bidNftAmount: bidNftAmount.toString(),\n        nft,\n        bidPaymentAmount: bidPaymentAmount.toString(),\n        paymentToken,\n        bidSalt: bidSalt.toString(),\n        bidStart: bidStart.toString(),\n        bidEnd: bidEnd.toString(),\n        bidDataType,\n        bidData,\n        bidSignature,\n        sellOrderPaymentAmount: sellOrderPaymentAmount.toString(),\n        sellOrderNftAmount: sellOrderNftAmount.toString(),\n        sellOrderData,\n      },\n    })\n  }\n}\n\nexport const directAcceptBidMethodDecoder = new DirectAcceptBidMethodDecoder()\n","export const directPurchaseAbi = {\n  inputs: [\n    {\n      components: [\n        {\n          internalType: \"address\",\n          name: \"sellOrderMaker\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"sellOrderNftAmount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes4\",\n          name: \"nftAssetClass\",\n          type: \"bytes4\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"nftData\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"sellOrderPaymentAmount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"address\",\n          name: \"paymentToken\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"sellOrderSalt\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"sellOrderStart\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"sellOrderEnd\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes4\",\n          name: \"sellOrderDataType\",\n          type: \"bytes4\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"sellOrderData\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"sellOrderSignature\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"buyOrderPaymentAmount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"buyOrderNftAmount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"buyOrderData\",\n          type: \"bytes\",\n        },\n      ],\n      internalType: \"struct LibDirectTransfer.Purchase\",\n      name: \"direct\",\n      type: \"tuple\",\n    },\n  ],\n  name: \"directPurchase\",\n  outputs: [],\n  stateMutability: \"payable\",\n  type: \"function\",\n}\n","import { decodeTokenByAssetClass } from \"../../../decode-ethereum-function-call\"\nimport {\n  DecodedFunctionCall,\n  FunctionCall,\n  MethodDecoder,\n} from \"../method-decoder\"\nimport { directPurchaseAbi } from \"./direct-purchase-abi\"\n\nexport type DirectPurchase = FunctionCall\n\nclass DirectPurchaseMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    return directPurchaseAbi\n  }\n\n  getMethod(): string {\n    return \"0x0d5f7d35\"\n  }\n\n  async map({ inputs }: DecodedFunctionCall, chainId: string): Promise<DirectPurchase> {\n    const [[, , type, content]] = inputs\n    return await decodeTokenByAssetClass(type, content, chainId, \"directPurchase\")\n  }\n}\n\nexport const directPurchaseMethodDecoder = new DirectPurchaseMethodDecoder()\n","export const mintAndTransferAbi = {\n  inputs: [\n    {\n      components: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"string\",\n          name: \"tokenURI\",\n          type: \"string\",\n        },\n        {\n          components: [\n            {\n              internalType: \"address payable\",\n              name: \"account\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint96\",\n              name: \"value\",\n              type: \"uint96\",\n            },\n          ],\n          internalType: \"struct LibPart.Part[]\",\n          name: \"creators\",\n          type: \"tuple[]\",\n        },\n        {\n          components: [\n            {\n              internalType: \"address payable\",\n              name: \"account\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint96\",\n              name: \"value\",\n              type: \"uint96\",\n            },\n          ],\n          internalType: \"struct LibPart.Part[]\",\n          name: \"royalties\",\n          type: \"tuple[]\",\n        },\n        {\n          internalType: \"bytes[]\",\n          name: \"signatures\",\n          type: \"bytes[]\",\n        },\n      ],\n      internalType: \"struct LibERC721LazyMint.Mint721Data\",\n      name: \"data\",\n      type: \"tuple\",\n    },\n    {\n      internalType: \"address\",\n      name: \"to\",\n      type: \"address\",\n    },\n  ],\n  name: \"mintAndTransfer\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\",\n}\n","import {\n  DecodedFunctionCall,\n  FunctionCall,\n  MethodDecoder,\n} from \"../method-decoder\"\nimport { mintAndTransferAbi } from \"./mint-and-transfer-abi\"\n\nexport type Creator = {\n  creator: string\n  value: string\n}\n\nexport type MintAndTransfer = FunctionCall & {\n  data: {\n    tokenId: string\n    tokenURI: string\n    creators: Creator[]\n    royalties: string\n    signatures: string[]\n    to: string\n  }\n}\n\nclass MintAndTransferMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    return mintAndTransferAbi\n  }\n\n  getMethod(): string {\n    return \"0x22a775b6\"\n  }\n\n  async map({ inputs }: DecodedFunctionCall): Promise<MintAndTransfer> {\n    const [[tokenId, tokenURI, creators, royalties, signatures], to] = inputs\n\n    const mappedCreators = creators.map((creator: any) => ({\n      creator: creator[0],\n      value: creator[1].toString(),\n    }))\n\n    return Promise.resolve({\n      interface: \"MintRequest\",\n      method: \"mintAndTransfer\",\n      data: {\n        tokenId: tokenId.toString(),\n        tokenURI,\n        creators: mappedCreators,\n        royalties,\n        signatures,\n        to,\n      },\n    })\n  }\n}\n\nexport const mintAndTransferMethodDecoder = new MintAndTransferMethodDecoder()\n","export const safeTransferFromAbi = {\n  inputs: [\n    {\n      internalType: \"address\",\n      name: \"from\",\n      type: \"address\",\n    },\n    {\n      internalType: \"address\",\n      name: \"to\",\n      type: \"address\",\n    },\n    {\n      internalType: \"uint256\",\n      name: \"id\",\n      type: \"uint256\",\n    },\n    {\n      internalType: \"uint256\",\n      name: \"amount\",\n      type: \"uint256\",\n    },\n    {\n      internalType: \"bytes\",\n      name: \"data\",\n      type: \"bytes\",\n    },\n  ],\n  name: \"safeTransferFrom\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\",\n}\n","import {\n  DecodedFunctionCall,\n  FunctionCall,\n  MethodDecoder,\n} from \"../method-decoder\"\nimport { safeTransferFromAbi } from \"./safe-transfer-from-abi\"\n\nexport type SafeTransferFrom = FunctionCall & {\n  data: {\n    from: string\n    to: string\n    id: string\n    amount: string\n    data: string\n  }\n}\n\nclass SafeTransferFromMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    return safeTransferFromAbi\n  }\n\n  getMethod(): string {\n    return \"0xf242432a\"\n  }\n\n  async map({ inputs }: DecodedFunctionCall): Promise<SafeTransferFrom> {\n    const [from, to, id, amount, data] = inputs\n    return Promise.resolve({\n      interface: \"SafeTransferFrom\",\n      method: \"safeTransferFrom\",\n      data: {\n        from,\n        to,\n        id: id.toString(),\n        amount: amount.toString(),\n        data,\n      },\n    })\n  }\n}\n\nexport const safeTransferFromMethodDecoder = new SafeTransferFromMethodDecoder()\n","export const setApprovalForAllAbi = {\n  inputs: [\n    {\n      internalType: \"address\",\n      name: \"operator\",\n      type: \"address\",\n    },\n    {\n      internalType: \"bool\",\n      name: \"approved\",\n      type: \"bool\",\n    },\n  ],\n  name: \"setApprovalForAll\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\",\n}\n","import {\n  DecodedFunctionCall,\n  FunctionCall,\n  MethodDecoder,\n} from \"../method-decoder\"\nimport { setApprovalForAllAbi } from \"./set-approval-for-all-abi\"\n\nexport type SetApprovalForAll = FunctionCall & {\n  data: {\n    operator: string\n    approved: boolean\n  }\n}\n\nclass SetApprovalForAllMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    return setApprovalForAllAbi\n  }\n\n  getMethod(): string {\n    return \"0xa22cb465\"\n  }\n\n  async map(x: DecodedFunctionCall): Promise<SetApprovalForAll> {\n    const [operator, approved] = x.inputs\n    return Promise.resolve({\n      interface: \"SetApprovalForAll\",\n      method: \"setApprovalForAll\",\n      data: {\n        operator,\n        approved,\n      },\n    })\n  }\n}\n\nexport const setApprovalForAllMethodDecoder =\n  new SetApprovalForAllMethodDecoder()\n","import { Interface, Method } from \"../method-decoder/method-decoder\"\n\nexport type RpcMessageFunctionalCall = {\n  interface: Interface\n  method: Method\n  data: object\n  from: string\n  to?: string\n  maxFeePerGas?: string\n  maxPriorityFeePerGas?: string\n  value?: string\n}\n\nexport type RpcMessageDecoder = {\n  method: string\n  decode: (params: any[], chainId: string) => Promise<RpcMessageFunctionalCall>\n}\n\nexport const parseHex = (x: string): string =>\n  (Number(parseInt(x, 16)) / 10 ** 18).toString()\n","import { functionCallDecoder } from \"../function-call-decoder\"\nimport {\n  RpcMessageDecoder,\n  RpcMessageFunctionalCall,\n  parseHex,\n} from \"./rpc-message-decoder\"\n\nexport const ethSendTransactionRpcMessageDecoder: RpcMessageDecoder = {\n  method: \"eth_sendTranscation\",\n  decode: async ([parameter]: any[], chainId: string): Promise<RpcMessageFunctionalCall> => {\n    const data = await functionCallDecoder.decode(parameter.data, chainId)\n\n    return Promise.resolve({\n      interface: data.interface,\n      method: data.method,\n      data: data.data,\n      from: parameter.from,\n      to: parameter.to,\n      maxFeePerGas: parseHex(parameter.maxFeePerGas),\n      maxPriorityFeePerGas: parseHex(parameter.maxPriorityFeePerGas),\n      value: parameter.value ? parseHex(parameter.value) : undefined,\n    })\n  },\n}\n","import {\n  RpcMessageDecoder,\n  RpcMessageFunctionalCall,\n} from \"./rpc-message-decoder\"\n\nexport const personalSignRpcMessageDecoder: RpcMessageDecoder = {\n  method: \"personal_sign\",\n  decode: async (params: string[]): Promise<RpcMessageFunctionalCall> => {\n    const message = Buffer.from(params[0].slice(2), \"hex\").toString(\"utf8\")\n    const from = params[1]\n\n    return Promise.resolve({\n      interface: \"PersonalSign\",\n      method: \"personalSign\",\n      data: { message },\n      from: from,\n    })\n  },\n}\n","import {\n  RpcMessageDecoder,\n  RpcMessageFunctionalCall,\n} from \"./rpc-message-decoder\"\nimport { mint721SignTypedDataV4RpcMessageDecoder } from \"./sign-typed-data-v4-rpc-message-decoder/mint721-sign-typed-data-v4-rpc-message-decoder\"\nimport { mint1155SignTypedDataV4RpcMessageDecoder } from \"./sign-typed-data-v4-rpc-message-decoder/mint1155-sign-typed-data-v4-rpc-message-decoder\"\nimport { orderSignTypedDataV4RpcMessageDecoder } from \"./sign-typed-data-v4-rpc-message-decoder/order-sign-typed-data-v4-rpc-message-decoder copy\"\n\nexport type SignTypedDataV4RpcMessageDecoder = {\n  decode: (from: string, json: object, chainId: string) => Promise<RpcMessageFunctionalCall>\n}\n\nconst decoders: { [key: string]: SignTypedDataV4RpcMessageDecoder } = {\n  Order: orderSignTypedDataV4RpcMessageDecoder,\n  Mint721: mint721SignTypedDataV4RpcMessageDecoder,\n  Mint1155: mint1155SignTypedDataV4RpcMessageDecoder,\n}\n\nexport const signTypedDataV4RpcMessageDecoder: RpcMessageDecoder = {\n  method: \"eth_signTypedData_v4\",\n  decode: async ([\n    from,\n    parameter,\n  ]: any[], chainId: string): Promise<RpcMessageFunctionalCall> => {\n    const json = JSON.parse(parameter)\n    const type = json.primaryType\n\n    const decoder = decoders[type]\n\n    if (!decoder) {\n      throw new Error(\"No sign typed data decoder found\")\n    }\n\n    return decoder.decode(from, json, chainId)\n  },\n}\n","import { AssetType } from \"../../asset-decoder/asset-decoder-service\"\nimport { functionCallDecoder } from \"../../function-call-decoder\"\nimport { Method } from \"../../method-decoder/method-decoder\"\nimport { RpcMessageFunctionalCall } from \"../rpc-message-decoder\"\nimport { SignTypedDataV4RpcMessageDecoder } from \"../sign-typed-data-v4-rpc-message-decoder.\"\n\nexport const orderSignTypedDataV4RpcMessageDecoder: SignTypedDataV4RpcMessageDecoder =\n  {\n    decode: async (\n      from: string,\n      json: any,\n      chainId: string\n    ): Promise<RpcMessageFunctionalCall> => {\n      const makeAsset = json.message.makeAsset.assetType\n      const takeAsset = json.message.takeAsset.assetType\n\n      // if the first element is NFI, then it's a sell, otherwise it's a bid.\n      const isSell = Object.values(AssetType).includes(makeAsset.assetClass)\n      const asset = isSell\n        ? {\n            method: \"SellOrder\" as Method,\n            value: makeAsset,\n            currency: takeAsset,\n          }\n        : {\n            method: \"BidOrder\" as Method,\n            value: takeAsset,\n            currency: makeAsset,\n          }\n\n      const data = await functionCallDecoder.decodeByAssetClass(\n        asset.value.assetClass,\n        asset.value.data,\n        chainId\n      )\n\n      if (asset.currency.assetClass !== \"0xaaaebeba\") {\n        throw Error(\"Not a native token.\")\n      }\n\n      return Promise.resolve({\n        interface: \"Item\",\n        method: asset.method,\n        data: data.data,\n        from: from,\n        total: Number(json?.message?.takeAsset?.value) / 10 ** 18,\n      })\n    },\n  }\n","import { RpcMessageFunctionalCall } from \"../rpc-message-decoder\"\nimport { SignTypedDataV4RpcMessageDecoder } from \"../sign-typed-data-v4-rpc-message-decoder.\"\n\nexport type MintLazy721 = {\n  contract: string\n  uri: string\n  tokenId: string\n  royalties: any[]\n  creators: any[]\n}\n\nexport const mint721SignTypedDataV4RpcMessageDecoder: SignTypedDataV4RpcMessageDecoder =\n  {\n    decode: async (\n      from: string,\n      json: any,\n    ): Promise<RpcMessageFunctionalCall> => {\n      const { contract, uri, tokenId, royalties, creators } = json.message\n\n      return Promise.resolve({\n        interface: \"MintLazy721\",\n        method: \"Mint721\",\n        from,\n        data: {\n          contract,\n          uri,\n          tokenId,\n          royalties,\n          creators,\n        },\n      })\n    },\n  }\n","import { RpcMessageFunctionalCall } from \"../rpc-message-decoder\"\nimport { SignTypedDataV4RpcMessageDecoder } from \"../sign-typed-data-v4-rpc-message-decoder.\"\n\nexport type MintLazy1155 = {\n  contract: string\n  uri: string\n  tokenId: string\n  supply: string\n  account: string\n  royalties: any[]\n  creators: any[]\n}\n\nexport const mint1155SignTypedDataV4RpcMessageDecoder: SignTypedDataV4RpcMessageDecoder =\n  {\n    decode: async (\n      from: string,\n      json: any,\n    ): Promise<RpcMessageFunctionalCall> => {\n      const { contract, uri, tokenId, supply, creators, royalties } =\n        json.message\n      const { account } = creators[0]\n\n      return Promise.resolve({\n        interface: \"MintLazy1155\",\n        method: \"Mint1155\",\n        from,\n        data: {\n          contract,\n          uri,\n          tokenId,\n          supply,\n          account,\n          creators,\n          royalties,\n        },\n      })\n    },\n  }\n","import { createRaribleSdk } from \"@rarible/sdk\"\nimport { Fragment } from \"ethers/lib/utils\"\n\nimport { RPCMessage } from \"../decode-ethereum-function-call\"\nimport { erc721AssetDecoder } from \"./asset-decoder/erc721-asset-decoder/erc721-asset-decoder\"\nimport { erc721AssetLazyDecoder } from \"./asset-decoder/erc721-asset-decoder/erc721-asset-lazy-decoder\"\nimport { erc1155AssetDecoder } from \"./asset-decoder/erc1155-asset-decoder/erc1155-asset-decoder\"\nimport { erc1155TokenLazyDecoder } from \"./asset-decoder/erc1155-asset-decoder/erc1155-asset-lazy-decoder\"\nimport { dependencyService } from \"./dependency-service\"\nimport { functionCallService } from \"./function-call-service\"\nimport { approveMethodDecoder } from \"./method-decoder/approve/approve-method-decoder\"\nimport { bulkPurchaseMethodDecoder } from \"./method-decoder/bulk-purchase/bulk-purchase-method-decoder\"\nimport { burnMethodDecoder } from \"./method-decoder/burn/burn-method-decoder\"\nimport { cancelMethodDecoder } from \"./method-decoder/cancel/cancel-method-decoder\"\nimport { createTokenPrivateMethodDecoder } from \"./method-decoder/create-token/create-token-private/create-token-private-method-decoder\"\nimport { createTokenPublicMethodDecoder } from \"./method-decoder/create-token/create-token-public/create-token-public-method-decoder\"\nimport { directAcceptBidMethodDecoder } from \"./method-decoder/direct-accept-bid/direct-accept-bid-method-decoder\"\nimport { directPurchaseMethodDecoder } from \"./method-decoder/direct-purchase/direct-purchase-method-decoder\"\nimport {\n  FunctionCall,\n  Method,\n  MethodDecoder,\n} from \"./method-decoder/method-decoder\"\nimport { mintAndTransferMethodDecoder } from \"./method-decoder/mint/mint-and-transfer-method-decoder\"\nimport { safeTransferFromMethodDecoder } from \"./method-decoder/safe-transfer-from/safe-transfer-from-method-decoder\"\nimport { setApprovalForAllMethodDecoder } from \"./method-decoder/set-approval-for-all/set-approval-for-all-method-decoder\"\nimport { ethSendTransactionRpcMessageDecoder } from \"./rpc-message-decoder/eth-sendtransaction-rpc-message-decoder\"\nimport { personalSignRpcMessageDecoder } from \"./rpc-message-decoder/personal-sign-decoder\"\nimport {\n  RpcMessageFunctionalCall,\n  RpcMessageDecoder,\n} from \"./rpc-message-decoder/rpc-message-decoder\"\nimport { signTypedDataV4RpcMessageDecoder } from \"./rpc-message-decoder/sign-typed-data-v4-rpc-message-decoder.\"\n\nconst methodDecoders: Record<string, MethodDecoder> = dependencyService.group([\n  cancelMethodDecoder,\n  directAcceptBidMethodDecoder,\n  burnMethodDecoder,\n  safeTransferFromMethodDecoder,\n  bulkPurchaseMethodDecoder,\n  directPurchaseMethodDecoder,\n  createTokenPrivateMethodDecoder,\n  createTokenPublicMethodDecoder,\n  mintAndTransferMethodDecoder,\n  setApprovalForAllMethodDecoder,\n  approveMethodDecoder,\n])\nconst assetDecoders = dependencyService.group([\n  erc721AssetDecoder,\n  erc721AssetLazyDecoder,\n  erc1155AssetDecoder,\n  erc1155TokenLazyDecoder,\n])\nconst rpcMessageDecoders: { [key: string]: RpcMessageDecoder } = {\n  eth_sendTransaction: ethSendTransactionRpcMessageDecoder,\n  eth_signTypedData_v4: signTypedDataV4RpcMessageDecoder,\n  personal_sign: personalSignRpcMessageDecoder,\n}\n\nexport const functionCallDecoder = {\n  decode(data: string, chainId: string): Promise<FunctionCall> {\n    const method = data.substring(0, 10)\n    const methodDecoder = methodDecoders[method]\n\n    if (!methodDecoder) {\n      throw new Error(\"No method decoder found\")\n    }\n\n    const fragment = methodDecoder.getAbi() as Fragment\n    const decodedData = functionCallService.decode(data, fragment)\n    return methodDecoder.map(decodedData, chainId)\n  },\n\n  async decodeByAssetClass(\n    type: string,\n    data: string,\n    chainId: string,\n    method: Method = \"sell\",\n  ): Promise<FunctionCall> {\n    const assetDecoder = assetDecoders[type]\n\n    if (!assetDecoder) {\n      throw new Error(\"No asset decoder found\")\n    }\n\n    const tokenId = assetDecoder.map(data)\n    const env = chainId === \"0x01\" ? \"prod\" : \"testnet\"\n    const sdk = createRaribleSdk(null, env)\n    const [item, collection] = await Promise.all([\n      await sdk.apis.item.getItemById({\n        itemId: `ETHEREUM:${tokenId.collectionId}:${tokenId.tokenId}`,\n      }),\n      await sdk.apis.collection.getCollectionById({\n        collection: `ETHEREUM:${tokenId?.collectionId}`,\n      }),\n    ])\n\n    return {\n      interface: \"Item\",\n      method: method,\n      data: {\n        ...item,\n        collectionData: collection,\n      },\n    }\n  },\n\n  async decodeRpcMessage({\n    method,\n    params,\n    options\n  }: RPCMessage): Promise<RpcMessageFunctionalCall> {\n    const rpcMessageDecoder = rpcMessageDecoders[method]\n\n    if (!rpcMessageDecoder) {\n      throw new Error(\"No rpc message decoder found\")\n    }\n\n    const data = await rpcMessageDecoder.decode(params, options.chainId ?? \"\")\n\n    if ([\"directPurchase\"].includes(data.method) && !params[0].value) {\n      throw Error(\"Not a native token.\")\n    }\n\n    return data\n  },\n}\n","import { filter, fromEvent, map } from \"rxjs\"\n\nimport { decodeRpcMessage, FunctionCall } from \"@nfid/integration-ethereum\"\n\nexport const RPC_BASE = { jsonrpc: \"2.0\" }\n\nexport interface RPCBase {\n  jsonrpc: string\n  id: string\n}\n\nexport type NfidRpcOptions = {\n  chainId?: string\n  rpcUrl?: string\n}\n\nexport interface RPCMessage extends RPCBase {\n  method: string\n  params: any[]\n  options: NfidRpcOptions\n}\n\ninterface RPCSuccessResponse extends RPCBase {\n  result: any\n}\n\ninterface RPCErrorResponse extends RPCBase {\n  error: {\n    code: number\n    message: string\n    data: any\n  }\n}\n\nexport type RPCResponse = RPCSuccessResponse | RPCErrorResponse\n\nconst windowMessages = fromEvent<MessageEvent<RPCMessage>>(window, \"message\")\n\nexport const rpcMessages = windowMessages.pipe(\n  filter((event) => event.data && event.data.jsonrpc === \"2.0\"),\n)\n\nexport const RPCReceiver = () =>\n  rpcMessages.pipe(\n    map(async ({ data, origin }) => {\n      switch (data.method) {\n        case \"eth_accounts\":\n          return { type: \"CONNECT_ACCOUNT\", data, origin }\n        case \"eth_sendTransaction\":\n          return { type: \"SEND_TRANSACTION\", data, origin }\n        case \"eth_signTypedData_v4\":\n          return { type: \"SIGN_TYPED_DATA\", data, origin }\n        default:\n          throw new Error(`Unknown method: ${data.method}`)\n      }\n    }),\n  )\n\ntype ProcedureDetails = {\n  rpcMessage: RPCMessage\n  rpcMessageDecoded?: FunctionCall\n  origin: string\n}\n\nexport type ProcedureCallEvent = {\n  type: \"RPC_MESSAGE\"\n  data: ProcedureDetails\n}\n\nexport const RPCReceiverV2 =\n  () => (send: (event: ProcedureCallEvent) => void) => {\n    const subsciption = rpcMessages.subscribe(\n      async ({ data: rpcMessage, origin }) => {\n        console.debug(\"RPCReceiverV2\", { rpcMessage, origin })\n        switch (rpcMessage.method) {\n          case \"eth_accounts\":\n            return send({\n              type: \"RPC_MESSAGE\",\n              data: { rpcMessage, origin },\n            })\n          case \"eth_sendTransaction\":\n            const rpcMessageDecoded = await decodeMessage(rpcMessage)\n\n            return send({\n              type: \"RPC_MESSAGE\",\n              data: {\n                rpcMessage,\n                rpcMessageDecoded,\n                origin,\n              },\n            })\n          case \"eth_signTypedData_v4\":\n            const rpcMessageDecodedTypedData = await decodeMessage(rpcMessage)\n            return send({\n              type: \"RPC_MESSAGE\",\n              data: {\n                rpcMessage,\n                rpcMessageDecoded: rpcMessageDecodedTypedData,\n                origin,\n              },\n            })\n          case \"personal_sign\":\n            const rpcMessagePersonalSign = await decodeMessage(rpcMessage)\n            return send({\n              type: \"RPC_MESSAGE\",\n              data: {\n                rpcMessage,\n                rpcMessageDecoded: rpcMessagePersonalSign,\n                origin,\n              },\n            })\n          default:\n            throw new Error(\n              `RPCReceiverV2 unknown method: ${rpcMessage.method}`,\n            )\n        }\n      },\n    )\n    return () => subsciption.unsubscribe()\n  }\n\nconst decodeMessage = async (\n  rpcMessage: RPCMessage,\n): Promise<FunctionCall | undefined> => {\n  try {\n    return await decodeRpcMessage(rpcMessage)\n  } catch (error: any) {\n    console.warn(\"decodeRPCMEssage\", { error })\n    return undefined\n  }\n}\n","import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n","import { getExpirationDelay } from \"packages/integration/src/lib/authentication/get-expiration\"\nimport { assign, createMachine } from \"xstate\"\n\nimport { Application, authState } from \"@nfid/integration\"\nimport { FunctionCall } from \"@nfid/integration-ethereum\"\n\nimport { AuthSession } from \"frontend/state/authentication\"\nimport { AuthorizingAppMeta } from \"frontend/state/authorization\"\n\nimport AuthenticationMachine from \"../authentication/root/root-machine\"\nimport { CheckApplicationMeta } from \"./services/check-app-meta\"\nimport { CheckAuthState } from \"./services/check-auth-state\"\nimport {\n  ExecuteProcedureService,\n  ApproveSignatureEvent,\n} from \"./services/execute-procedure\"\nimport {\n  ProcedureCallEvent,\n  RPCMessage,\n  RPCReceiverV2 as RPCReceiver,\n  RPCResponse,\n  RPC_BASE,\n} from \"./services/rpc-receiver\"\n\ntype InvokationErrors = {\n  type: \"error.platform.NFIDEmbedMachineV2.HANDLE_PROCEDURE.EXECUTE_PROCEDURE:invocation[0]\"\n  data: Error\n}\n\ntype Events =\n  | InvokationErrors\n  | ProcedureCallEvent\n  | { type: \"SESSION_EXPIRED\" }\n  | {\n      type: \"APPROVE\"\n      data?: ApproveSignatureEvent\n    }\n  | { type: \"CANCEL\" }\n  | { type: \"CANCEL_ERROR\" }\n  | { type: \"RETRY\" }\n\ntype Services = {\n  RPCReceiver: {\n    data: null\n  }\n  CheckAuthState: {\n    data: { authSession: AuthSession }\n  }\n  AuthenticationMachine: {\n    data: { authSession: AuthSession }\n  }\n  ExecuteProcedureService: {\n    data: RPCResponse\n  }\n  CheckApplicationMeta: {\n    data: Application\n  }\n}\n\ntype NFIDEmbedMachineContext = {\n  appMeta: AuthorizingAppMeta\n  authRequest: {\n    hostname: string\n  }\n  authSession?: AuthSession\n  requestOrigin?: string\n  rpcMessage?: RPCMessage\n  rpcMessageDecoded?: FunctionCall\n  error?: Error\n  messageQueue: Array<RPCMessage>\n}\n\nexport const NFIDEmbedMachineV2 = createMachine(\n  {\n    /** @xstate-layout N4IgpgJg5mDOIC5QDkBiBJAIgUQLYCNIBZAQwGMALASwDswA1AJgDoAlABQGEB9V7T7OnrZWAYnasA8gMwBVPt04BBADIqA2gAYAuolAAHAPawqAFyqGaekAA9EAZgAsLRgDZXAdjeuAnIwCs-h72HgA0IACeDgAcrsya9rEesY4+Ho7urgC+WeFoWHiEEKSUtAwsHDx8AkIi4lIy8tiKqhoAjLpIIEYm5pbWdgj2w8z2Pm2Ompnjmv4+-uFRCI7RPqOMIYyrHpo+4045eRg4BMTk1HRMzEqyACoAEsycFGBkANZKAK6mLzTmZCQ+jRRFpOgZjGYLFYuoNGH5mGkfLtovY2sEPB5XItEG1US5NClXG4Mm0EocQPkTkUShdytc7o9nq8Pt9fv9AVCQR1rD1If0YQ4EsxVvZNG1XP5XKlktiEG1-ELGJNXG1GIw2hNieTKYUzqVLiwbg9rqywH8qADTGBRBBLGBmLQAG6GN72nWnYrnMpXI2PL4-M3sq0IJ2GS1Q0GgnkQoEDRDRBXMBWJJzRHZuNqyiYeNb+CZi0XzRjJHza466z36um+5i3ABOn1gpkwYEdFuttroDpoztdzHd1K9BvpxvrjebrfbIZ7YY5lkjOmjvShcblgRY8o8-kcmP8SvsSqzCpY8xR-lW0Wl6TLBQ9NO9hoZJoD5stkFEAGVsB+P+hJMhuGwAANdh0D4TAoy6XlYwFBAiX8BEfEcIJoi2TQMi3LN7H8exmDVUV7HcMUMMcG8qT1WkrnuJRkEwFRmgkaRsDkPg2GwJRMAATRBRcoJjFdYLaNJmAyJE8ycCV0VlS9cMcRIVkcSYcw8eUyIre9h2o2j6O4RjGlYpQAHUlHQW5dIaZimm4JR2EY+hVFEGy7OwSDwWXflQEGaIhOYLd1U0YICWwnxpMcNpmDaaIE3QvMpQlRg1LvIc6S0uiGIsljsGuYzTPMpjMus2ypHslRRGUZABA0Xi3L5aFPMQVIEIVCUnCVHc5icWUfEIkTutcEIJkRPNEsHKsqJotK8v0rLgP4O50vypobTtbtezdcskrGlhUp0vTLNY2bOHmqb9uwadnXDecdFc7p+I82wcQSRxmHcYIfCind0gCrrkgReLUVxfDUJGiiH2YHaFum5hDuOvbMtEMA6zrQw62YfQABtAQAMxR3B+w20bKO2ibdoyppoaAubbkh07ztnIEFzBW73Lqh65TC8Lok0LY0zcJwfBVUKWBUkJZhzeVsI8EHKyJ8GSZpzLodYKQxD4W5WE4m7oIE+q5Q2NZUUIrwDz2NJGFlYJnrC4ZSTGeYFVLXIKQJ0HNPlk7FZEFWypozgdK9yRWC1u7WcGeUpTw1V3GGHZJXNyJHuEwIhMSVYVhCHInZoQwIDgawB1d8ol1q1cAFolSTXZtw2bynASTME4QOFoiTRJPB3LYo4Sp2C5lsHKl4fhBGEVhi5g3XRSTUk9lrrd0QJWUOdGS8MT8XFUhWaWNOrBkx51tmNl6mLMUiiUBZCxvVQrnZYkCbnvPPfwt+Sn0nyZd5-TZC051Z7X7sGFSR9kIn1vufI8mhNCIVmGmfqao8zdyOLeQmYMayf0DN-K0e9-4NS5i9ISzgxhixVA3JYExAijAlNuIkaYcKxGfltEcjwxxNhbG2MgYAsGhxxJFJqiQ-ABACgqNMWZkIIUItud6sw77oXobLVBppXyAkgJw1ckVUijFPsMTwUp5giPIeIqhWwtxt1kWDCGHsmgqNggEeIYxXquHQmmNEujG5xQRIDbqOZiwqkdog8ifc3baQVuTPgHFOJWN1sEWxAttGOJUtEUK4VIor1xKKOS4pTGBMmnDcmRkTJmRyQoJyxVVARLZmFOIhEtgHgSMmdIWJG6XiSVFBUyFxQZD3JklK7tCkzUpkdamFi+BlLDgkDcKoO7vUUkSaSaIXofRzGmYIGw2hdPGkEoZM1laBxGTiLwHgIrt0IkiXcYRGlhQigs1J6FUTZEzkAA */\n    id: \"NFIDEmbedMachineV2\",\n    preserveActionOrder: true,\n    tsTypes: {} as import(\"./machine-v2.typegen\").Typegen0,\n    type: \"parallel\",\n    schema: {\n      context: {} as NFIDEmbedMachineContext,\n      events: {} as Events,\n      services: {} as Services,\n    },\n    context: {\n      messageQueue: [],\n      appMeta: {},\n      authRequest: {\n        hostname: \"\",\n      },\n    },\n    states: {\n      RPC_RECEIVER: {\n        invoke: {\n          src: \"RPCReceiver\",\n        },\n        on: {\n          RPC_MESSAGE: [\n            {\n              target: \"RPC_RECEIVER\",\n              actions: \"assignProcedure\",\n              cond: \"isReady\",\n            },\n            {\n              target: \"RPC_RECEIVER\",\n              actions: \"queueRequest\",\n            },\n          ],\n        },\n      },\n\n      AUTH: {\n        initial: \"CheckAppMeta\",\n        states: {\n          CheckAppMeta: {\n            invoke: {\n              src: \"CheckApplicationMeta\",\n              onDone: {\n                target: \"CheckAuthentication\",\n                actions: \"assignAppMeta\",\n              },\n            },\n          },\n          CheckAuthentication: {\n            invoke: {\n              src: \"CheckAuthState\",\n              onDone: {\n                target: \"Authenticated\",\n                actions: [\"assignAuthSession\", \"nfid_authenticated\"],\n              },\n              onError: \"Authenticate\",\n            },\n          },\n          Authenticate: {\n            invoke: {\n              src: \"AuthenticationMachine\",\n              data: (context) => context,\n              onDone: [\n                {\n                  target: \"Authenticated\",\n                  actions: \"assignAuthSession\",\n                },\n              ],\n            },\n          },\n          Authenticated: {\n            entry: \"nfid_authenticated\",\n            invoke: {\n              src: () => (send) => {\n                const { delegationIdentity } = authState.get()\n                if (!delegationIdentity) return send(\"SESSION_EXPIRED\")\n\n                const expiresIn = getExpirationDelay(delegationIdentity)\n                const timeoutIn = expiresIn * 0.8\n\n                const now = Date.now()\n\n                console.debug(\"NFIDEmbedMachineV2 delegation expires at\", {\n                  expiresAt: new Date(now + expiresIn),\n                  timeoutAt: new Date(now + timeoutIn),\n                })\n\n                const timeout = setTimeout(() => {\n                  console.debug(\"NFIDEmbedMachineV2 delegation expired\")\n                  send(\"SESSION_EXPIRED\")\n                }, timeoutIn)\n\n                return () => clearTimeout(timeout)\n              },\n            },\n            on: {\n              SESSION_EXPIRED: {\n                target: \"Authenticate\",\n                actions: \"nfid_unauthenticated\",\n              },\n            },\n          },\n        },\n      },\n\n      HANDLE_PROCEDURE: {\n        initial: \"READY\",\n        states: {\n          READY: {\n            always: [\n              {\n                target: \"EXECUTE_PROCEDURE\",\n                cond: \"isAutoApprovable\",\n              },\n              {\n                target: \"AWAIT_PROCEDURE_APPROVAL\",\n                cond: \"hasProcedure\",\n              },\n            ],\n          },\n\n          AWAIT_PROCEDURE_APPROVAL: {\n            on: {\n              APPROVE: \"EXECUTE_PROCEDURE\",\n              CANCEL: {\n                target: \"READY\",\n                actions: [\"sendRPCCancelResponse\", \"updateProcedure\"],\n              },\n            },\n          },\n\n          EXECUTE_PROCEDURE: {\n            invoke: {\n              src: \"ExecuteProcedureService\",\n              onDone: {\n                actions: [\"sendRPCResponse\", \"updateProcedure\"],\n                target: \"READY\",\n              },\n              onError: { target: \"ERROR\", actions: \"assignError\" },\n            },\n          },\n\n          ERROR: {\n            on: {\n              RETRY: \"AWAIT_PROCEDURE_APPROVAL\",\n              CANCEL_ERROR: {\n                target: \"READY\",\n                actions: [\"sendRPCCancelResponse\", \"updateProcedure\"],\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      assignAppMeta: assign((context, event) => ({\n        appMeta: {\n          logo: event.data?.icon\n            ? window.location.origin +\n              new URL(event?.data?.icon ?? \"\")?.pathname\n            : undefined,\n          name: event?.data?.name,\n          url: new URL(event?.data?.domain).host,\n        },\n        authRequest: { hostname: event?.data?.domain },\n      })),\n      assignProcedure: assign((_, event) => ({\n        requestOrigin: event.data.origin,\n        rpcMessage: event.data.rpcMessage,\n        rpcMessageDecoded: event.data.rpcMessageDecoded,\n      })),\n      updateProcedure: assign(({ messageQueue }, event) => {\n        return {\n          rpcMessage: messageQueue[0],\n          messageQueue: messageQueue.slice(1, messageQueue.length),\n        }\n      }),\n      assignAuthSession: assign((_, event) => {\n        console.debug(\"assignAuthSession\", { event })\n        return { authSession: event.data.authSession }\n      }),\n      queueRequest: assign((context, event) => ({\n        messageQueue: [...context.messageQueue, event.data.rpcMessage],\n      })),\n      assignError: assign((context, event) => ({\n        error: event.data,\n      })),\n      nfid_authenticated: () => {\n        console.debug(\"nfid_authenticated\")\n        window.parent.postMessage(\n          { type: \"nfid_authenticated\" },\n          window.location.ancestorOrigins[0],\n        )\n      },\n      nfid_unauthenticated: ({ requestOrigin }) => {\n        if (!requestOrigin)\n          throw new Error(\"nfid_unauthenticated: missing requestOrigin\")\n\n        console.debug(\"nfid_authenticated\")\n        window.parent.postMessage(\n          { type: \"nfid_unauthenticated\" },\n          requestOrigin,\n        )\n      },\n      sendRPCResponse: ({ requestOrigin }, event) => {\n        if (!requestOrigin)\n          throw new Error(\"nfid_unauthenticated: missing requestOrigin\")\n\n        console.debug(\"sendRPCResponse\", { event })\n        window.parent.postMessage(event.data, requestOrigin)\n      },\n      sendRPCCancelResponse: (context) => {\n        if (!context.requestOrigin)\n          throw new Error(\"nfid_unauthenticated: missing requestOrigin\")\n        if (!context.rpcMessage?.id)\n          throw new Error(\"sendRPCCancelResponse: missing rpcMessage.id\")\n\n        window.parent.postMessage(\n          {\n            ...RPC_BASE,\n            id: context.rpcMessage.id,\n            // FIXME: find correct error code\n            error: { code: -1, message: \"NFID: user canceled request\" },\n          },\n          context.requestOrigin,\n        )\n      },\n    },\n    guards: {\n      hasProcedure: (context: NFIDEmbedMachineContext) => !!context.rpcMessage,\n      isReady: (_: NFIDEmbedMachineContext, __: Events, { state }: any) =>\n        state.matches(\"HANDLE_PROCEDURE.READY\"),\n      isAutoApprovable: (context: NFIDEmbedMachineContext) =>\n        [\"eth_accounts\"].includes(context.rpcMessage?.method ?? \"\"),\n    },\n    services: {\n      CheckApplicationMeta,\n      ExecuteProcedureService,\n      AuthenticationMachine,\n      RPCReceiver,\n      CheckAuthState,\n    },\n  },\n)\n","import { Application } from \"@nfid/integration\"\n\nimport { fetchApplication } from \"frontend/integration/identity-manager\"\n\nexport const CheckApplicationMeta = async (context: {\n  requestOrigin?: string\n}) => {\n  let application: Application\n  try {\n    application = await fetchApplication(\n      window.location.ancestorOrigins[0] ?? \"\",\n    )\n  } catch (e) {\n    application = {\n      name: \"Unknown application\",\n      accountLimit: 5,\n      alias: [window.location.ancestorOrigins[0]],\n      domain: window.location.ancestorOrigins[0],\n      isIFrameAllowed: false,\n      isNftStorage: false,\n    }\n    console.log(\"Error fetching application\", e)\n  }\n  return application\n}\n","import { TransactionRequest } from \"@ethersproject/abstract-provider\"\n\nimport { DelegationWalletAdapter, ProviderError } from \"@nfid/integration\"\n\nimport { getWalletDelegation } from \"frontend/integration/facade/wallet\"\nimport { AuthSession } from \"frontend/state/authentication\"\n\nimport { RPCMessage, RPCResponse, RPC_BASE } from \"./rpc-receiver\"\n\ntype CommonContext = { rpcMessage?: RPCMessage; authSession?: AuthSession }\n\nexport type ApproveSignatureEvent = {\n  populatedTransaction?: [TransactionRequest, ProviderError | undefined]\n}\n\ntype ExecuteProcedureEvent =\n  | { type: \"APPROVE\"; data?: ApproveSignatureEvent }\n  | { type: \"\" }\n\ntype ExecuteProcedureServiceContext = CommonContext\n\nexport const ExecuteProcedureService = async (\n  { rpcMessage, authSession }: ExecuteProcedureServiceContext,\n  event: ExecuteProcedureEvent,\n): Promise<RPCResponse> => {\n  if (!rpcMessage)\n    throw new Error(\"ExecuteProcedureService: missing rpcMessage\")\n  if (!authSession)\n    throw new Error(\"ExecuteProcedureService: missing authSession\")\n\n  const rpcBase = { ...RPC_BASE, id: rpcMessage.id }\n  const delegation = await getWalletDelegation(authSession.anchor)\n  const { rpcUrl } = rpcMessage.options\n  switch (rpcMessage.method) {\n    case \"eth_accounts\": {\n      const adapter = new DelegationWalletAdapter(rpcUrl)\n      const address = await adapter.getAddress(delegation)\n\n      const response = { ...rpcBase, result: [address] }\n      console.debug(\"ExecuteProcedureService eth_accounts\", {\n        response,\n      })\n      return response\n    }\n    case \"eth_signTypedData_v4\": {\n      const [, typedData] = rpcMessage.params\n      const adapter = new DelegationWalletAdapter(rpcUrl)\n      const result = await adapter.signTypedData(\n        JSON.parse(typedData),\n        delegation,\n      )\n      const response = { ...rpcBase, result }\n      console.debug(\"ExecuteProcedureService eth_signTypedData_v4\", {\n        response,\n      })\n      return response\n    }\n    case \"eth_sendTransaction\": {\n      const adapter = new DelegationWalletAdapter(rpcUrl)\n      const { wait, ...result } = await adapter.sendTransaction(\n        delegation,\n        event.type === \"APPROVE\" ? event.data?.populatedTransaction : undefined,\n      )\n      const response = { ...rpcBase, result: result.hash }\n      console.debug(\"ExecuteProcedureService eth_accounts\", {\n        response,\n      })\n      return response\n    }\n    case \"personal_sign\": {\n      const [message] = rpcMessage.params\n      const adapter = new DelegationWalletAdapter(rpcUrl)\n      const result = await adapter.signMessage(message, delegation)\n      const response = { ...rpcBase, result: result }\n      console.debug(\"ExecuteProcedureService personal_sign\", {\n        response,\n      })\n      return response\n    }\n    default:\n      throw new Error(\"ExecuteProcedureService: unknown procedure\")\n  }\n}\n","import { authState, loadProfileFromLocalStorage } from \"@nfid/integration\"\n\nimport { fetchProfile } from \"frontend/integration/identity-manager\"\nimport { AuthSession } from \"frontend/state/authentication\"\n\nexport const CheckAuthState = async (): Promise<{\n  authSession: AuthSession\n}> => {\n  console.debug(\"CheckAuthState\")\n  const { delegationIdentity } = await authState.fromCache()\n\n  console.debug(\"CheckAuthState\", { delegationIdentity })\n\n  if (!delegationIdentity)\n    throw new Error(\"CheckAuthState: no auth session in cache\")\n\n  const { anchor } = loadProfileFromLocalStorage() ?? (await fetchProfile())\n\n  return {\n    authSession: {\n      anchor,\n      sessionSource: \"cache\",\n      delegationIdentity,\n    },\n  }\n}\n","import { IconCmpNFTPreview, Skeleton } from \"@nfid-frontend/ui\"\n\nexport const Loader = () => {\n  return (\n    <div>\n      <div className=\"flex items-center\">\n        <Skeleton className=\"w-10 h-10 rounded-lg\" />\n        <Skeleton className=\"h-5 ml-2 w-28\" />\n      </div>\n      <div className=\"flex items-center mt-7\">\n        <Skeleton className=\"w-32 h-3 mr-1 \" />\n        <Skeleton className=\"w-5 h-3 \" />\n      </div>\n      <div className=\"border border-gray-100 -md mt-1.5 flex items-center rounded-md\">\n        <IconCmpNFTPreview className=\"w-[102px] h-[102px] text-gray-100\" />\n\n        <div className=\"ml-2.5\">\n          <div className=\"flex items-center\">\n            <Skeleton className=\"w-20 h-3 mr-1.5 \" />\n            <Skeleton className=\"w-[120px] h-3 mr-1.5 \" />\n          </div>\n          <div className=\"flex items-center mt-2\">\n            <Skeleton className=\"w-7 h-3 mr-1.5 \" />\n            <Skeleton className=\"w-20 h-3 mr-1.5 \" />\n          </div>\n        </div>\n      </div>\n      <div className=\"space-y-4 mt-7\">\n        <div className=\"flex items-center justify-between\">\n          <Skeleton className=\"w-32 h-3\" />\n          <div className=\"flex\">\n            <Skeleton className=\"w-14 h-3 mr-[5px]\"></Skeleton>\n            <Skeleton className=\"w-5 h-3 \"></Skeleton>\n          </div>\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <Skeleton className=\"h-3 w-28\" />\n          <div className=\"flex\">\n            <Skeleton className=\"w-12 h-3 mr-[5px]\"></Skeleton>\n            <Skeleton className=\"w-5 h-3 \"></Skeleton>\n          </div>\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <Skeleton className=\"h-3 w-36\" />\n          <div className=\"flex\">\n            <Skeleton className=\"w-16 h-3 mr-[5px]\"></Skeleton>\n            <Skeleton className=\"w-5 h-3 \"></Skeleton>\n          </div>\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <Skeleton className=\"w-24 h-3 \" />\n          <div className=\"flex\">\n            <Skeleton className=\"w-11 h-3 mr-[5px]\"></Skeleton>\n            <Skeleton className=\"w-5 h-3 \"></Skeleton>\n          </div>\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <Skeleton className=\"h-3 w-[120px]\" />\n          <div className=\"flex\">\n            <Skeleton className=\"w-[60px] h-3 mr-[5px]\"></Skeleton>\n            <Skeleton className=\"w-5 h-3\"></Skeleton>\n          </div>\n        </div>\n      </div>\n      <Skeleton className=\"h-3 mt-6 w-44\" />\n      <Skeleton className=\"flex items-center justify-center w-full h-12 rounded-md mt-14\">\n        <Skeleton className=\"h-3 w-[120px] !bg-white\" />\n      </Skeleton>\n    </div>\n  )\n}\n","import { TransactionRequest } from \"@ethersproject/abstract-provider\"\n\nimport {\n  DelegationWalletAdapter,\n  ProviderError,\n  loadProfileFromLocalStorage,\n} from \"@nfid/integration\"\n\nimport { getWalletDelegation } from \"frontend/integration/facade/wallet\"\nimport { fetchProfile } from \"frontend/integration/identity-manager\"\n\nimport { RPCMessage } from \"../services/rpc-receiver\"\n\nexport async function populateTransactionData(\n  rpcMessage: RPCMessage,\n): Promise<[TransactionRequest, ProviderError | undefined]> {\n  const adapter = new DelegationWalletAdapter(rpcMessage.options.rpcUrl)\n  const data = removeEmptyKeys(rpcMessage?.params[0])\n  const hostname = \"nfid.one\"\n  const accountId = \"0\"\n  const profile = loadProfileFromLocalStorage() ?? (await fetchProfile())\n  const delegation = await getWalletDelegation(\n    profile?.anchor,\n    hostname,\n    accountId,\n  )\n  return adapter.populateTransaction(data, delegation)\n}\n\nfunction removeEmptyKeys(data: { [key: string]: unknown }) {\n  return Object.keys(data).reduce(\n    (acc, key) => ({\n      ...acc,\n      ...(data[key] ? { [key]: data[key] } : {}),\n    }),\n    {},\n  )\n}\n","import { TransactionRequest } from \"@ethersproject/abstract-provider\"\nimport React from \"react\"\nimport useSWR from \"swr\"\n\nimport { ProviderError } from \"@nfid/integration\"\nimport { FunctionCall, Method } from \"@nfid/integration-ethereum\"\n\nimport { AuthSession } from \"frontend/state/authentication\"\nimport { AuthorizingAppMeta } from \"frontend/state/authorization\"\n\nimport MappedFallback from \"./components/fallback\"\nimport { RPCMessage } from \"./services/rpc-receiver\"\nimport { Loader } from \"./ui/loader\"\nimport { populateTransactionData } from \"./util/populateTxService\"\n\ntype ApproverCmpProps = {\n  appMeta: AuthorizingAppMeta\n  rpcMessage: RPCMessage\n  rpcMessageDecoded?: FunctionCall\n  populatedTransaction?: [TransactionRequest, ProviderError | undefined]\n  onConfirm: (data?: {\n    populatedTransaction: [TransactionRequest, ProviderError | undefined]\n  }) => void\n  onReject: (reason?: any) => void\n}\n\ntype ComponentMap = {\n  [method in Method]: React.ComponentType<ApproverCmpProps>\n}\n\nconst componentMap: ComponentMap = {\n  directPurchase: React.lazy(() => import(\"./components/buy\")),\n  createToken: React.lazy(() => import(\"./components/deploy-collection\")),\n  mintAndTransfer: React.lazy(() => import(\"./components/mint\")),\n  SellOrder: React.lazy(() => import(\"./components/sell\")),\n  BidOrder: React.lazy(() => import(\"./components/fallback\")),\n  bulkPurchase: React.lazy(() => import(\"./components/batch-buy\")),\n  burn: React.lazy(() => import(\"./components/fallback\")),\n  cancel: React.lazy(() => import(\"./components/fallback\")),\n\n  directAcceptBid: React.lazy(() => import(\"./components/fallback\")),\n  safeTransferFrom: React.lazy(() => import(\"./components/fallback\")),\n\n  Mint721: React.lazy(() => import(\"./components/lazy-mint\")),\n  Mint1155: React.lazy(() => import(\"./components/lazy-mint\")),\n\n  sell: React.lazy(() => import(\"./components/sell\")),\n  personalSign: React.lazy(() => import(\"./components/sign-message\")),\n  setApprovalForAll: React.lazy(() => import(\"./components/fallback\")),\n  approve: React.lazy(() => import(\"./components/fallback\")),\n}\n\nconst hasMapped = (messageInterface: string = \"\") =>\n  !!componentMap[messageInterface as Method]\n\ninterface ProcedureApprovalCoordinatorProps extends ApproverCmpProps {\n  disableConfirmButton?: boolean\n  authSession: AuthSession\n}\nexport const ProcedureApprovalCoordinator: React.FC<\n  ProcedureApprovalCoordinatorProps\n> = ({\n  appMeta,\n  rpcMessage,\n  rpcMessageDecoded,\n  onConfirm,\n  onReject,\n  authSession,\n}) => {\n  console.debug(\"ProcedureApprovalCoordinator\", { rpcMessage })\n\n  const {\n    data: populatedTransaction,\n    isLoading: isLoadingPopulateTransaction,\n  } = useSWR(\n    rpcMessage.method === \"eth_sendTransaction\"\n      ? [rpcMessage, \"populateTransactionData\"]\n      : null,\n    async ([rpcMessage]) => {\n      return await populateTransactionData(rpcMessage)\n    },\n    { refreshInterval: 3 * 1000 },\n  )\n\n  const handleOnConfirmSignature = React.useCallback(() => {\n    return populatedTransaction\n      ? onConfirm({ populatedTransaction })\n      : onConfirm()\n  }, [onConfirm, populatedTransaction])\n\n  switch (true) {\n    case hasMapped(rpcMessageDecoded?.method):\n      const ApproverCmp = componentMap[rpcMessageDecoded?.method as Method]\n      return (\n        <React.Suspense fallback={<Loader />}>\n          <ApproverCmp\n            {...{\n              rpcMessage,\n              appMeta,\n              rpcMessageDecoded,\n              populatedTransaction,\n              disableConfirmButton: isLoadingPopulateTransaction,\n              onConfirm: handleOnConfirmSignature,\n              onReject,\n            }}\n          />\n        </React.Suspense>\n      )\n\n    default:\n      return (\n        <MappedFallback\n          {...{\n            rpcMessage,\n            appMeta,\n            disableConfirmButton: isLoadingPopulateTransaction,\n            rpcMessageDecoded,\n            populatedTransaction,\n            onConfirm: handleOnConfirmSignature,\n            onReject,\n          }}\n        />\n      )\n  }\n}\n","import { Button, IconCmpError, Page } from \"@nfid-frontend/ui\"\n\ntype PageErrorCmpProps = {\n  error?: Error\n  onRetry: () => void\n  onCancel: () => void\n}\n\nexport const PageError: React.FC<PageErrorCmpProps> = ({\n  error,\n  onRetry,\n  onCancel,\n}) => {\n  return (\n    <Page>\n      <Page.Header>\n        <div className=\"flex gap-2\">\n          <IconCmpError className=\"text-red-500\" />\n          <div className=\"font-bold\">Error</div>\n        </div>\n      </Page.Header>\n      <Page.Body>\n        <div className=\"font-bold\">An unexpected error has occurred.</div>\n        <div className=\"overflow-scroll\">\n          {error?.message || \"An unexpected error has occurred.\"}\n        </div>\n      </Page.Body>\n      <Page.Footer>\n        <div className=\"flex w-full gap-2\">\n          <Button\n            type=\"stroke\"\n            onClick={onCancel}\n            className=\"flex items-center justify-center flex-1\"\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"secondary\"\n            onClick={onRetry}\n            className=\"flex items-center justify-center flex-1\"\n          >\n            Try again\n          </Button>\n        </div>\n      </Page.Footer>\n    </Page>\n  )\n}\n","import { useMachine } from \"@xstate/react\"\nimport React from \"react\"\n\nimport { BlurredLoader } from \"@nfid-frontend/ui\"\n\nimport AuthenticationCoordinator from \"../authentication/root/coordinator\"\nimport { AuthenticationMachineActor } from \"../authentication/root/root-machine\"\nimport { NFIDEmbedMachineV2 } from \"./machine-v2\"\nimport { ProcedureApprovalCoordinator } from \"./procedure-approval-coordinator\"\nimport { PageError } from \"./ui/error\"\n\nexport default function NFIDEmbedCoordinator() {\n  const [state, send] = useMachine(NFIDEmbedMachineV2)\n  console.debug(\"NFIDEmbedCoordinator\")\n\n  React.useEffect(\n    () =>\n      console.log(\"NFIDEmbedCoordinator\", {\n        context: state.context,\n        state: state.value,\n        children: state.children,\n      }),\n    [state.value, state.context, state.children],\n  )\n\n  switch (true) {\n    case state.matches(\"HANDLE_PROCEDURE.EXECUTE_PROCEDURE\"):\n    case state.matches(\"AUTH.CheckAppMeta\"):\n    case state.matches(\"AUTH.CheckAuthentication\"):\n    default:\n      return (\n        <BlurredLoader\n          isLoading\n          loadingMessage={\n            state.context.rpcMessage?.method === \"eth_accounts\" &&\n            \"Requesting account...\"\n          }\n        />\n      )\n\n    case state.matches(\"AUTH.Authenticate\"):\n      return (\n        <AuthenticationCoordinator\n          actor={\n            state.children[\n              \"NFIDEmbedMachineV2.AUTH.Authenticate:invocation[0]\"\n            ] as AuthenticationMachineActor\n          }\n        />\n      )\n    case state.matches(\"HANDLE_PROCEDURE.AWAIT_PROCEDURE_APPROVAL\"):\n      if (!state.context.rpcMessage) throw new Error(\"missing rpcMessage\")\n      if (!state.context.authSession) throw new Error(\"missing authSession\")\n\n      return (\n        <ProcedureApprovalCoordinator\n          appMeta={state.context.appMeta}\n          authSession={state.context.authSession}\n          rpcMessage={state.context.rpcMessage}\n          rpcMessageDecoded={state.context.rpcMessageDecoded}\n          onConfirm={(data) => {\n            console.debug(\"onConfirm\", { data })\n            send({ type: \"APPROVE\", data })\n          }}\n          onReject={() => send({ type: \"CANCEL\" })}\n        />\n      )\n    case state.matches(\"HANDLE_PROCEDURE.ERROR\"):\n      return (\n        <PageError\n          error={state.context.error}\n          onCancel={() => send({ type: \"CANCEL_ERROR\" })}\n          onRetry={() => send({ type: \"RETRY\" })}\n        />\n      )\n  }\n}\n","import clsx from \"clsx\"\nimport React, { useState } from \"react\"\n\nimport {\n  IconCmpArrow,\n  IconCmpArrowRight,\n  IconSvgNFTPreview,\n} from \"@nfid-frontend/ui\"\nimport { truncateString } from \"@nfid-frontend/utils\"\n\nimport { IAsset } from \".\"\n\ninterface IBatchAssetPreview {\n  assets: IAsset[]\n}\n\nexport const BatchAssetPreview: React.FC<IBatchAssetPreview> = ({ assets }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false)\n\n  return (\n    <div>\n      {isModalOpen && (\n        <div className=\"absolute top-0 left-0 z-30 w-full h-full p-[22px] bg-white\">\n          <div className=\"flex items-center mb-5\">\n            <div\n              className=\"cursor-pointer\"\n              onClick={() => setIsModalOpen(false)}\n            >\n              <IconCmpArrow />\n            </div>\n            <p className=\"ml-2 text-xl font-bold\">\n              {assets.length} collectibles\n            </p>\n          </div>\n          <div className=\"space-y-1.5\">\n            {assets.map((item) => {\n              return (\n                <div className=\"flex items-center justify-between border-b border-gray-200 pb-1.5\">\n                  <div className=\"flex items-center\">\n                    <img\n                      className=\"object-cover w-12 h-12 rounded-md mr-2.5\"\n                      src={item?.icon}\n                      alt=\"\"\n                    />\n                    <div>\n                      <p className=\"text-sm\">{item?.title}</p>\n                      <p className=\"text-xs text-gray-400\">{item?.subtitle}</p>\n                    </div>\n                  </div>\n                  <div className=\"text-end\">\n                    <p className=\"text-sm\">{item.innerTitle}</p>\n                    <p className=\"text-xs text-gray-400\">\n                      {item.innerSubtitle}\n                    </p>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      )}\n      <div\n        className={clsx(\n          \"overflow-hidden border border-gray-200 rounded-md cursor-pointer h-20\",\n          \"flex items-center\",\n        )}\n        onClick={() => setIsModalOpen(true)}\n      >\n        <div className=\"relative h-full text-gray-100 w-[98px]\">\n          {assets.slice(0, 3).map((item, index) => {\n            return (\n              <img\n                key={`preview_${index}`}\n                alt={`preview_${index}`}\n                src={item?.icon ?? IconSvgNFTPreview}\n                className={clsx(\n                  \"border-x border-gray-200 border-opacity-50 rounded-[5px]\",\n                  \"w-20 h-20 absolute top-0\",\n                )}\n                style={{\n                  left: `${index * 6}px`,\n                }}\n              />\n            )\n          })}\n        </div>\n        <div className=\"ml-2.5\">\n          <p className=\"font-bold\">{assets.length} collectibles</p>\n          <p className=\"w-64 overflow-hidden text-sm text-gray-400\">\n            {truncateString(\n              assets.map((item) => item.title ?? \"Unknown name\").join(\", \"),\n              63,\n            )}\n          </p>\n        </div>\n        <IconCmpArrowRight className=\"ml-auto mr-4\" />\n      </div>\n    </div>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\n\n\ninterface IAsset {\n  icon?: string\n  title?: string\n  subtitle?: string\n}\n\nexport const SingleAssetPreview: React.FC<IAsset> = ({\n  icon,\n  title,\n  subtitle,\n}: IAsset) => {\n  return (\n    <div\n      className={clsx(\n        \"flex items-center justify-between overflow-hidden\",\n        \"border rounded-md shrink-0\",\n      )}\n    >\n      <div className=\"flex items-center w-full\">\n        <img\n          className={clsx(\n            \"object-cover w-20 h-20 rounded-[5px]\",\n            !icon && \"hidden\",\n          )}\n          src={icon}\n          alt={title}\n        />\n        <div\n          className={clsx(\"ml-2.5\", !icon && \"text-center !ml-0 w-full py-2.5\")}\n        >\n          <p className=\"font-bold tracking-[0.01em] text-base\">{title}</p>\n          <p className=\"text-sm text-gray-400\">{subtitle}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { BatchAssetPreview } from \"./batch\"\nimport { SingleAssetPreview } from \"./single\"\n\nexport interface IAsset {\n  icon?: string\n  title?: string\n  subtitle?: string\n  innerTitle?: string\n  innerSubtitle?: string\n}\ninterface IAssetPreview {\n  assets?: IAsset[]\n}\n\nexport const AssetPreview = ({ assets }: IAssetPreview) => {\n  if (\n    !assets ||\n    (assets.length === 1 &&\n      !assets[0]?.icon &&\n      !assets[0]?.subtitle &&\n      !assets[0]?.title)\n  )\n    return null\n  if (assets.length === 1) return <SingleAssetPreview {...assets[0]} />\n  if (assets.length > 1) return <BatchAssetPreview assets={assets} />\n\n  return null\n}\n","import clsx from \"clsx\"\n\nimport {\n  Button,\n  IWarningAccordionOption,\n  IconCmpOut,\n  IconCmpSettings,\n  InfoListItem,\n  SDKApplicationMeta,\n  WarningAccordion,\n} from \"@nfid-frontend/ui\"\n\nimport { RPCApplicationMetaSubtitle } from \"frontend/features/embed-controller/ui/app-meta/subtitle\"\nimport { AuthorizingAppMeta } from \"frontend/state/authorization\"\nimport { CenterEllipsis } from \"frontend/ui/atoms/center-ellipsis\"\n\nimport { AssetPreview, IAsset } from \"./asset-preview\"\n\ninterface ISendTransaction {\n  title?: string\n  applicationMeta: AuthorizingAppMeta\n  fromAddress?: string\n  toAddress?: string\n  network: string\n  networkFee?: string\n  totalUSD: string\n  totalToken: string\n  price?: string\n  currency: string\n  warnings?: IWarningAccordionOption[]\n  isInsufficientBalance?: boolean\n  assets?: IAsset[]\n  disableApproveButton?: boolean\n  onAdjustNetworkFee?: () => void\n  onShowTransactionDetails?: () => void\n  onApprove: () => void\n  onCancel: () => void\n}\n\nexport const SendTransaction = ({\n  title = \"Review\",\n  applicationMeta,\n  fromAddress,\n  toAddress,\n  network,\n  networkFee,\n  totalUSD,\n  totalToken,\n  price,\n  currency,\n  warnings,\n  isInsufficientBalance,\n  disableApproveButton,\n  assets,\n  onAdjustNetworkFee,\n  onShowTransactionDetails,\n  onApprove,\n  onCancel,\n}: ISendTransaction) => {\n  return (\n    <div className=\"flex flex-col justify-between flex-1\">\n      <div>\n        <SDKApplicationMeta\n          title={title}\n          applicationLogo={applicationMeta?.logo}\n          subTitle={\n            <RPCApplicationMetaSubtitle applicationURL={applicationMeta?.url} />\n          }\n        />\n        <AssetPreview assets={assets} />\n\n        <div className=\"mt-5 space-y-3\">\n          {fromAddress && (\n            <InfoListItem\n              title=\"From\"\n              icon={\n                <IconCmpOut\n                  className=\"w-[18px] cursor-pointer\"\n                  onClick={(e) =>\n                    window.open(\n                      // PASHUNYA TODO: use network\n                      `https://goerli.etherscan.io/address/${fromAddress}`,\n                    )\n                  }\n                />\n              }\n            >\n              <CenterEllipsis\n                value={fromAddress}\n                leadingChars={6}\n                trailingChars={4}\n              />\n            </InfoListItem>\n          )}\n          {toAddress && (\n            <InfoListItem\n              title=\"To\"\n              icon={\n                <IconCmpOut\n                  className=\"w-[18px] cursor-pointer\"\n                  onClick={(e) =>\n                    window.open(\n                      // PASHUNYA TODO: use network\n                      `https://goerli.etherscan.io/address/${toAddress}`,\n                    )\n                  }\n                />\n              }\n            >\n              <CenterEllipsis\n                value={toAddress}\n                leadingChars={6}\n                trailingChars={4}\n              />\n            </InfoListItem>\n          )}\n          <InfoListItem title=\"Network\">{network}</InfoListItem>\n          {networkFee && (\n            <InfoListItem\n              title=\"Network fee\"\n              tooltip=\"Applies to all transactions. Not paid to NFID Wallet.\"\n              icon={\n                onAdjustNetworkFee && (\n                  <IconCmpSettings\n                    className=\"ml-1.5 cursor-pointer text-black\"\n                    onClick={onAdjustNetworkFee}\n                  />\n                )\n              }\n            >\n              {`${networkFee} ${currency}`}\n            </InfoListItem>\n          )}\n          {price && (\n            <InfoListItem\n              title={\n                assets && assets?.length > 1\n                  ? \"Collectibles cost\"\n                  : \"Collectible cost\"\n              }\n            >\n              {`${price} ${currency}`}\n            </InfoListItem>\n          )}\n          {totalToken && (\n            <InfoListItem title=\"Total\" isBold>\n              <div className=\"relative\">\n                <p>\n                  {totalToken} {currency}\n                </p>\n\n                <div\n                  className={clsx(\n                    \"text-xs leading-4 text-gray-400 font-normal\",\n                    \"absolute right-0 top-full\",\n                  )}\n                >\n                  ~${totalUSD}\n                </div>\n              </div>\n            </InfoListItem>\n          )}\n        </div>\n        <p\n          className=\"mt-10 text-sm cursor-pointer text-blue\"\n          onClick={onShowTransactionDetails}\n        >\n          Transaction details\n        </p>\n        {isInsufficientBalance && (\n          <p className=\"my-3 text-xs text-red\">\n            Insufficient balance in you account to pay for this transaction.{\" \"}\n            <span className=\"font-semibold text-blue\">Buy ETH</span> or deposit\n            from another account.\n          </p>\n        )}\n      </div>\n      <div>\n        <WarningAccordion warnings={warnings} />\n        <div className=\"flex items-center w-full space-x-2.5\">\n          <Button type=\"stroke\" className=\"w-full\" onClick={onCancel}>\n            Cancel\n          </Button>\n          <Button\n            type=\"primary\"\n            className={clsx(\"w-full\", isInsufficientBalance && \"!bg-gray-300\")}\n            onClick={onApprove}\n            disabled={isInsufficientBalance || disableApproveButton}\n          >\n            Confirm\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { TransactionRequest } from \"@ethersproject/abstract-provider\"\nimport { ethers } from \"ethers\"\nimport { BigNumber } from \"ethers/lib/ethers\"\n\nimport { ProviderError } from \"@nfid/integration\"\n\nexport function calcPrice(\n  rate: number,\n  populatedTransaction?: [TransactionRequest, ProviderError | undefined],\n) {\n  if (!rate || !populatedTransaction || !populatedTransaction[0])\n    return {\n      fee: \"0\",\n      feeUsd: \"0\",\n      maxFee: \"0\",\n      maxFeeUsd: \"0\",\n      total: \"0\",\n      totalUsd: \"0\",\n      maxTotal: \"0\",\n      maxTotalUsd: \"0\",\n      price: \"0\",\n      isInsufficientFundsError: false,\n      isNetworkIsBusyWarning: false,\n    }\n\n  const [transaction, err] = populatedTransaction\n\n  const gasPriceRaw = transaction.gasPrice\n  delete transaction[\"gasPrice\"]\n\n  const gasLimit = BigNumber.from(transaction?.gasLimit)\n  const gasPrice = BigNumber.from(gasPriceRaw ?? transaction?.maxFeePerGas)\n  const maxFeePerGas = BigNumber.from(transaction?.maxFeePerGas ?? gasPriceRaw)\n  const price = BigNumber.from(transaction?.value ?? \"0x0\")\n\n  const fee = gasLimit.mul(gasPrice).div(125).mul(100)\n  const feeUsd = parseFloat(ethers.utils.formatEther(fee)) * rate\n  const maxFee = gasLimit.mul(maxFeePerGas)\n  const maxFeeUsd = parseFloat(ethers.utils.formatEther(maxFee)) * rate\n  const total = price.add(fee)\n  const totalUsd = parseFloat(ethers.utils.formatEther(total)) * rate\n  const maxTotal = price.add(maxFee)\n  const maxTotalUsd = parseFloat(ethers.utils.formatEther(maxTotal)) * rate\n\n  return {\n    fee: ethers.utils.formatEther(fee),\n    feeUsd: feeUsd.toFixed(2),\n    maxFee: ethers.utils.formatEther(maxFee),\n    maxFeeUsd: maxFeeUsd.toFixed(2),\n    total: ethers.utils.formatEther(total),\n    totalUsd: totalUsd.toFixed(2),\n    maxTotal: ethers.utils.formatEther(maxTotal),\n    maxTotalUsd: maxTotalUsd.toFixed(2),\n    price: ethers.utils.formatEther(price),\n    isInsufficientFundsError: ProviderError.INSUFICIENT_FUNDS === err,\n    isNetworkIsBusyWarning: ProviderError.NETWORK_BUSY === err,\n  }\n}\n","import { useMemo } from \"react\"\nimport useSWR from \"swr\"\n\nconst COINBASE_RATES_URL = `https://api.coinbase.com/v2/exchange-rates`\nconst NOT_AVAILABLE = \"\"\nconst DEFAULT_EXCHANGE_RATES = [\"ICP\", \"ETH\", \"BTC\"]\nexport interface IRate {\n  [currency: string]: number\n}\n\nexport const useExchangeRates = (tokens = DEFAULT_EXCHANGE_RATES) => {\n  const { data: prices, ...rest } = useSWR(\"exchangeRates\", () =>\n    fetch(COINBASE_RATES_URL).then((res) => res.json()),\n  )\n\n  const rates: IRate = useMemo(() => {\n    if (!prices?.data || !tokens) return {}\n\n    return tokens.reduce((acc, token, index) => {\n      const priceInToken = prices?.data?.rates[token]\n      const priceInUsd = priceInToken\n        ? (1 / priceInToken).toFixed(2)\n        : NOT_AVAILABLE\n\n      acc[token] = Number(parseFloat(priceInUsd).toFixed(2))\n      return acc\n    }, {} as IRate)\n  }, [prices, tokens])\n\n  return { rates, prices, ...rest }\n}\n","import { DelegationIdentity } from \"@dfinity/identity\"\nimport { Principal } from \"@dfinity/principal\"\nimport { Chain } from \"packages/integration/src/lib/lambda/ecdsa\"\n\nimport { WALLET_SCOPE, WALLET_SESSION_TTL_2_MIN_IN_NS } from \"@nfid/config\"\nimport {\n  getScope,\n  getLocalStorageOverride,\n  delegationState,\n} from \"@nfid/integration\"\n\nimport { fetchPrincipal } from \"frontend/integration/internet-identity\"\n\nexport async function getWalletPrincipal(anchor: number): Promise<Principal> {\n  return fetchPrincipal(anchor, WALLET_SCOPE).catch((e) => {\n    throw Error(`Getting of Wallet Principal failed!: ${e}`, e)\n  })\n}\n\nexport async function getWalletDelegation(\n  userNumber: number,\n  hostName?: string,\n  personaId?: string,\n  chain: Chain = Chain.IC,\n): Promise<DelegationIdentity> {\n  const scope =\n    typeof hostName === \"undefined\" || hostName === \"nfid.one\"\n      ? WALLET_SCOPE\n      : getScope(hostName, personaId)\n\n  return delegationState.getDelegation(\n    userNumber,\n    scope,\n    BigInt(\n      getLocalStorageOverride(\n        WALLET_SESSION_TTL_2_MIN_IN_NS,\n        \"NFID_WALLET_DELEGATION_TTL_NS\",\n      ),\n    ),\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface CenterEllipsisProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  value: string\n  trailingChars: number\n  leadingChars: number\n  id?: string\n}\n\nexport const CenterEllipsis = React.forwardRef<\n  HTMLDivElement,\n  CenterEllipsisProps\n>(({ value, leadingChars, trailingChars, ...divProps }, ref) => {\n  const splitAt = value.length - trailingChars\n  return (\n    <div ref={ref} className=\"flex min-w-0\" {...divProps}>\n      <div\n        id={\"first_part\"}\n        className={clsx(\"overflow-hidden whitespace-nowrap\")}\n      >\n        {value.slice(0, leadingChars)}\n      </div>\n      <div>...</div>\n      <div id={\"second_part\"} className=\"flex-shrink-0\">\n        {value.slice(splitAt)}\n      </div>\n    </div>\n  )\n})\n","const chainConfigs: Record<\n  string,\n  { symbol: string; currency: string; chainName: string }\n> = {\n  \"0x01\": { symbol: \"ETH\", currency: \"ETH\", chainName: \"Ethereum\" },\n  \"0x05\": { symbol: \"Goerli ETH\", currency: \"ETH\", chainName: \"Goerli\" },\n  \"0x89\": { symbol: \"ETH\", currency: \"MATIC\", chainName: \"Polygon\" },\n  \"0x013881\": {\n    symbol: \"Mumbai ETH\",\n    currency: \"MATIC\",\n    chainName: \"Mumbai Polygon\",\n  },\n}\n\nexport const chainService = {\n  getSymbolAndChainName: function (chainId?: string): {\n    symbol: string\n    currency: string\n    chainName: string\n  } {\n    if (!chainId) throw Error(\"The chainId has not been provided.\")\n\n    return chainConfigs[chainId]\n  },\n}\n","export const version = \"ethers/5.7.2\";\n","\"use strict\";\n\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\n\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\n\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\n\nimport * as constants from \"@ethersproject/constants\";\n\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\n\nimport { Wordlist, wordlists} from \"@ethersproject/wordlists\";\n\nimport * as utils from \"./utils\";\n\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n\n////////////////////////\n// Types\n\nimport type { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike, Signature } from \"@ethersproject/bytes\";\nimport { Transaction, UnsignedTransaction } from \"@ethersproject/transactions\";\n\n\n////////////////////////\n// Compile-Time Constants\n\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\n////////////////////////\n// Types\n\nimport {\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface\n} from \"@ethersproject/contracts\";\n\n\n////////////////////////\n// Exports\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n};\n\n"],"names":["RPCApplicationMetaSubtitle","applicationURL","className","href","target","rel","tip","appMeta","rpcMessage","rpcMessageDecoded","populatedTransaction","disableConfirmButton","onConfirm","onReject","rates","useExchangeRates","symbol","currency","chainName","chainService","options","chainId","rate","price","useMemo","calcPrice","warnings","data","meta","content","url","name","collectionData","push","title","subtitle","isNetworkIsBusyWarning","method","applicationMeta","fromAddress","params","from","toAddress","to","networkFee","fee","totalUSD","totalUsd","totalToken","total","network","onApprove","disableApproveButton","isInsufficientBalance","isInsufficientFundsError","onCancel","assets","icon","makeAsset","isArrayLike","x","length","iterator","Symbol","innerFrom","input","Observable","isFunction","isInteropObservable","obj","subscriber","obs","subscribe","TypeError","array","i","closed","next","complete","value","then","promise","err","error","reportUnhandledError","asyncIterator","isAsyncIterable","fromAsyncIterable","isIterable","iterable","getReader","isReadableStreamLike","readableStream","reader","read","releaseLock","readableStreamLikeToAsyncGenerator","createInvalidObservableTypeError","asyncIterable","process","catch","mergeMap","project","resultSelector","concurrent","a","b","ii","source","onBeforeNext","expand","innerSubScheduler","additionalFinalizer","buffer","active","index","isComplete","checkComplete","outerNext","doInnerSub","innerComplete","innerValue","undefined","bufferedValue","shift","parentSubscription","scheduler","work","delay","repeat","scheduleSubscription","schedule","add","this","unsubscribe","executeSchedule","mergeInternals","isArray","Array","mapOneOrManyArgs","fn","args","callOrApply","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","toCommonHandlerRegistry","eventName","methodName","handler","assetAbi","contract","tokenId","ethereum","EthersEthereum","ethers","AssetType","assetDecoderService","constructor","map","abi","result","decodeParameter","root","collectionId","mapLazy","nft","substring","erc721AssetDecoder","getAbi","getMethod","ERC721","erc721AssetLazyAbi","components","type","erc721AssetLazyDecoder","AssetDecoderService","ERC721_LAZY","erc1155AssetDecoder","ERC1155","erc1155AssetLazyAbi","erc1155TokenLazyDecoder","ERC1155_LAZY","dependencyService","group","decoders","key","reduce","item","functionCallService","decode","fragment","inputs","Interface","decodeFunctionData","FunctionFragment","names","includes","c","types","join","console","debug","approveAbi","internalType","outputs","stateMutability","approveMethodDecoder","async","spender","amount","Promise","resolve","interface","BigNumber","toString","bulkPurchaseAbi","bulkPurchaseMethodDecoder","itemsData","feeRecipientFirst","feeRecipientSecond","allowFail","itemPromises","marketId","fees","itemData","decodedItem","functionCallDecoder","items","all","parseInt","burnAbi","burnMethodDecoder","cancelAbi","cancelMethodDecoder","maker","makeAssets","taker","_","takeAssetPrice","salt","start","end","assetClass","assetId","decodeTokenByAssetClass","CreateTokenMethodDecoder","Error","baseURI","contractURI","isPrivate","createTokenPrivateAbi","createTokenPrivateMethodDecoder","createTokenPublicAbi","createTokenPublicMethodDecoder","directAcceptBidAbi","directAcceptBidMethodDecoder","bidMaker","bidNftAmount","nftAssetClass","nftData","bidPaymentAmount","paymentToken","bidSalt","bidStart","bidEnd","bidDataType","bidData","bidSignature","sellOrderPaymentAmount","sellOrderNftAmount","sellOrderData","directPurchaseAbi","directPurchaseMethodDecoder","mintAndTransferAbi","mintAndTransferMethodDecoder","tokenURI","creators","royalties","signatures","mappedCreators","creator","safeTransferFromAbi","safeTransferFromMethodDecoder","id","setApprovalForAllAbi","setApprovalForAllMethodDecoder","operator","approved","parseHex","Number","ethSendTransactionRpcMessageDecoder","parameter","maxFeePerGas","maxPriorityFeePerGas","personalSignRpcMessageDecoder","message","Buffer","slice","Order","json","assetType","takeAsset","asset","Object","values","decodeByAssetClass","Mint721","uri","Mint1155","supply","account","signTypedDataV4RpcMessageDecoder","JSON","parse","primaryType","decoder","methodDecoders","assetDecoders","rpcMessageDecoders","eth_sendTransaction","eth_signTypedData_v4","personal_sign","methodDecoder","decodedData","assetDecoder","env","sdk","createRaribleSdk","collection","apis","getItemById","itemId","getCollectionById","rpcMessageDecoder","RPC_BASE","jsonrpc","windowMessages","fromEvent","pipe","addEventListener","removeEventListener","isEventTarget","addListener","removeListener","isNodeStyleEventEmitter","on","off","isJQueryStyleEventEmitter","remove","subTarget","window","rpcMessages","predicate","event","call","thisArg","decodeMessage","decodeRpcMessage","warn","NFIDEmbedMachineV2","createMachine","preserveActionOrder","tsTypes","schema","context","events","services","messageQueue","authRequest","hostname","states","RPC_RECEIVER","invoke","src","RPC_MESSAGE","actions","cond","AUTH","initial","CheckAppMeta","onDone","CheckAuthentication","onError","Authenticate","Authenticated","entry","send","delegationIdentity","authState","expiresIn","getExpirationDelay","timeoutIn","now","Date","expiresAt","timeoutAt","timeout","setTimeout","clearTimeout","SESSION_EXPIRED","HANDLE_PROCEDURE","READY","always","AWAIT_PROCEDURE_APPROVAL","APPROVE","CANCEL","EXECUTE_PROCEDURE","ERROR","RETRY","CANCEL_ERROR","assignAppMeta","assign","logo","location","origin","URL","pathname","domain","host","assignProcedure","requestOrigin","updateProcedure","assignAuthSession","authSession","queueRequest","assignError","nfid_authenticated","parent","postMessage","ancestorOrigins","nfid_unauthenticated","sendRPCResponse","sendRPCCancelResponse","code","guards","hasProcedure","isReady","__","state","matches","isAutoApprovable","CheckApplicationMeta","application","fetchApplication","e","accountLimit","alias","isIFrameAllowed","isNftStorage","log","ExecuteProcedureService","rpcBase","delegation","getWalletDelegation","anchor","rpcUrl","adapter","DelegationWalletAdapter","address","getAddress","response","typedData","signTypedData","wait","sendTransaction","hash","signMessage","AuthenticationMachine","RPCReceiver","subsciption","rpcMessageDecodedTypedData","rpcMessagePersonalSign","CheckAuthState","loadProfileFromLocalStorage","fetchProfile","sessionSource","Loader","populateTransactionData","keys","acc","removeEmptyKeys","profile","populateTransaction","componentMap","directPurchase","React","createToken","mintAndTransfer","SellOrder","BidOrder","bulkPurchase","burn","cancel","directAcceptBid","safeTransferFrom","sell","personalSign","setApprovalForAll","approve","ProcedureApprovalCoordinator","isLoading","isLoadingPopulateTransaction","useSWR","refreshInterval","handleOnConfirmSignature","hasMapped","ApproverCmp","fallback","PageError","onRetry","onClick","NFIDEmbedCoordinator","useMachine","children","loadingMessage","actor","BatchAssetPreview","isModalOpen","setIsModalOpen","useState","alt","innerTitle","innerSubtitle","clsx","IconSvgNFTPreview","style","left","truncateString","SingleAssetPreview","AssetPreview","SendTransaction","onAdjustNetworkFee","onShowTransactionDetails","applicationLogo","subTitle","open","leadingChars","trailingChars","tooltip","isBold","disabled","feeUsd","maxFee","maxFeeUsd","maxTotal","maxTotalUsd","transaction","gasPriceRaw","gasPrice","gasLimit","mul","div","parseFloat","toFixed","ProviderError","COINBASE_RATES_URL","DEFAULT_EXCHANGE_RATES","tokens","prices","rest","fetch","res","token","priceInToken","priceInUsd","userNumber","hostName","personaId","Chain","scope","WALLET_SCOPE","getScope","delegationState","BigInt","getLocalStorageOverride","WALLET_SESSION_TTL_2_MIN_IN_NS","CenterEllipsis","ref","divProps","splitAt","chainConfigs","getSymbolAndChainName","version","BaseContract","Contract","ContractFactory","FixedNumber","Signer","VoidSigner","Wallet","constants","providers","get","getDefaultProvider","Wordlist","wordlists","utils","logger","Logger"],"sourceRoot":""}