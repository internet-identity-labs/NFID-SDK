{"version":3,"file":"static/js/763.c7723e9d.chunk.js","mappings":"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","sources":["assets/dfinity.svg","coordination/trust-device.tsx","features/embed-controller/ui/app-meta/subtitle.tsx","features/embed/components/fallback.tsx","../../../node_modules/rxjs/src/internal/util/isArrayLike.ts","../../../node_modules/rxjs/src/internal/symbol/iterator.ts","../../../node_modules/rxjs/src/internal/observable/innerFrom.ts","../../../node_modules/rxjs/src/internal/util/isInteropObservable.ts","../../../node_modules/rxjs/src/internal/util/isPromise.ts","../../../node_modules/rxjs/src/internal/util/isAsyncIterable.ts","../../../node_modules/rxjs/src/internal/util/isIterable.ts","../../../node_modules/rxjs/src/internal/util/isReadableStreamLike.ts","../../../node_modules/rxjs/src/internal/util/throwUnobservableError.ts","../../../node_modules/rxjs/src/internal/operators/mergeMap.ts","../../../node_modules/rxjs/src/internal/operators/mergeInternals.ts","../../../node_modules/rxjs/src/internal/util/executeSchedule.ts","../../../node_modules/rxjs/src/internal/util/mapOneOrManyArgs.ts","../../../node_modules/rxjs/src/internal/observable/fromEvent.ts","../../../packages/integration-ethereum/src/lib/decoder/asset-decoder/asset-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/asset-decoder/asset-decoder-service.ts","../../../packages/integration-ethereum/src/lib/decoder/asset-decoder/erc721-asset-decoder/erc721-asset-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/asset-decoder/erc721-asset-decoder/erc721-asset-lazy-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/asset-decoder/erc721-asset-decoder/erc721-asset-lazy-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/asset-decoder/erc1155-asset-decoder/erc1155-asset-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/asset-decoder/erc1155-asset-decoder/erc1155-asset-lazy-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/asset-decoder/erc1155-asset-decoder/erc1155-asset-lazy-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/dependency-service.ts","../../../packages/integration-ethereum/src/lib/decoder/function-call-service.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/approve/approve-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/approve/approve-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/bulk-purchase/bulk-purchase-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/bulk-purchase/bulk-purchase-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decode-ethereum-function-call.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/burn/burn-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/burn/burn-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/cancel/cancel-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/cancel/cancel-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/create-token/create-token-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/create-token/create-token-private/create-token-private-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/create-token/create-token-private/create-token-private-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/create-token/create-token-public/create-token-public-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/create-token/create-token-public/create-token-public-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/direct-accept-bid/direct-accept-bid-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/direct-accept-bid/direct-accept-bid-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/direct-purchase/direct-purchase-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/direct-purchase/direct-purchase-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/mint/mint-and-transfer-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/mint/mint-and-transfer-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/safe-transfer-from/safe-transfer-from-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/safe-transfer-from/safe-transfer-from-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/set-approval-for-all/set-approval-for-all-abi.ts","../../../packages/integration-ethereum/src/lib/decoder/method-decoder/set-approval-for-all/set-approval-for-all-method-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/rpc-message-decoder/rpc-message-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/rpc-message-decoder/eth-sendtransaction-rpc-message-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/rpc-message-decoder/personal-sign-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/rpc-message-decoder/sign-typed-data-v4-rpc-message-decoder..ts","../../../packages/integration-ethereum/src/lib/decoder/rpc-message-decoder/sign-typed-data-v4-rpc-message-decoder/order-sign-typed-data-v4-rpc-message-decoder copy.ts","../../../packages/integration-ethereum/src/lib/decoder/rpc-message-decoder/sign-typed-data-v4-rpc-message-decoder/mint721-sign-typed-data-v4-rpc-message-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/rpc-message-decoder/sign-typed-data-v4-rpc-message-decoder/mint1155-sign-typed-data-v4-rpc-message-decoder.ts","../../../packages/integration-ethereum/src/lib/decoder/function-call-decoder.ts","features/embed/services/rpc-receiver.ts","../../../node_modules/rxjs/src/internal/operators/filter.ts","features/embed/machine-v2.ts","features/embed/services/check-app-meta.ts","features/embed/services/execute-procedure.ts","features/embed/services/check-auth-state.ts","features/embed-connect-account/components/index.tsx","features/fungable-token/eth/hooks/use-eth-balances.ts","features/embed-connect-account/ui/connection-details/index.tsx","features/embed-connect-account/components/connection-details.tsx","features/embed-connect-account/machines/index.ts","features/embed-connect-account/coordinator.tsx","features/embed/ui/loader.tsx","features/embed/util/populateTxService.ts","features/embed/procedure-approval-coordinator.tsx","features/embed/ui/error.tsx","features/embed/coordinator.tsx","features/embed/ui/asset-preview/batch.tsx","features/embed/ui/asset-preview/single.tsx","features/embed/ui/asset-preview/index.tsx","features/embed/ui/send-transaction.tsx","features/embed/util/calcPriceUtil.ts","features/fungable-token/eth/get-eth-balance.ts","../../../packages/client-db/src/lib/addresses/constants.ts","../../../packages/client-db/src/lib/addresses/repo.ts","features/fungable-token/eth/get-eth-address.ts","features/fungable-token/eth/hooks/use-eth-address.ts","features/fungable-token/eth/hooks/use-eth-exchange-rate.ts","integration/identity-manager/queries.ts","apps/identity-manager/profile/applications/utils/index.ts","state/machines/authentication/trust-device.ts","features/iframe/iframe-trust-device/services.ts","ui/atoms/center-ellipsis/index.tsx","ui/pages/register-device-decider/index.tsx","ui/utils/index.ts","../../../packages/integration/src/lib/token/types.ts","../../../packages/utils/src/lib/string.ts","../../../node_modules/ethers/src.ts/_version.ts","../../../node_modules/ethers/src.ts/ethers.ts"],"sourcesContent":["var _path, _path2, _path3, _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgDfinity(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    viewBox: \"-1 -1 107.42470599999999 54.6597\",\n    width: 103.42,\n    height: 50.66,\n    className: \"inline w-8 h-8 ml-1\",\n    \"data-v-45c16e28\": \"\",\n    \"data-v-5e337368\": \"\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", {\n    \"data-v-45c16e28\": \"\"\n  }, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.62 9.14C56.48 11.99 53.72 15.07 51.71 17.53C51.71 17.53 54.95 21.18 58.49 25.09C60.41 22.72 63.17 19.51 66.36 16.61C72.26 11.2 76.1 10.11 78.33 10.11C86.64 10.11 93.37 16.92 93.37 25.35C93.37 33.7 86.64 40.51 78.33 40.6C77.94 40.6 77.46 40.55 76.89 40.42C79.29 41.52 81.92 42.31 84.37 42.31C99.58 42.31 102.55 32.03 102.72 31.28C103.16 29.39 103.42 27.42 103.42 25.4C103.38 11.38 92.15 0 78.33 0C72.56 0 66.27 3.08 59.62 9.14Z\",\n    id: \"a2oTCciHwU\",\n    \"data-v-45c16e28\": \"\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"gradientc2rIvyDhN\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 65.17,\n    y1: 3.67,\n    x2: 99.9,\n    y2: 39.44,\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"21%\",\n    \"data-v-45c16e28\": \"\",\n    style: {\n      stopColor: \"rgb(241, 90, 36)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"68.41000000000001%\",\n    \"data-v-45c16e28\": \"\",\n    style: {\n      stopColor: \"rgb(251, 176, 59)\",\n      stopOpacity: 1\n    }\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.8 41.52C46.95 38.66 49.7 35.59 51.71 33.13C51.71 33.13 48.48 29.48 44.94 25.57C43.01 27.94 40.26 31.15 37.07 34.05C31.17 39.41 27.28 40.55 25.09 40.55C16.79 40.55 10.05 33.74 10.05 25.31C10.05 16.96 16.79 10.15 25.09 10.06C25.48 10.06 25.97 10.11 26.53 10.24C24.13 9.14 21.51 8.35 19.06 8.35C3.85 8.35 0.87 18.63 0.7 19.38C0.26 21.27 0 23.24 0 25.26C0 39.28 11.23 50.66 25.09 50.66C30.86 50.66 37.16 47.58 43.8 41.52Z\",\n    id: \"aFWcwFIax\",\n    \"data-v-45c16e28\": \"\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"gradientaIMror5Zz\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 38.22,\n    y1: 46.97,\n    x2: 3.5,\n    y2: 11.2,\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"21%\",\n    \"data-v-45c16e28\": \"\",\n    style: {\n      stopColor: \"rgb(237, 30, 121)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"89.29%\",\n    \"data-v-45c16e28\": \"\",\n    style: {\n      stopColor: \"rgb(82, 39, 133)\",\n      stopOpacity: 1\n    }\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.1 8.57C5.24 8.23 1.16 18.1 0.81 19.37C3.47 8.3 13.37 0.04 25.14 0C34.73 0 44.43 9.21 51.59 17.53C51.6 17.51 51.61 17.5 51.62 17.49C51.62 17.49 54.86 21.13 58.4 25.04C58.4 25.04 62.42 29.7 66.71 33.79C68.37 35.37 76.45 41.74 84.23 41.96C98.49 42.36 102.42 31.94 102.64 31.15C100.02 42.27 90.09 50.57 78.29 50.62C68.69 50.62 58.99 41.4 51.8 33.08C51.78 33.1 51.77 33.11 51.76 33.13C51.76 33.13 48.52 29.48 44.98 25.57C44.98 25.57 40.96 20.91 36.68 16.83C35.01 15.25 26.88 8.79 19.1 8.57ZM0.81 19.37C0.8 19.4 0.79 19.43 0.79 19.46C0.79 19.44 0.8 19.41 0.81 19.37Z\",\n    id: \"e1RZG6bOc\",\n    \"data-v-45c16e28\": \"\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#a2oTCciHwU\",\n    opacity: 1,\n    fill: \"url(#gradientc2rIvyDhN)\",\n    \"data-v-45c16e28\": \"\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#a2oTCciHwU\",\n    opacity: 1,\n    fillOpacity: 0,\n    stroke: \"#000000\",\n    strokeWidth: 1,\n    strokeOpacity: 0,\n    \"data-v-45c16e28\": \"\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#aFWcwFIax\",\n    opacity: 1,\n    fill: \"url(#gradientaIMror5Zz)\",\n    \"data-v-45c16e28\": \"\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#aFWcwFIax\",\n    opacity: 1,\n    fillOpacity: 0,\n    stroke: \"#000000\",\n    strokeWidth: 1,\n    strokeOpacity: 0,\n    \"data-v-45c16e28\": \"\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#e1RZG6bOc\",\n    opacity: 1,\n    fill: \"#29abe2\",\n    fillOpacity: 1,\n    \"data-v-45c16e28\": \"\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-v-45c16e28\": \"\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#e1RZG6bOc\",\n    opacity: 1,\n    fillOpacity: 0,\n    stroke: \"#000000\",\n    strokeWidth: 1,\n    strokeOpacity: 0,\n    \"data-v-45c16e28\": \"\"\n  }))))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgDfinity);\nexport default __webpack_public_path__ + \"static/media/dfinity.583ab84ba16070ca501453d1e291dff4.svg\";\nexport { ForwardRef as ReactComponent };","import { useActor } from \"@xstate/react\"\nimport React from \"react\"\n\nimport { useDeviceInfo } from \"frontend/integration/device\"\nimport { TrustDeviceActor } from \"frontend/state/machines/authentication/trust-device\"\nimport { AuthorizeRegisterDeciderScreen } from \"frontend/ui/pages/register-device-decider\"\n\nexport function TrustDeviceCoordinator({ actor }: Actor<TrustDeviceActor>) {\n  const [state, send] = useActor(actor)\n  const { hasPlatformAuthenticator, platform } = useDeviceInfo()\n\n  React.useEffect(\n    () =>\n      console.debug(\"TrustDeviceCoordinator\", {\n        context: state.context,\n        state: state.value,\n      }),\n    [state.value, state.context],\n  )\n\n  return (\n    <AuthorizeRegisterDeciderScreen\n      onLogin={() => send(\"DONT_TRUST\")}\n      onRegisterPlatformDevice={async () => send(\"TRUST\")}\n      onRegisterSecurityDevice={async () => send(\"TRUST\")}\n      isLoading={!state.matches(\"Select\")}\n      loadingMessage={\n        !state.matches(\"Select\") ? \"registering device\" : undefined\n      }\n      isPlatformAuthenticatorAvailable={!!hasPlatformAuthenticator}\n      deviceName={platform.device}\n      platformAuthenticatorName={platform.authenticator}\n    />\n  )\n}\n","import { IconCmpInfo, Tooltip } from \"@nfid-frontend/ui\"\n\ninterface RPCApplicationMetaSubtitleProps {\n  applicationURL?: string\n}\nexport const RPCApplicationMetaSubtitle = ({\n  applicationURL,\n}: RPCApplicationMetaSubtitleProps) => {\n  return (\n    <div className=\"flex items-center space-x-1\">\n      <span>Request from</span>\n      <a\n        className=\"text-blue hover:opacity-70\"\n        href={`https://${applicationURL}`}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        {applicationURL}\n      </a>\n      <Tooltip tip=\"Verify app url\">\n        <IconCmpInfo className=\"w-4 text-black\" />\n      </Tooltip>\n    </div>\n  )\n}\n","import { useMemo } from \"react\"\n\nimport { IWarningAccordionOption } from \"@nfid-frontend/ui\"\n\nimport { ApproverCmpProps } from \"frontend/features/embed/types\"\nimport { calcPrice } from \"frontend/features/embed/util/calcPriceUtil\"\nimport { useExchangeRates } from \"frontend/features/fungable-token/eth/hooks/use-eth-exchange-rate\"\n\nimport { SendTransaction } from \"../ui/send-transaction\"\n\nconst MappedFallback: React.FC<ApproverCmpProps> = ({\n  appMeta,\n  rpcMessage,\n  rpcMessageDecoded,\n  populatedTransaction,\n  disableConfirmButton,\n  onConfirm,\n  onReject,\n}) => {\n  const { rates } = useExchangeRates()\n\n  const price = useMemo(() => {\n    return calcPrice(rates, populatedTransaction)\n  }, [rates, populatedTransaction])\n\n  const warnings = useMemo(() => {\n    if (!price) return []\n    let warnings: IWarningAccordionOption[] = []\n\n    if (\n      !rpcMessageDecoded?.data?.meta?.content[0].url &&\n      !rpcMessageDecoded?.data?.meta?.name &&\n      rpcMessageDecoded?.data?.collectionData?.name\n    )\n      warnings.push({\n        title: \"Preview unavailable\",\n        subtitle:\n          \"Unable to estimate asset changes. Please make sure you trust this dapp.\",\n      })\n\n    if (price.isNetworkIsBusyWarning)\n      warnings.push({\n        title: \"Network is busy\",\n        subtitle: (\n          <>\n            Gas prices are high and estimates are less accurate.\n            <span className=\"text-blue-600\"> Adjust the network fee.</span>\n          </>\n        ),\n      })\n\n    return warnings\n  }, [\n    price,\n    rpcMessageDecoded?.data?.collectionData?.name,\n    rpcMessageDecoded?.data?.meta?.content,\n    rpcMessageDecoded?.data?.meta?.name,\n  ])\n\n  return (\n    <SendTransaction\n      title={`Review ${rpcMessageDecoded?.method ?? \"\"}`}\n      applicationMeta={appMeta}\n      fromAddress={rpcMessage?.params[0].from ?? rpcMessageDecoded?.from}\n      toAddress={rpcMessage?.params[0].to}\n      network={\"Ethereum\"}\n      networkFee={price.fee}\n      totalUSD={price.totalUsd}\n      totalToken={price.total ?? rpcMessageDecoded?.total}\n      currency={\"ETH\"}\n      onApprove={onConfirm}\n      disableApproveButton={disableConfirmButton}\n      isInsufficientBalance={price.isInsufficientFundsError}\n      warnings={warnings}\n      onCancel={onReject}\n      assets={[\n        {\n          icon:\n            rpcMessageDecoded?.data?.meta?.content[0].url ??\n            rpcMessageDecoded?.data?.makeAsset?.data?.meta?.content[0].url,\n          title:\n            rpcMessageDecoded?.data?.meta?.name ??\n            rpcMessageDecoded?.data?.makeAsset?.data?.meta?.name,\n          subtitle:\n            rpcMessageDecoded?.data?.collectionData?.name ??\n            rpcMessageDecoded?.data?.makeAsset?.data?.collectionData?.name,\n        },\n      ]}\n    />\n  )\n}\n\nexport default MappedFallback\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n","import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n","import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n","import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n","import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n","/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n","import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n","import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n","import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n// These constants are used to create handler registry functions using array mapping below.\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'] as const;\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'] as const;\nconst jqueryMethods = ['on', 'off'] as const;\n\nexport interface NodeStyleEventEmitter {\n  addListener(eventName: string | symbol, handler: NodeEventHandler): this;\n  removeListener(eventName: string | symbol, handler: NodeEventHandler): this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener(eventName: string, handler: NodeEventHandler): void | {};\n  removeListener(eventName: string, handler: NodeEventHandler): void | {};\n}\n\n// Use handler types like those in @types/jquery. See:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/847731ba1d7fa6db6b911c0e43aa0afe596e7723/types/jquery/misc.d.ts#L6395\nexport interface JQueryStyleEventEmitter<TContext, T> {\n  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n}\n\nexport interface EventListenerObject<E> {\n  handleEvent(evt: E): void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: EventListenerOptions | boolean\n  ): void;\n}\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\nexport function fromEvent<T>(target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>, eventName: string): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  resultSelector: (event: T) => R\n): Observable<R>;\nexport function fromEvent<T>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions,\n  resultSelector: (event: T) => R\n): Observable<R>;\n\nexport function fromEvent(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string\n): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent<T>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string,\n  resultSelector: (value: T, ...args: any[]) => R\n): Observable<R>;\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n *\n * Emit clicks happening on the DOM document\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * Use `addEventListener` with capture option\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n */\nexport function fromEvent<T>(\n  target: any,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: (...args: any[]) => T\n): Observable<T> {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    return fromEvent<T>(target, eventName, options as EventListenerOptions).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  // Figure out our add and remove methods. In order to do this,\n  // we are going to analyze the target in a preferred order, if\n  // the target matches a given signature, we take the two \"add\" and \"remove\"\n  // method names and apply them to a map to create opposite versions of the\n  // same function. This is because they all operate in duplicate pairs,\n  // `addListener(name, handler)`, `removeListener(name, handler)`, for example.\n  // The call only differs by method name, as to whether or not you're adding or removing.\n  const [add, remove] =\n    // If it is an EventTarget, we need to use a slightly different method than the other two patterns.\n    isEventTarget(target)\n      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))\n      : // In all other cases, the call pattern is identical with the exception of the method names.\n      isNodeStyleEventEmitter(target)\n      ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n      : isJQueryStyleEventEmitter(target)\n      ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n      : [];\n\n  // If add is falsy, it's because we didn't match a pattern above.\n  // Check to see if it is an ArrayLike, because if it is, we want to\n  // try to apply fromEvent to all of it's items. We do this check last,\n  // because there are may be some types that are both ArrayLike *and* implement\n  // event registry points, and we'd rather delegate to that when possible.\n  if (!add) {\n    if (isArrayLike(target)) {\n      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(\n        innerFrom(target)\n      ) as Observable<T>;\n    }\n  }\n\n  // If add is falsy and we made it here, it's because we didn't\n  // match any valid target objects above.\n  if (!add) {\n    throw new TypeError('Invalid event target');\n  }\n\n  return new Observable<T>((subscriber) => {\n    // The handler we are going to register. Forwards the event object, by itself, or\n    // an array of arguments to the event handler, if there is more than one argument,\n    // to the consumer.\n    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);\n    // Do the work of adding the handler to the target.\n    add(handler);\n    // When we finalize, we want to remove the handler and free up memory.\n    return () => remove!(handler);\n  });\n}\n\n/**\n * Used to create `add` and `remove` functions to register and unregister event handlers\n * from a target in the most common handler pattern, where there are only two arguments.\n * (e.g.  `on(name, fn)`, `off(name, fn)`, `addListener(name, fn)`, or `removeListener(name, fn)`)\n * @param target The target we're calling methods on\n * @param eventName The event name for the event we're creating register or unregister functions for\n */\nfunction toCommonHandlerRegistry(target: any, eventName: string) {\n  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);\n}\n\n/**\n * Checks to see if the target implements the required node-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {\n  return isFunction(target.addListener) && isFunction(target.removeListener);\n}\n\n/**\n * Checks to see if the target implements the required jQuery-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {\n  return isFunction(target.on) && isFunction(target.off);\n}\n\n/**\n * Checks to see if the target implements the required EventTarget methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isEventTarget(target: any): target is HasEventTargetAddRemove<any> {\n  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","export const assetAbi = {\n  contract: \"address\",\n  tokenId: \"uint256\",\n}\n","import { EthersEthereum } from \"@rarible/ethers-ethereum\"\nimport { ethers } from \"ethers\"\n\nimport { AssetId } from \"./asset-decoder\"\n\nconst ethereum = new EthersEthereum(ethers.Wallet.createRandom())\n\nexport enum AssetType {\n  ERC721 = \"0x73ad2146\",\n  ERC721_LAZY = \"0xd8f960c1\",\n  ERC1155 = \"0x973bb640\",\n  ERC1155_LAZY = \"0x1cdfaa40\",\n}\n\nexport class AssetDecoderService {\n  private ethereum: EthersEthereum\n\n  constructor(ethereum: EthersEthereum) {\n    this.ethereum = ethereum\n  }\n\n  map(abi: object, data: string): AssetId {\n    const result = this.ethereum.decodeParameter({ root: { abi } }, data)\n    return { collectionId: result[0][0][0], tokenId: result[0][0][1] }\n  }\n\n  mapLazy(abi: object, data: string): AssetId {\n    const nft =\n      \"0x0000000000000000000000000000000000000000000000000000000000000020\" +\n      data.substring(2)\n    const result = this.ethereum.decodeParameter(abi, nft)\n    return { collectionId: result[0][0], tokenId: result[0][1][0] }\n  }\n}\n\nexport const assetDecoderService = new AssetDecoderService(ethereum)\n","import { assetAbi } from \"../asset-abi\"\nimport { AssetDecoder, AssetId } from \"../asset-decoder\"\nimport {\n  assetDecoderService,\n  AssetDecoderService,\n  AssetType,\n} from \"../asset-decoder-service\"\n\nclass Erc721AssetDecoder implements AssetDecoder {\n  private assetDecoderService: AssetDecoderService\n\n  constructor(assetDecoderService: AssetDecoderService) {\n    this.assetDecoderService = assetDecoderService\n  }\n\n  getAbi(): object {\n    return assetAbi\n  }\n\n  getMethod(): string {\n    return AssetType.ERC721\n  }\n\n  map(data: string): AssetId {\n    return this.assetDecoderService.map(this.getAbi(), data)\n  }\n}\n\nexport const erc721AssetDecoder = new Erc721AssetDecoder(assetDecoderService)\n","export const erc721AssetLazyAbi = {\n  components: [\n    {\n      name: \"contract\",\n      type: \"address\",\n    },\n    {\n      components: [\n        {\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n        {\n          name: \"uri\",\n          type: \"string\",\n        },\n        {\n          components: [\n            {\n              name: \"account\",\n              type: \"address\",\n            },\n            {\n              name: \"value\",\n              type: \"uint96\",\n            },\n          ],\n          name: \"creators\",\n          type: \"tuple[]\",\n        },\n        {\n          components: [\n            {\n              name: \"account\",\n              type: \"address\",\n            },\n            {\n              name: \"value\",\n              type: \"uint96\",\n            },\n          ],\n          name: \"royalties\",\n          type: \"tuple[]\",\n        },\n        {\n          name: \"signatures\",\n          type: \"bytes[]\",\n        },\n      ],\n      name: \"data\",\n      type: \"tuple\",\n    },\n  ],\n  name: \"data\",\n  type: \"tuple\",\n}\n","import { AssetDecoder, AssetId } from \"../asset-decoder\"\nimport {\n  assetDecoderService,\n  AssetDecoderService,\n  AssetType,\n} from \"../asset-decoder-service\"\nimport { erc721AssetLazyAbi } from \"./erc721-asset-lazy-abi\"\n\nclass Erc721AssetLazyDecoder implements AssetDecoder {\n  private AssetDecoderService: AssetDecoderService\n\n  constructor(AssetDecoderService: AssetDecoderService) {\n    this.AssetDecoderService = AssetDecoderService\n  }\n\n  getAbi(): object {\n    return erc721AssetLazyAbi\n  }\n\n  getMethod(): string {\n    return AssetType.ERC721_LAZY\n  }\n\n  map(data: string): AssetId {\n    return this.AssetDecoderService.mapLazy(this.getAbi(), data)\n  }\n}\n\nexport const erc721AssetLazyDecoder = new Erc721AssetLazyDecoder(\n  assetDecoderService,\n)\n","import { assetAbi } from \"../asset-abi\"\nimport { AssetDecoder, AssetId } from \"../asset-decoder\"\nimport {\n  assetDecoderService,\n  AssetDecoderService,\n  AssetType,\n} from \"../asset-decoder-service\"\n\nclass Erc1155AssetDecoder implements AssetDecoder {\n  private AssetDecoderService: AssetDecoderService\n\n  constructor(AssetDecoderService: AssetDecoderService) {\n    this.AssetDecoderService = AssetDecoderService\n  }\n\n  getAbi(): object {\n    return assetAbi\n  }\n\n  getMethod(): string {\n    return AssetType.ERC1155\n  }\n\n  map(data: string): AssetId {\n    return this.AssetDecoderService.map(this.getAbi(), data)\n  }\n}\n\nexport const erc1155AssetDecoder = new Erc1155AssetDecoder(assetDecoderService)\n","export const erc1155AssetLazyAbi = {\n  components: [\n    {\n      name: \"contract\",\n      type: \"address\",\n    },\n    {\n      components: [\n        {\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n        {\n          name: \"uri\",\n          type: \"string\",\n        },\n        {\n          name: \"supply\",\n          type: \"uint256\",\n        },\n        {\n          components: [\n            {\n              name: \"account\",\n              type: \"address\",\n            },\n            {\n              name: \"value\",\n              type: \"uint96\",\n            },\n          ],\n          name: \"creators\",\n          type: \"tuple[]\",\n        },\n        {\n          components: [\n            {\n              name: \"account\",\n              type: \"address\",\n            },\n            {\n              name: \"value\",\n              type: \"uint96\",\n            },\n          ],\n          name: \"royalties\",\n          type: \"tuple[]\",\n        },\n        {\n          name: \"signatures\",\n          type: \"bytes[]\",\n        },\n      ],\n      name: \"data\",\n      type: \"tuple\",\n    },\n  ],\n  name: \"data\",\n  type: \"tuple\",\n}\n","import { AssetDecoder, AssetId } from \"../asset-decoder\"\nimport {\n  assetDecoderService,\n  AssetDecoderService,\n  AssetType,\n} from \"../asset-decoder-service\"\nimport { erc1155AssetLazyAbi } from \"./erc1155-asset-lazy-abi\"\n\nclass Erc1155TokenLazyDecoder implements AssetDecoder {\n  private AssetDecoderService: AssetDecoderService\n\n  constructor(AssetDecoderService: AssetDecoderService) {\n    this.AssetDecoderService = AssetDecoderService\n  }\n\n  getAbi(): object {\n    return erc1155AssetLazyAbi\n  }\n\n  getMethod(): string {\n    return AssetType.ERC1155_LAZY\n  }\n\n  map(data: string): AssetId {\n    return this.AssetDecoderService.mapLazy(this.getAbi(), data)\n  }\n}\n\nexport const erc1155TokenLazyDecoder = new Erc1155TokenLazyDecoder(\n  assetDecoderService,\n)\n","import { Decoder } from \"./decoder\"\n\nclass DependencyService {\n  group<A, I, O, T extends Decoder<A, string, I, O>>(\n    decoders: T[],\n  ): {\n    [key: string]: T\n  } {\n    return decoders\n      .map((x) => {\n        return { key: x.getMethod(), value: x }\n      })\n      .reduce((obj, item) => {\n        obj[item.key] = item.value\n        return obj\n      }, {} as Record<string, T>)\n  }\n}\n\nexport const dependencyService = new DependencyService()\n","import { Fragment, FunctionFragment, Interface } from \"ethers/lib/utils\"\n\nimport { DecodedFunctionCall } from \"./method-decoder/method-decoder\"\n\nclass FunctionCallService {\n  decode(data: string, fragment: Fragment): DecodedFunctionCall {\n    const method = fragment.name\n\n    try {\n      const iface = new Interface([fragment as Fragment])\n      const inputs = iface.decodeFunctionData(\n        FunctionFragment.from(fragment as Fragment),\n        data,\n      )\n      const names =\n        fragment.inputs?.map((input) => {\n          if (input.type.includes(\"tuple\")) {\n            return [input.name, input.components?.map((c) => c.name)]\n          }\n          return input.name\n        }) ?? []\n      const types =\n        fragment.inputs?.map((input) => {\n          if (input.type.includes(\"tuple\")) {\n            const componentTypes =\n              input.components?.map((c) => c.type).join(\",\") ?? \"\"\n            return `(${componentTypes})`\n          }\n          return input.type\n        }) ?? []\n      // FIXME:\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return { method, inputs, names, types }\n    } catch (error) {\n      console.debug(`${method} is not a match`)\n    }\n\n    return { method: \"\", inputs: [], names: [], types: [] }\n  }\n}\n\nexport const functionCallService = new FunctionCallService()\n","export const approveAbi = {\n  inputs: [\n    {\n      internalType: \"address\",\n      name: \"spender\",\n      type: \"address\",\n    },\n    {\n      internalType: \"uint256\",\n      name: \"amount\",\n      type: \"uint256\",\n    },\n  ],\n  name: \"approve\",\n  outputs: [\n    {\n      internalType: \"bool\",\n      name: \"\",\n      type: \"bool\",\n    },\n  ],\n  stateMutability: \"nonpayable\",\n  type: \"function\",\n}\n","import { BigNumber } from \"ethers\"\n\nimport {\n  DecodedFunctionCall,\n  FunctionCall,\n  MethodDecoder,\n} from \"../method-decoder\"\nimport { approveAbi } from \"./approve-abi\"\n\nexport type Approve = FunctionCall & {\n  data: {\n    spender: string\n    amount: string\n  }\n}\n\nclass ApproveMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    return approveAbi\n  }\n\n  getMethod(): string {\n    return \"0x095ea7b3\"\n  }\n\n  async map(x: DecodedFunctionCall): Promise<Approve> {\n    const [spender, amount] = x.inputs\n    return Promise.resolve({\n      interface: \"Approve\",\n      method: \"approve\",\n      data: {\n        spender,\n        amount: BigNumber.from(amount).toString(),\n      },\n    })\n  }\n}\n\nexport const approveMethodDecoder = new ApproveMethodDecoder()\n","export const bulkPurchaseAbi = {\n  inputs: [\n    {\n      components: [\n        {\n          internalType: \"enum RaribleExchangeWrapper.Markets\",\n          name: \"marketId\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"fees\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"data\",\n          type: \"bytes\",\n        },\n      ],\n      internalType: \"struct RaribleExchangeWrapper.PurchaseDetails[]\",\n      name: \"purchaseDetails\",\n      type: \"tuple[]\",\n    },\n    {\n      internalType: \"address\",\n      name: \"feeRecipientFirst\",\n      type: \"address\",\n    },\n    {\n      internalType: \"address\",\n      name: \"feeRecipientSecond\",\n      type: \"address\",\n    },\n    {\n      internalType: \"bool\",\n      name: \"allowFail\",\n      type: \"bool\",\n    },\n  ],\n  name: \"bulkPurchase\",\n  outputs: [],\n  stateMutability: \"payable\",\n  type: \"function\",\n}\n","import { BigNumber } from \"ethers\"\n\nimport { decode } from \"../../../decode-ethereum-function-call\"\nimport {\n  DecodedFunctionCall,\n  FunctionCall,\n  Item,\n  MethodDecoder,\n} from \"../method-decoder\"\nimport { bulkPurchaseAbi } from \"./bulk-purchase-abi\"\n\nexport type Buy = {\n  amount: BigNumber\n  fees: BigNumber\n  item: Item\n  marketId: number\n}\n\nexport type BulkPurchase = FunctionCall & {\n  data: {\n    allowFail: boolean\n    feeRecipientFirst: number\n    feeRecipientSecond: number\n    items: Buy[]\n  }\n}\n\nclass BulkPurchaseMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    return bulkPurchaseAbi\n  }\n\n  getMethod(): string {\n    return \"0xb94ee332\"\n  }\n\n  async map({ inputs }: DecodedFunctionCall): Promise<BulkPurchase> {\n    const [itemsData, feeRecipientFirst, feeRecipientSecond, allowFail] = inputs\n\n    const itemPromises = itemsData.map(async (item: any) => {\n      const [marketId, amount, fees, itemData] = item\n      const decodedItem = await decode(itemData)\n      return {\n        amount: amount.toString(),\n        fees: fees.toString(),\n        item: decodedItem,\n        marketId,\n      }\n    })\n\n    const items = await Promise.all(itemPromises)\n\n    return Promise.resolve({\n      interface: \"BatchBuyRequest\",\n      method: \"bulkPurchase\",\n      data: {\n        allowFail: allowFail as boolean,\n        feeRecipientFirst: parseInt(feeRecipientFirst, 16),\n        feeRecipientSecond: parseInt(feeRecipientSecond, 16),\n        items,\n      },\n    })\n  }\n}\n\nexport const bulkPurchaseMethodDecoder = new BulkPurchaseMethodDecoder()\n","import { functionCallDecoder } from \"./decoder/function-call-decoder\"\nimport { FunctionCall, Method } from \"./decoder/method-decoder/method-decoder\"\nimport { RpcMessageFunctionalCall } from \"./decoder/rpc-message-decoder/rpc-message-decoder\"\n\nexport interface RPCMessage {\n  method: string\n  params: any[]\n}\n\nexport async function decodeRpcMessage(\n  rpcMessage: RPCMessage,\n): Promise<RpcMessageFunctionalCall> {\n  return functionCallDecoder.decodeRpcMessage(rpcMessage)\n}\n\nexport async function decode(data: string): Promise<FunctionCall> {\n  return functionCallDecoder.decode(data)\n}\n\nexport async function decodeTokenByAssetClass(\n  type: string,\n  data: string,\n  method: Method = \"sell\",\n): Promise<FunctionCall> {\n  return functionCallDecoder.decodeByAssetClass(type, data, method)\n}\n","export const burnAbi = {\n  inputs: [\n    {\n      internalType: \"uint256\",\n      name: \"tokenId\",\n      type: \"uint256\",\n    },\n  ],\n  name: \"burn\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\",\n}\n","import {\n  DecodedFunctionCall,\n  FunctionCall,\n  MethodDecoder,\n} from \"../method-decoder\"\nimport { burnAbi } from \"./burn-abi\"\n\nexport type Burn = FunctionCall & {\n  data: {\n    tokenId: string\n  }\n}\n\nclass BurnMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    return burnAbi\n  }\n\n  getMethod(): string {\n    return \"0x42966c68\"\n  }\n\n  async map(x: DecodedFunctionCall): Promise<Burn> {\n    const [tokenId] = x.inputs\n    return Promise.resolve({\n      interface: \"Burn\",\n      method: \"burn\",\n      data: {\n        tokenId: tokenId.toString(),\n      },\n    })\n  }\n}\n\nexport const burnMethodDecoder = new BurnMethodDecoder()\n","export const cancelAbi = {\n  inputs: [\n    {\n      components: [\n        {\n          internalType: \"address\",\n          name: \"maker\",\n          type: \"address\",\n        },\n        {\n          components: [\n            {\n              components: [\n                {\n                  internalType: \"bytes4\",\n                  name: \"assetClass\",\n                  type: \"bytes4\",\n                },\n                {\n                  internalType: \"bytes\",\n                  name: \"data\",\n                  type: \"bytes\",\n                },\n              ],\n              internalType: \"struct LibAsset.AssetType\",\n              name: \"assetType\",\n              type: \"tuple\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"value\",\n              type: \"uint256\",\n            },\n          ],\n          internalType: \"struct LibAsset.Asset\",\n          name: \"makeAsset\",\n          type: \"tuple\",\n        },\n        {\n          internalType: \"address\",\n          name: \"taker\",\n          type: \"address\",\n        },\n        {\n          components: [\n            {\n              components: [\n                {\n                  internalType: \"bytes4\",\n                  name: \"assetClass\",\n                  type: \"bytes4\",\n                },\n                {\n                  internalType: \"bytes\",\n                  name: \"data\",\n                  type: \"bytes\",\n                },\n              ],\n              internalType: \"struct LibAsset.AssetType\",\n              name: \"assetType\",\n              type: \"tuple\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"value\",\n              type: \"uint256\",\n            },\n          ],\n          internalType: \"struct LibAsset.Asset\",\n          name: \"takeAsset\",\n          type: \"tuple\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"salt\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"start\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"end\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes4\",\n          name: \"dataType\",\n          type: \"bytes4\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"data\",\n          type: \"bytes\",\n        },\n      ],\n      internalType: \"struct LibOrder.Order\",\n      name: \"order\",\n      type: \"tuple\",\n    },\n  ],\n  name: \"cancel\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\",\n}\n","import { decodeTokenByAssetClass } from \"../../../decode-ethereum-function-call\"\nimport {\n  MethodDecoder,\n  FunctionCall,\n  DecodedFunctionCall,\n} from \"../method-decoder\"\nimport { cancelAbi } from \"./cancel-abi\"\n\nexport type CancelOrder = FunctionCall & {\n  data: {\n    maker: string\n    makeAsset: FunctionCall\n    taker: string\n    takeAssetPrice: string\n    salt: string\n    start: string\n    end: string\n  }\n}\n\nexport class CancelMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    return cancelAbi\n  }\n\n  getMethod(): string {\n    return \"0xe2864fe3\"\n  }\n\n  async map(x: DecodedFunctionCall): Promise<CancelOrder> {\n    const [[maker, makeAssets, taker, [_, takeAssetPrice], salt, start, end]] =\n      x.inputs\n    const [assetClass, assetId] = makeAssets[0]\n\n    const makeAsset = await decodeTokenByAssetClass(assetClass, assetId)\n\n    return {\n      interface: \"CancelOrder\",\n      method: \"cancel\",\n      data: {\n        maker,\n        makeAsset,\n        taker,\n        takeAssetPrice: takeAssetPrice.toString(),\n        salt: salt.toString(),\n        start: start.toString(),\n        end: end.toString(),\n      },\n    }\n  }\n}\n\nexport const cancelMethodDecoder = new CancelMethodDecoder()\n","import {\n  DecodedFunctionCall,\n  FunctionCall,\n  MethodDecoder,\n} from \"../method-decoder\"\n\nexport type CreateToken = FunctionCall & {\n  data: {\n    name: string\n    symbol: string\n    baseURI: string\n    contractURI: string\n    isPrivate: boolean\n  }\n}\n\nexport abstract class CreateTokenMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  getMethod(): string {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  async map({ inputs }: DecodedFunctionCall): Promise<CreateToken> {\n    const [name, symbol, baseURI, contractURI, isPrivate] = inputs\n\n    return Promise.resolve({\n      interface: \"CollectionRequest\",\n      method: \"createToken\",\n      data: {\n        name,\n        symbol,\n        baseURI,\n        contractURI,\n        isPrivate: !Array.isArray(isPrivate),\n      },\n    })\n  }\n}\n","export const createTokenPrivateAbi = {\n  inputs: [\n    {\n      internalType: \"string\",\n      name: \"_name\",\n      type: \"string\",\n    },\n    {\n      internalType: \"string\",\n      name: \"_symbol\",\n      type: \"string\",\n    },\n    {\n      internalType: \"string\",\n      name: \"baseURI\",\n      type: \"string\",\n    },\n    {\n      internalType: \"string\",\n      name: \"contractURI\",\n      type: \"string\",\n    },\n    {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\",\n    },\n  ],\n  name: \"createToken\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\",\n}\n","import { CreateTokenMethodDecoder } from \"../create-token-method-decoder\"\nimport { createTokenPrivateAbi } from \"./create-token-private-abi\"\n\nclass CreateTokenPrivateMethodDecoder extends CreateTokenMethodDecoder {\n  override getAbi(): object {\n    return createTokenPrivateAbi\n  }\n\n  override getMethod(): string {\n    return \"0x72397ad5\"\n  }\n}\n\nexport const createTokenPrivateMethodDecoder =\n  new CreateTokenPrivateMethodDecoder()\n","export const createTokenPublicAbi = {\n  inputs: [\n    {\n      internalType: \"string\",\n      name: \"_name\",\n      type: \"string\",\n    },\n    {\n      internalType: \"string\",\n      name: \"_symbol\",\n      type: \"string\",\n    },\n    {\n      internalType: \"string\",\n      name: \"baseURI\",\n      type: \"string\",\n    },\n    {\n      internalType: \"string\",\n      name: \"contractURI\",\n      type: \"string\",\n    },\n    {\n      internalType: \"address[]\",\n      name: \"operators\",\n      type: \"address[]\",\n    },\n    {\n      internalType: \"uint256\",\n      name: \"salt\",\n      type: \"uint256\",\n    },\n  ],\n  name: \"createToken\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\",\n}\n","import { CreateTokenMethodDecoder } from \"../create-token-method-decoder\"\nimport { createTokenPublicAbi } from \"./create-token-public-abi\"\n\nclass CreateTokenPublicMethodDecoder extends CreateTokenMethodDecoder {\n  override getAbi(): object {\n    return createTokenPublicAbi\n  }\n\n  override getMethod(): string {\n    return \"0x27050d1f\"\n  }\n}\n\nexport const createTokenPublicMethodDecoder =\n  new CreateTokenPublicMethodDecoder()\n","export const directAcceptBidAbi = {\n  inputs: [\n    {\n      components: [\n        {\n          internalType: \"address\",\n          name: \"bidMaker\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"bidNftAmount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes4\",\n          name: \"nftAssetClass\",\n          type: \"bytes4\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"nftData\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"bidPaymentAmount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"address\",\n          name: \"paymentToken\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"bidSalt\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"bidStart\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"bidEnd\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes4\",\n          name: \"bidDataType\",\n          type: \"bytes4\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"bidData\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"bidSignature\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"sellOrderPaymentAmount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"sellOrderNftAmount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"sellOrderData\",\n          type: \"bytes\",\n        },\n      ],\n      internalType: \"struct LibDirectTransfer.AcceptBid\",\n      name: \"direct\",\n      type: \"tuple\",\n    },\n  ],\n  name: \"directAcceptBid\",\n  outputs: [],\n  stateMutability: \"payable\",\n  type: \"function\",\n}\n","import { decodeTokenByAssetClass } from \"../../../decode-ethereum-function-call\"\nimport {\n  DecodedFunctionCall,\n  FunctionCall,\n  MethodDecoder,\n} from \"../method-decoder\"\nimport { directAcceptBidAbi } from \"./direct-accept-bid-abi\"\n\nexport type DirectAcceptBid = FunctionCall & {\n  data: {\n    bidMaker: string\n    bidNftAmount: string\n    nft: FunctionCall\n    bidPaymentAmount: string\n    paymentToken: string\n    bidSalt: string\n    bidStart: string\n    bidEnd: string\n    bidDataType: string\n    bidData: string\n    bidSignature: string\n    sellOrderPaymentAmount: string\n    sellOrderNftAmount: string\n    sellOrderData: string\n  }\n}\n\nclass DirectAcceptBidMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    return directAcceptBidAbi\n  }\n\n  getMethod(): string {\n    return \"0x67d49a3b\"\n  }\n\n  async map(x: DecodedFunctionCall): Promise<DirectAcceptBid> {\n    const [\n      bidMaker,\n      bidNftAmount,\n      nftAssetClass,\n      nftData,\n      bidPaymentAmount,\n      paymentToken,\n      bidSalt,\n      bidStart,\n      bidEnd,\n      bidDataType,\n      bidData,\n      bidSignature,\n      sellOrderPaymentAmount,\n      sellOrderNftAmount,\n      sellOrderData,\n    ] = x.inputs[0]\n    const nft: FunctionCall = await decodeTokenByAssetClass(\n      nftAssetClass,\n      nftData,\n    )\n    return Promise.resolve({\n      interface: \"DirectAcceptBid\",\n      method: \"directAcceptBid\",\n      data: {\n        bidMaker,\n        bidNftAmount: bidNftAmount.toString(),\n        nft,\n        bidPaymentAmount: bidPaymentAmount.toString(),\n        paymentToken,\n        bidSalt: bidSalt.toString(),\n        bidStart: bidStart.toString(),\n        bidEnd: bidEnd.toString(),\n        bidDataType,\n        bidData,\n        bidSignature,\n        sellOrderPaymentAmount: sellOrderPaymentAmount.toString(),\n        sellOrderNftAmount: sellOrderNftAmount.toString(),\n        sellOrderData,\n      },\n    })\n  }\n}\n\nexport const directAcceptBidMethodDecoder = new DirectAcceptBidMethodDecoder()\n","export const directPurchaseAbi = {\n  inputs: [\n    {\n      components: [\n        {\n          internalType: \"address\",\n          name: \"sellOrderMaker\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"sellOrderNftAmount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes4\",\n          name: \"nftAssetClass\",\n          type: \"bytes4\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"nftData\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"sellOrderPaymentAmount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"address\",\n          name: \"paymentToken\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"sellOrderSalt\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"sellOrderStart\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"sellOrderEnd\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes4\",\n          name: \"sellOrderDataType\",\n          type: \"bytes4\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"sellOrderData\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"sellOrderSignature\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"buyOrderPaymentAmount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"buyOrderNftAmount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"buyOrderData\",\n          type: \"bytes\",\n        },\n      ],\n      internalType: \"struct LibDirectTransfer.Purchase\",\n      name: \"direct\",\n      type: \"tuple\",\n    },\n  ],\n  name: \"directPurchase\",\n  outputs: [],\n  stateMutability: \"payable\",\n  type: \"function\",\n}\n","import { decodeTokenByAssetClass } from \"../../../decode-ethereum-function-call\"\nimport {\n  DecodedFunctionCall,\n  FunctionCall,\n  MethodDecoder,\n} from \"../method-decoder\"\nimport { directPurchaseAbi } from \"./direct-purchase-abi\"\n\nexport type DirectPurchase = FunctionCall\n\nclass DirectPurchaseMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    return directPurchaseAbi\n  }\n\n  getMethod(): string {\n    return \"0x0d5f7d35\"\n  }\n\n  async map({ inputs }: DecodedFunctionCall): Promise<DirectPurchase> {\n    const [[, , type, content]] = inputs\n    return await decodeTokenByAssetClass(type, content, \"directPurchase\")\n  }\n}\n\nexport const directPurchaseMethodDecoder = new DirectPurchaseMethodDecoder()\n","export const mintAndTransferAbi = {\n  inputs: [\n    {\n      components: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"string\",\n          name: \"tokenURI\",\n          type: \"string\",\n        },\n        {\n          components: [\n            {\n              internalType: \"address payable\",\n              name: \"account\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint96\",\n              name: \"value\",\n              type: \"uint96\",\n            },\n          ],\n          internalType: \"struct LibPart.Part[]\",\n          name: \"creators\",\n          type: \"tuple[]\",\n        },\n        {\n          components: [\n            {\n              internalType: \"address payable\",\n              name: \"account\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint96\",\n              name: \"value\",\n              type: \"uint96\",\n            },\n          ],\n          internalType: \"struct LibPart.Part[]\",\n          name: \"royalties\",\n          type: \"tuple[]\",\n        },\n        {\n          internalType: \"bytes[]\",\n          name: \"signatures\",\n          type: \"bytes[]\",\n        },\n      ],\n      internalType: \"struct LibERC721LazyMint.Mint721Data\",\n      name: \"data\",\n      type: \"tuple\",\n    },\n    {\n      internalType: \"address\",\n      name: \"to\",\n      type: \"address\",\n    },\n  ],\n  name: \"mintAndTransfer\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\",\n}\n","import {\n  DecodedFunctionCall,\n  FunctionCall,\n  MethodDecoder,\n} from \"../method-decoder\"\nimport { mintAndTransferAbi } from \"./mint-and-transfer-abi\"\n\nexport type Creator = {\n  creator: string\n  value: string\n}\n\nexport type MintAndTransfer = FunctionCall & {\n  data: {\n    tokenId: string\n    tokenURI: string\n    creators: Creator[]\n    royalties: string\n    signatures: string[]\n    to: string\n  }\n}\n\nclass MintAndTransferMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    return mintAndTransferAbi\n  }\n\n  getMethod(): string {\n    return \"0x22a775b6\"\n  }\n\n  async map({ inputs }: DecodedFunctionCall): Promise<MintAndTransfer> {\n    const [[tokenId, tokenURI, creators, royalties, signatures], to] = inputs\n\n    const mappedCreators = creators.map((creator: any) => ({\n      creator: creator[0],\n      value: creator[1].toString(),\n    }))\n\n    return Promise.resolve({\n      interface: \"MintRequest\",\n      method: \"mintAndTransfer\",\n      data: {\n        tokenId: tokenId.toString(),\n        tokenURI,\n        creators: mappedCreators,\n        royalties,\n        signatures,\n        to,\n      },\n    })\n  }\n}\n\nexport const mintAndTransferMethodDecoder = new MintAndTransferMethodDecoder()\n","export const safeTransferFromAbi = {\n  inputs: [\n    {\n      internalType: \"address\",\n      name: \"from\",\n      type: \"address\",\n    },\n    {\n      internalType: \"address\",\n      name: \"to\",\n      type: \"address\",\n    },\n    {\n      internalType: \"uint256\",\n      name: \"id\",\n      type: \"uint256\",\n    },\n    {\n      internalType: \"uint256\",\n      name: \"amount\",\n      type: \"uint256\",\n    },\n    {\n      internalType: \"bytes\",\n      name: \"data\",\n      type: \"bytes\",\n    },\n  ],\n  name: \"safeTransferFrom\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\",\n}\n","import {\n  DecodedFunctionCall,\n  FunctionCall,\n  MethodDecoder,\n} from \"../method-decoder\"\nimport { safeTransferFromAbi } from \"./safe-transfer-from-abi\"\n\nexport type SafeTransferFrom = FunctionCall & {\n  data: {\n    from: string\n    to: string\n    id: string\n    amount: string\n    data: string\n  }\n}\n\nclass SafeTransferFromMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    return safeTransferFromAbi\n  }\n\n  getMethod(): string {\n    return \"0xf242432a\"\n  }\n\n  async map({ inputs }: DecodedFunctionCall): Promise<SafeTransferFrom> {\n    const [from, to, id, amount, data] = inputs\n    return Promise.resolve({\n      interface: \"SafeTransferFrom\",\n      method: \"safeTransferFrom\",\n      data: {\n        from,\n        to,\n        id: id.toString(),\n        amount: amount.toString(),\n        data,\n      },\n    })\n  }\n}\n\nexport const safeTransferFromMethodDecoder = new SafeTransferFromMethodDecoder()\n","export const setApprovalForAllAbi = {\n  inputs: [\n    {\n      internalType: \"address\",\n      name: \"operator\",\n      type: \"address\",\n    },\n    {\n      internalType: \"bool\",\n      name: \"approved\",\n      type: \"bool\",\n    },\n  ],\n  name: \"setApprovalForAll\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\",\n}\n","import {\n  DecodedFunctionCall,\n  FunctionCall,\n  MethodDecoder,\n} from \"../method-decoder\"\nimport { setApprovalForAllAbi } from \"./set-approval-for-all-abi\"\n\nexport type SetApprovalForAll = FunctionCall & {\n  data: {\n    operator: string\n    approved: boolean\n  }\n}\n\nclass SetApprovalForAllMethodDecoder implements MethodDecoder {\n  getAbi(): object {\n    return setApprovalForAllAbi\n  }\n\n  getMethod(): string {\n    return \"0xa22cb465\"\n  }\n\n  async map(x: DecodedFunctionCall): Promise<SetApprovalForAll> {\n    const [operator, approved] = x.inputs\n    return Promise.resolve({\n      interface: \"SetApprovalForAll\",\n      method: \"setApprovalForAll\",\n      data: {\n        operator,\n        approved,\n      },\n    })\n  }\n}\n\nexport const setApprovalForAllMethodDecoder =\n  new SetApprovalForAllMethodDecoder()\n","import { Interface, Method } from \"../method-decoder/method-decoder\"\n\nexport type RpcMessageFunctionalCall = {\n  interface: Interface\n  method: Method\n  data: object\n  from: string\n  to?: string\n  maxFeePerGas?: string\n  maxPriorityFeePerGas?: string\n  value?: string\n}\n\nexport type RpcMessageDecoder = {\n  method: string\n  decode: (params: any[]) => Promise<RpcMessageFunctionalCall>\n}\n\nexport const parseHex = (x: string): string =>\n  (Number(parseInt(x, 16)) / 10 ** 18).toString()\n","import { functionCallDecoder } from \"../function-call-decoder\"\nimport {\n  RpcMessageDecoder,\n  RpcMessageFunctionalCall,\n  parseHex,\n} from \"./rpc-message-decoder\"\n\nexport const ethSendTransactionRpcMessageDecoder: RpcMessageDecoder = {\n  method: \"eth_sendTranscation\",\n  decode: async ([parameter]: any[]): Promise<RpcMessageFunctionalCall> => {\n    const data = await functionCallDecoder.decode(parameter.data)\n\n    return Promise.resolve({\n      interface: data.interface,\n      method: data.method,\n      data: data.data,\n      from: parameter.from,\n      to: parameter.to,\n      maxFeePerGas: parseHex(parameter.maxFeePerGas),\n      maxPriorityFeePerGas: parseHex(parameter.maxPriorityFeePerGas),\n      value: parameter.value ? parseHex(parameter.value) : undefined,\n    })\n  },\n}\n","import {\n  RpcMessageDecoder,\n  RpcMessageFunctionalCall,\n} from \"./rpc-message-decoder\"\n\nexport const personalSignRpcMessageDecoder: RpcMessageDecoder = {\n  method: \"personal_sign\",\n  decode: async (params: string[]): Promise<RpcMessageFunctionalCall> => {\n    const message = Buffer.from(params[0].slice(2), \"hex\").toString(\"utf8\")\n    const from = params[1]\n\n    return Promise.resolve({\n      interface: \"PersonalSign\",\n      method: \"personalSign\",\n      data: { message },\n      from: from,\n    })\n  },\n}\n","import {\n  RpcMessageDecoder,\n  RpcMessageFunctionalCall,\n} from \"./rpc-message-decoder\"\nimport { mint721SignTypedDataV4RpcMessageDecoder } from \"./sign-typed-data-v4-rpc-message-decoder/mint721-sign-typed-data-v4-rpc-message-decoder\"\nimport { mint1155SignTypedDataV4RpcMessageDecoder } from \"./sign-typed-data-v4-rpc-message-decoder/mint1155-sign-typed-data-v4-rpc-message-decoder\"\nimport { orderSignTypedDataV4RpcMessageDecoder } from \"./sign-typed-data-v4-rpc-message-decoder/order-sign-typed-data-v4-rpc-message-decoder copy\"\n\nexport type SignTypedDataV4RpcMessageDecoder = {\n  decode: (from: string, json: object) => Promise<RpcMessageFunctionalCall>\n}\n\nconst decoders: { [key: string]: SignTypedDataV4RpcMessageDecoder } = {\n  Order: orderSignTypedDataV4RpcMessageDecoder,\n  Mint721: mint721SignTypedDataV4RpcMessageDecoder,\n  Mint1155: mint1155SignTypedDataV4RpcMessageDecoder,\n}\n\nexport const signTypedDataV4RpcMessageDecoder: RpcMessageDecoder = {\n  method: \"eth_signTypedData_v4\",\n  decode: async ([\n    from,\n    parameter,\n  ]: any[]): Promise<RpcMessageFunctionalCall> => {\n    const json = JSON.parse(parameter)\n    const type = json.primaryType\n\n    const decoder = decoders[type]\n\n    if (!decoder) {\n      throw new Error(\"No sign typed data decoder found\")\n    }\n\n    return decoder.decode(from, json)\n  },\n}\n","import { AssetType } from \"../../asset-decoder/asset-decoder-service\"\nimport { functionCallDecoder } from \"../../function-call-decoder\"\nimport { Method } from \"../../method-decoder/method-decoder\"\nimport { RpcMessageFunctionalCall } from \"../rpc-message-decoder\"\nimport { SignTypedDataV4RpcMessageDecoder } from \"../sign-typed-data-v4-rpc-message-decoder.\"\n\nexport const orderSignTypedDataV4RpcMessageDecoder: SignTypedDataV4RpcMessageDecoder =\n  {\n    decode: async (\n      from: string,\n      json: any,\n    ): Promise<RpcMessageFunctionalCall> => {\n      const makeAsset = json.message.makeAsset.assetType\n      const takeAsset = json.message.takeAsset.assetType\n\n      // if the first element is NFI, then it's a sell, otherwise it's a bid.\n      const isSell = Object.values(AssetType).includes(makeAsset.assetClass)\n      const asset = isSell\n        ? { method: \"SellOrder\" as Method, value: makeAsset }\n        : { method: \"BidOrder\" as Method, value: takeAsset }\n\n      const data = await functionCallDecoder.decodeByAssetClass(\n        asset.value.assetClass,\n        asset.value.data,\n      )\n\n      return Promise.resolve({\n        interface: \"Item\",\n        method: asset.method,\n        data: data.data,\n        from: from,\n        total: Number(json?.message?.takeAsset?.value) / 10 ** 18,\n      })\n    },\n  }\n","import { RpcMessageFunctionalCall } from \"../rpc-message-decoder\"\nimport { SignTypedDataV4RpcMessageDecoder } from \"../sign-typed-data-v4-rpc-message-decoder.\"\n\nexport type MintLazy721 = {\n  contract: string\n  uri: string\n  tokenId: string\n  royalties: any[]\n  creators: any[]\n}\n\nexport const mint721SignTypedDataV4RpcMessageDecoder: SignTypedDataV4RpcMessageDecoder =\n  {\n    decode: async (\n      from: string,\n      json: any,\n    ): Promise<RpcMessageFunctionalCall> => {\n      const { contract, uri, tokenId, royalties, creators } = json.message\n\n      return Promise.resolve({\n        interface: \"MintLazy721\",\n        method: \"Mint721\",\n        from,\n        data: {\n          contract,\n          uri,\n          tokenId,\n          royalties,\n          creators,\n        },\n      })\n    },\n  }\n","import { RpcMessageFunctionalCall } from \"../rpc-message-decoder\"\nimport { SignTypedDataV4RpcMessageDecoder } from \"../sign-typed-data-v4-rpc-message-decoder.\"\n\nexport type MintLazy1155 = {\n  contract: string\n  uri: string\n  tokenId: string\n  supply: string\n  account: string\n  royalties: any[]\n  creators: any[]\n}\n\nexport const mint1155SignTypedDataV4RpcMessageDecoder: SignTypedDataV4RpcMessageDecoder =\n  {\n    decode: async (\n      from: string,\n      json: any,\n    ): Promise<RpcMessageFunctionalCall> => {\n      const { contract, uri, tokenId, supply, creators, royalties } =\n        json.message\n      const { account } = creators[0]\n\n      return Promise.resolve({\n        interface: \"MintLazy1155\",\n        method: \"Mint1155\",\n        from,\n        data: {\n          contract,\n          uri,\n          tokenId,\n          supply,\n          account,\n          creators,\n          royalties,\n        },\n      })\n    },\n  }\n","import { createRaribleSdk } from \"@rarible/sdk\"\nimport { Fragment } from \"ethers/lib/utils\"\n\nimport { RPCMessage } from \"../decode-ethereum-function-call\"\nimport { erc721AssetDecoder } from \"./asset-decoder/erc721-asset-decoder/erc721-asset-decoder\"\nimport { erc721AssetLazyDecoder } from \"./asset-decoder/erc721-asset-decoder/erc721-asset-lazy-decoder\"\nimport { erc1155AssetDecoder } from \"./asset-decoder/erc1155-asset-decoder/erc1155-asset-decoder\"\nimport { erc1155TokenLazyDecoder } from \"./asset-decoder/erc1155-asset-decoder/erc1155-asset-lazy-decoder\"\nimport { dependencyService } from \"./dependency-service\"\nimport { functionCallService } from \"./function-call-service\"\nimport { approveMethodDecoder } from \"./method-decoder/approve/approve-method-decoder\"\nimport { bulkPurchaseMethodDecoder } from \"./method-decoder/bulk-purchase/bulk-purchase-method-decoder\"\nimport { burnMethodDecoder } from \"./method-decoder/burn/burn-method-decoder\"\nimport { cancelMethodDecoder } from \"./method-decoder/cancel/cancel-method-decoder\"\nimport { createTokenPrivateMethodDecoder } from \"./method-decoder/create-token/create-token-private/create-token-private-method-decoder\"\nimport { createTokenPublicMethodDecoder } from \"./method-decoder/create-token/create-token-public/create-token-public-method-decoder\"\nimport { directAcceptBidMethodDecoder } from \"./method-decoder/direct-accept-bid/direct-accept-bid-method-decoder\"\nimport { directPurchaseMethodDecoder } from \"./method-decoder/direct-purchase/direct-purchase-method-decoder\"\nimport { FunctionCall, Method } from \"./method-decoder/method-decoder\"\nimport { mintAndTransferMethodDecoder } from \"./method-decoder/mint/mint-and-transfer-method-decoder\"\nimport { safeTransferFromMethodDecoder } from \"./method-decoder/safe-transfer-from/safe-transfer-from-method-decoder\"\nimport { setApprovalForAllMethodDecoder } from \"./method-decoder/set-approval-for-all/set-approval-for-all-method-decoder\"\nimport { ethSendTransactionRpcMessageDecoder } from \"./rpc-message-decoder/eth-sendtransaction-rpc-message-decoder\"\nimport { personalSignRpcMessageDecoder } from \"./rpc-message-decoder/personal-sign-decoder\"\nimport {\n  RpcMessageDecoder,\n  RpcMessageFunctionalCall,\n} from \"./rpc-message-decoder/rpc-message-decoder\"\nimport { signTypedDataV4RpcMessageDecoder } from \"./rpc-message-decoder/sign-typed-data-v4-rpc-message-decoder.\"\n\nconst sdk = createRaribleSdk(null, \"testnet\")\nconst methodDecoders = dependencyService.group([\n  cancelMethodDecoder,\n  directAcceptBidMethodDecoder,\n  burnMethodDecoder,\n  safeTransferFromMethodDecoder,\n  bulkPurchaseMethodDecoder,\n  directPurchaseMethodDecoder,\n  createTokenPrivateMethodDecoder,\n  createTokenPublicMethodDecoder,\n  mintAndTransferMethodDecoder,\n  setApprovalForAllMethodDecoder,\n  approveMethodDecoder,\n])\nconst assetDecoders = dependencyService.group([\n  erc721AssetDecoder,\n  erc721AssetLazyDecoder,\n  erc1155AssetDecoder,\n  erc1155TokenLazyDecoder,\n])\nconst rpcMessageDecoders: { [key: string]: RpcMessageDecoder } = {\n  eth_sendTransaction: ethSendTransactionRpcMessageDecoder,\n  eth_signTypedData_v4: signTypedDataV4RpcMessageDecoder,\n  personal_sign: personalSignRpcMessageDecoder,\n}\n\nexport const functionCallDecoder = {\n  decode(data: string): Promise<FunctionCall> {\n    const method = data.substring(0, 10)\n    const methodDecoder = methodDecoders[method]\n\n    if (!methodDecoder) {\n      throw new Error(\"No method decoder found\")\n    }\n\n    const fragment = methodDecoder.getAbi() as Fragment\n    const decodedData = functionCallService.decode(data, fragment)\n    return methodDecoder.map(decodedData)\n  },\n\n  async decodeByAssetClass(\n    type: string,\n    data: string,\n    method: Method = \"sell\",\n  ): Promise<FunctionCall> {\n    const assetDecoder = assetDecoders[type]\n\n    if (!assetDecoder) {\n      throw new Error(\"No asset decoder found\")\n    }\n\n    const tokenId = assetDecoder.map(data)\n    const [item, collection] = await Promise.all([\n      await sdk.apis.item.getItemById({\n        itemId: `ETHEREUM:${tokenId.collectionId}:${tokenId.tokenId}`,\n      }),\n      await sdk.apis.collection.getCollectionById({\n        collection: `ETHEREUM:${tokenId?.collectionId}`,\n      }),\n    ])\n\n    return {\n      interface: \"Item\",\n      method: method,\n      data: {\n        ...item,\n        collectionData: collection,\n      },\n    }\n  },\n\n  async decodeRpcMessage({\n    method,\n    params,\n  }: RPCMessage): Promise<RpcMessageFunctionalCall> {\n    const rpcMessageDecoder = rpcMessageDecoders[method]\n\n    if (!rpcMessageDecoder) {\n      throw new Error(\"No rpc message decoder found\")\n    }\n\n    return rpcMessageDecoder.decode(params)\n  },\n}\n","import { filter, fromEvent, map } from \"rxjs\"\n\nimport { decodeRpcMessage, FunctionCall } from \"@nfid/integration-ethereum\"\n\nexport const RPC_BASE = { jsonrpc: \"2.0\" }\n\ninterface RPCBase {\n  jsonrpc: string\n  id: string\n}\n\ntype NfidRpcOptions = {\n  chainId?: string\n  rpcUrl?: string\n}\n\nexport interface RPCMessage extends RPCBase {\n  method: string\n  params: any[]\n  options: NfidRpcOptions\n}\n\ninterface RPCSuccessResponse extends RPCBase {\n  result: any\n}\n\ninterface RPCErrorResponse extends RPCBase {\n  error: {\n    code: number\n    message: string\n    data: any\n  }\n}\n\nexport type RPCResponse = RPCSuccessResponse | RPCErrorResponse\n\nconst windowMessages = fromEvent<MessageEvent<RPCMessage>>(window, \"message\")\n\nexport const rpcMessages = windowMessages.pipe(\n  filter((event) => event.data && event.data.jsonrpc === \"2.0\"),\n)\n\nexport const RPCReceiver = () =>\n  rpcMessages.pipe(\n    map(async ({ data, origin }) => {\n      switch (data.method) {\n        case \"eth_accounts\":\n          return { type: \"CONNECT_ACCOUNT\", data, origin }\n        case \"eth_sendTransaction\":\n          return { type: \"SEND_TRANSACTION\", data, origin }\n        case \"eth_signTypedData_v4\":\n          return { type: \"SIGN_TYPED_DATA\", data, origin }\n        default:\n          throw new Error(`Unknown method: ${data.method}`)\n      }\n    }),\n  )\n\ntype ProcedureDetails = {\n  rpcMessage: RPCMessage\n  rpcMessageDecoded?: FunctionCall\n  origin: string\n}\n\nexport type ProcedureCallEvent = {\n  type: \"RPC_MESSAGE\"\n  data: ProcedureDetails\n}\n\nexport const RPCReceiverV2 =\n  () => (send: (event: ProcedureCallEvent) => void) => {\n    const subsciption = rpcMessages.subscribe(\n      async ({ data: rpcMessage, origin }) => {\n        switch (rpcMessage.method) {\n          case \"eth_accounts\":\n            return send({\n              type: \"RPC_MESSAGE\",\n              data: { rpcMessage, origin },\n            })\n          case \"eth_sendTransaction\":\n            const rpcMessageDecoded = await decodeMessage(rpcMessage)\n\n            return send({\n              type: \"RPC_MESSAGE\",\n              data: {\n                rpcMessage,\n                rpcMessageDecoded,\n                origin,\n              },\n            })\n          case \"eth_signTypedData_v4\":\n            const rpcMessageDecodedTypedData = await decodeMessage(rpcMessage)\n            return send({\n              type: \"RPC_MESSAGE\",\n              data: {\n                rpcMessage,\n                rpcMessageDecoded: rpcMessageDecodedTypedData,\n                origin,\n              },\n            })\n          case \"personal_sign\":\n            const rpcMessagePersonalSign = await decodeMessage(rpcMessage)\n            return send({\n              type: \"RPC_MESSAGE\",\n              data: {\n                rpcMessage,\n                rpcMessageDecoded: rpcMessagePersonalSign,\n                origin,\n              },\n            })\n          default:\n            throw new Error(\n              `RPCReceiverV2 unknown method: ${rpcMessage.method}`,\n            )\n        }\n      },\n    )\n    return () => subsciption.unsubscribe()\n  }\n\nconst decodeMessage = async (\n  rpcMessage: RPCMessage,\n): Promise<FunctionCall | undefined> => {\n  try {\n    return await decodeRpcMessage(rpcMessage)\n  } catch (error: any) {\n    console.warn(\"decodeRPCMEssage\", { error })\n    return undefined\n  }\n}\n","import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n","import { getExpirationDelay } from \"packages/integration/src/lib/authentication/get-expiration\"\nimport { assign, createMachine } from \"xstate\"\n\nimport { Application, authState } from \"@nfid/integration\"\nimport { FunctionCall } from \"@nfid/integration-ethereum\"\n\nimport { AuthSession } from \"frontend/state/authentication\"\nimport { AuthorizingAppMeta } from \"frontend/state/authorization\"\nimport AuthenticationMachine from \"frontend/state/machines/authentication/authentication\"\nimport TrustDeviceMachine from \"frontend/state/machines/authentication/trust-device\"\n\nimport { CheckApplicationMeta } from \"./services/check-app-meta\"\nimport { CheckAuthState } from \"./services/check-auth-state\"\nimport {\n  ExecuteProcedureService,\n  ApproveSignatureEvent,\n} from \"./services/execute-procedure\"\nimport {\n  ProcedureCallEvent,\n  RPCMessage,\n  RPCReceiverV2 as RPCReceiver,\n  RPCResponse,\n  RPC_BASE,\n} from \"./services/rpc-receiver\"\n\ntype InvokationErrors = {\n  type: \"error.platform.NFIDEmbedMachineV2.HANDLE_PROCEDURE.EXECUTE_PROCEDURE:invocation[0]\"\n  data: Error\n}\n\ntype Events =\n  | InvokationErrors\n  | ProcedureCallEvent\n  | { type: \"SESSION_EXPIRED\" }\n  | {\n      type: \"APPROVE\"\n      data?: ApproveSignatureEvent\n    }\n  | { type: \"CANCEL\" }\n  | { type: \"CANCEL_ERROR\" }\n  | { type: \"RETRY\" }\n\ntype Services = {\n  RPCReceiver: {\n    data: null\n  }\n  CheckAuthState: {\n    data: AuthSession\n  }\n  AuthenticationMachine: {\n    data: AuthSession\n  }\n  ExecuteProcedureService: {\n    data: RPCResponse\n  }\n  CheckApplicationMeta: {\n    data: Application\n  }\n}\n\ntype NFIDEmbedMachineContext = {\n  appMeta: AuthorizingAppMeta\n  authRequest: {\n    hostname: string\n  }\n  authSession?: AuthSession\n  requestOrigin?: string\n  rpcMessage?: RPCMessage\n  rpcMessageDecoded?: FunctionCall\n  error?: Error\n  messageQueue: Array<RPCMessage>\n}\n\nexport const NFIDEmbedMachineV2 = createMachine(\n  {\n    /** @xstate-layout N4IgpgJg5mDOIC5QDkBiBJAIgUQLYCNIBZAQwGMALASwDswA1AJgDoAlABQGEB9V7T7OnrZWAYnasA8gMwBVPt04BBADIqA2gAYAuolAAHAPawqAFyqGaekAA9EAZgAsLRgDZXAdjeuAnIwCs-h72HgA0IACeDgAcrsya9rEesY4+Ho7urgC+WeFoWHiEEKSUtAwsHDx8AkIi4lIy8tiKqhoAjLpIIEYm5pbWdgj2w8z2Pm2Ompnjmv4+-uFRCI7RPqOMIYyrHpo+4045eRg4BMTk1HRMzEqyACoAEsycFGBkANZKAK6mLzTmZCQ+jRRFpOgZjGYLFYuoNGH5mGkfLtovY2sEPB5XItEG1US5NClXG4Mm0EocQPkTkUShdytc7o9nq8Pt9fv9AVCQR1rD1If0YQ4EsxVvZNG1XP5XKlktiEG1-ELGJNXG1GIw2hNieTKYUzqVLiwbg9rqywH8qADTGBRBBLGBmLQAG6GN72nWnYrnMpXI2PL4-M3sq0IJ2GS1Q0GgnkQoEDRDRBXMBWJJzRHZuNqyiYeNb+CZi0XzRjJHza466z36um+5i3ABOn1gpkwYEdFuttroDpoztdzHd1K9BvpxvrjebrfbIZ7YY5lkjOmjvShcblgRY8o8-kcmP8SvsSqzCpY8xR-lW0Wl6TLBQ9NO9hoZJoD5stkFEAGVsB+P+hJMhuGwAANdh0D4TAoy6XlYwFBAiX8BEfEcIJoi2TQMi3LN7H8exmDVUV7HcMUMMcG8qT1WkrnuJRkEwFRmgkaRsDkPg2GwJRMAATRBRcoJjFdYLaNJmAyJE8ycCV0VlS9cMcRIVkcSYcw8eUyIre9h2o2j6O4RjGlYpQAHUlHQW5dIaZimm4JR2EY+hVFEGy7OwSDwWXflQEGaIhOYLd1U0YICWwnxpMcNpmDaaIE3QvMpQlRg1LvIc6S0uiGIsljsGuYzTPMpjMus2ypHslRRGUZABA0Xi3L5aFPMQVIEIVCUnCVHc5icWUfEIkTutcEIJkRPNEsHKsqJotK8v0rLgP4O50vypobTtbtezdcskrGlhUp0vTLNY2bOHmqb9uwadnXDecdFc7p+I82wcQSRxmHcYIfCind0gCrrkgReLUVxfDUJGiiH2YHaFum5hDuOvbMtEMA6zrQw62YfQABtAQAMxR3B+w20bKO2ibdoyppoaAubbkh07ztnIEFzBW73Lqh65TC8Lok0LY0zcJwfBVUKWBUkJZhzeVsI8EHKyJ8GSZpzLodYKQxD4W5WE4m7oIE+q5Q2NZUUIrwDz2NJGFlYJnrC4ZSTGeYFVLXIKQJ0HNPlk7FZEFWypozgdK9yRWC1u7WcGeUpTw1V3GGHZJXNyJHuEwIhMSVYVhCHInZoQwIDgawB1d8ol1q1cAFolSTXZtw2bynASTME4QOFoiTRJPB3LYo4Sp2C5lsHKl4fhBGEVhi5g3XRSTUk9lrrd0QJWUOdGS8MT8XFUhWaWNOrBkx51tmNl6mLMUiiUBZCxvVQrnZYkCbnvPPfwt+Sn0nyZd5-TZC051Z7X7sGFSR9kIn1vufI8mhNCIVmGmfqao8zdyOLeQmYMayf0DN-K0e9-4NS5i9ISzgxhixVA3JYExAijAlNuIkaYcKxGfltEcjwxxNhbG2MgYAsGhxxJFJqiQ-ABACgqNMWZkIIUItud6sw77oXobLVBppXyAkgJw1ckVUijFPsMTwUp5giPIeIqhWwtxt1kWDCGHsmgqNggEeIYxXquHQmmNEujG5xQRIDbqOZiwqkdog8ifc3baQVuTPgHFOJWN1sEWxAttGOJUtEUK4VIor1xKKOS4pTGBMmnDcmRkTJmRyQoJyxVVARLZmFOIhEtgHgSMmdIWJG6XiSVFBUyFxQZD3JklK7tCkzUpkdamFi+BlLDgkDcKoO7vUUkSaSaIXofRzGmYIGw2hdPGkEoZM1laBxGTiLwHgIrt0IkiXcYRGlhQigs1J6FUTZEzkAA */\n    id: \"NFIDEmbedMachineV2\",\n    preserveActionOrder: true,\n    tsTypes: {} as import(\"./machine-v2.typegen\").Typegen0,\n    type: \"parallel\",\n    schema: {\n      context: {} as NFIDEmbedMachineContext,\n      events: {} as Events,\n      services: {} as Services,\n    },\n    context: {\n      messageQueue: [],\n      appMeta: {},\n      authRequest: {\n        hostname: \"\",\n      },\n    },\n    states: {\n      RPC_RECEIVER: {\n        invoke: {\n          src: \"RPCReceiver\",\n        },\n        on: {\n          RPC_MESSAGE: [\n            {\n              target: \"RPC_RECEIVER\",\n              actions: \"assignProcedure\",\n              cond: \"isReady\",\n            },\n            {\n              target: \"RPC_RECEIVER\",\n              actions: \"queueRequest\",\n            },\n          ],\n        },\n      },\n\n      AUTH: {\n        initial: \"CheckAppMeta\",\n        states: {\n          CheckAppMeta: {\n            invoke: {\n              src: \"CheckApplicationMeta\",\n              onDone: {\n                target: \"CheckAuthentication\",\n                actions: \"assignAppMeta\",\n              },\n            },\n          },\n          CheckAuthentication: {\n            invoke: {\n              src: \"CheckAuthState\",\n              onDone: {\n                target: \"Authenticated\",\n                actions: [\"assignAuthSession\", \"nfid_authenticated\"],\n              },\n              onError: \"Authenticate\",\n            },\n          },\n          Authenticate: {\n            invoke: {\n              src: \"AuthenticationMachine\",\n              data: (context) => context,\n              onDone: [\n                {\n                  target: \"TrustDevice\",\n                  actions: \"assignAuthSession\",\n                },\n              ],\n            },\n          },\n          TrustDevice: {\n            invoke: {\n              src: \"TrustDeviceMachine\",\n              onDone: [\n                {\n                  target: \"Authenticated\",\n                },\n              ],\n            },\n          },\n          Authenticated: {\n            entry: \"nfid_authenticated\",\n            invoke: {\n              src: () => (send) => {\n                const { delegationIdentity } = authState.get()\n                if (!delegationIdentity) return send(\"SESSION_EXPIRED\")\n\n                const expiresIn = getExpirationDelay(delegationIdentity)\n                const timeoutIn = expiresIn * 0.8\n\n                const now = Date.now()\n\n                console.debug(\"NFIDEmbedMachineV2 delegation expires at\", {\n                  expiresAt: new Date(now + expiresIn),\n                  timeoutAt: new Date(now + timeoutIn),\n                })\n\n                const timeout = setTimeout(() => {\n                  console.debug(\"NFIDEmbedMachineV2 delegation expired\")\n                  send(\"SESSION_EXPIRED\")\n                }, timeoutIn)\n\n                return () => clearTimeout(timeout)\n              },\n            },\n            on: {\n              SESSION_EXPIRED: {\n                target: \"Authenticate\",\n                actions: \"nfid_unauthenticated\",\n              },\n            },\n          },\n        },\n      },\n\n      HANDLE_PROCEDURE: {\n        initial: \"READY\",\n        states: {\n          READY: {\n            always: {\n              target: \"AWAIT_PROCEDURE_APPROVAL\",\n              cond: \"hasProcedure\",\n            },\n          },\n\n          AWAIT_PROCEDURE_APPROVAL: {\n            on: {\n              APPROVE: \"EXECUTE_PROCEDURE\",\n              CANCEL: {\n                target: \"READY\",\n                actions: [\"sendRPCCancelResponse\", \"updateProcedure\"],\n              },\n            },\n          },\n\n          EXECUTE_PROCEDURE: {\n            invoke: {\n              src: \"ExecuteProcedureService\",\n              onDone: {\n                actions: [\"sendRPCResponse\", \"updateProcedure\"],\n                target: \"READY\",\n              },\n              onError: { target: \"ERROR\", actions: \"assignError\" },\n            },\n          },\n\n          ERROR: {\n            on: {\n              RETRY: \"AWAIT_PROCEDURE_APPROVAL\",\n              CANCEL_ERROR: {\n                target: \"READY\",\n                actions: [\"sendRPCCancelResponse\", \"updateProcedure\"],\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      assignAppMeta: assign((context, event) => ({\n        appMeta: {\n          logo: event.data?.icon\n            ? window.location.origin +\n              new URL(event?.data?.icon ?? \"\")?.pathname\n            : undefined,\n          name: event?.data?.name,\n          url: new URL(event?.data?.domain).host,\n        },\n        authRequest: { hostname: event?.data?.domain },\n      })),\n      assignProcedure: assign((_, event) => ({\n        requestOrigin: event.data.origin,\n        rpcMessage: event.data.rpcMessage,\n        rpcMessageDecoded: event.data.rpcMessageDecoded,\n      })),\n      updateProcedure: assign(({ messageQueue }, event) => {\n        return {\n          rpcMessage: messageQueue[0],\n          messageQueue: messageQueue.slice(1, messageQueue.length),\n        }\n      }),\n      assignAuthSession: assign((_, event) => {\n        console.debug(\"assignAuthSession\", { event })\n        return { authSession: event.data }\n      }),\n      queueRequest: assign((context, event) => ({\n        // TODO: we need to queue all data\n        messageQueue: [...context.messageQueue, event.data.rpcMessage],\n      })),\n      assignError: assign((context, event) => ({\n        error: event.data,\n      })),\n      nfid_authenticated: () => {\n        console.debug(\"nfid_authenticated\")\n        window.parent.postMessage(\n          { type: \"nfid_authenticated\" },\n          window.location.ancestorOrigins[0],\n        )\n      },\n      nfid_unauthenticated: ({ requestOrigin }) => {\n        if (!requestOrigin)\n          throw new Error(\"nfid_unauthenticated: missing requestOrigin\")\n\n        console.debug(\"nfid_authenticated\")\n        window.parent.postMessage(\n          { type: \"nfid_unauthenticated\" },\n          requestOrigin,\n        )\n      },\n      sendRPCResponse: ({ requestOrigin }, event) => {\n        if (!requestOrigin)\n          throw new Error(\"nfid_unauthenticated: missing requestOrigin\")\n\n        console.debug(\"sendRPCResponse\", { event })\n        window.parent.postMessage(event.data, requestOrigin)\n      },\n      sendRPCCancelResponse: (context) => {\n        if (!context.requestOrigin)\n          throw new Error(\"nfid_unauthenticated: missing requestOrigin\")\n        if (!context.rpcMessage?.id)\n          throw new Error(\"sendRPCCancelResponse: missing rpcMessage.id\")\n\n        window.parent.postMessage(\n          {\n            ...RPC_BASE,\n            id: context.rpcMessage.id,\n            // FIXME: find correct error code\n            error: { code: -1, message: \"NFID: user canceled request\" },\n          },\n          context.requestOrigin,\n        )\n      },\n    },\n    guards: {\n      hasProcedure: (context: NFIDEmbedMachineContext) => !!context.rpcMessage,\n      isReady: (_: NFIDEmbedMachineContext, __: Events, { state }: any) =>\n        state.matches(\"HANDLE_PROCEDURE.READY\"),\n    },\n    services: {\n      CheckApplicationMeta,\n      ExecuteProcedureService,\n      AuthenticationMachine,\n      TrustDeviceMachine,\n      RPCReceiver,\n      CheckAuthState,\n    },\n  },\n)\n","import { Application } from \"@nfid/integration\"\n\nimport { fetchApplication } from \"frontend/integration/identity-manager\"\n\nexport const CheckApplicationMeta = async (context: {\n  requestOrigin?: string\n}) => {\n  let application: Application\n  try {\n    application = await fetchApplication(\n      window.location.ancestorOrigins[0] ?? \"\",\n    )\n  } catch (e) {\n    application = {\n      name: \"Unknown application\",\n      accountLimit: 5,\n      alias: [window.location.ancestorOrigins[0]],\n      domain: window.location.ancestorOrigins[0],\n      isIFrameAllowed: false,\n      isNftStorage: false,\n    }\n    console.log(\"Error fetching application\", e)\n  }\n  return application\n}\n","import { TransactionRequest } from \"@ethersproject/abstract-provider\"\n\nimport { DelegationWalletAdapter, ProviderError } from \"@nfid/integration\"\n\nimport { getWalletDelegation } from \"frontend/integration/facade/wallet\"\nimport { AuthSession } from \"frontend/state/authentication\"\n\nimport { RPCMessage, RPCResponse, RPC_BASE } from \"./rpc-receiver\"\n\ntype CommonContext = { rpcMessage?: RPCMessage; authSession?: AuthSession }\n\nexport type ApproveSignatureEvent = {\n  populatedTransaction?: [TransactionRequest, ProviderError | undefined]\n}\n\ntype ExecuteProcedureEvent = ApproveSignatureEvent\n\ntype ExecuteProcedureServiceContext = CommonContext\n\nexport const ExecuteProcedureService = async (\n  { rpcMessage, authSession }: ExecuteProcedureServiceContext,\n  { data }: { data?: ExecuteProcedureEvent },\n): Promise<RPCResponse> => {\n  if (!rpcMessage)\n    throw new Error(\"ExecuteProcedureService: missing rpcMessage\")\n  if (!authSession)\n    throw new Error(\"ExecuteProcedureService: missing authSession\")\n\n  const rpcBase = { ...RPC_BASE, id: rpcMessage.id }\n  const delegation = await getWalletDelegation(authSession.anchor)\n  const { rpcUrl } = rpcMessage.options\n  switch (rpcMessage.method) {\n    case \"eth_accounts\": {\n      const adapter = new DelegationWalletAdapter(rpcUrl)\n      const address = await adapter.getAddress(delegation)\n\n      const response = { ...rpcBase, result: [address] }\n      console.debug(\"ExecuteProcedureService eth_accounts\", {\n        response,\n      })\n      return response\n    }\n    case \"eth_signTypedData_v4\": {\n      const [, typedData] = rpcMessage.params\n      const adapter = new DelegationWalletAdapter(rpcUrl)\n      const result = await adapter.signTypedData(\n        JSON.parse(typedData),\n        delegation,\n      )\n      const response = { ...rpcBase, result }\n      console.debug(\"ExecuteProcedureService eth_signTypedData_v4\", {\n        response,\n      })\n      return response\n    }\n    case \"eth_sendTransaction\": {\n      const adapter = new DelegationWalletAdapter(rpcUrl)\n      const { wait, ...result } = await adapter.sendTransaction(\n        delegation,\n        data?.populatedTransaction,\n      )\n      const response = { ...rpcBase, result: result.hash }\n      console.debug(\"ExecuteProcedureService eth_accounts\", {\n        response,\n      })\n      return response\n    }\n    case \"personal_sign\": {\n      const [message] = rpcMessage.params\n      const adapter = new DelegationWalletAdapter(rpcUrl)\n      const result = await adapter.signMessage(message, delegation)\n      const response = { ...rpcBase, result: result }\n      console.debug(\"ExecuteProcedureService personal_sign\", {\n        response,\n      })\n      return response\n    }\n    default:\n      throw new Error(\"ExecuteProcedureService: unknown procedure\")\n  }\n}\n","import { authState, loadProfileFromLocalStorage } from \"@nfid/integration\"\n\nimport { fetchProfile } from \"frontend/integration/identity-manager\"\nimport { AuthSession } from \"frontend/state/authentication\"\n\nexport const CheckAuthState = async (): Promise<AuthSession> => {\n  const { delegationIdentity } = await authState.fromCache()\n\n  if (!delegationIdentity)\n    throw new Error(\"CheckAuthState: no auth session in cache\")\n\n  const { anchor } = loadProfileFromLocalStorage() ?? (await fetchProfile())\n\n  return {\n    anchor,\n    sessionSource: \"cache\",\n    delegationIdentity,\n  }\n}\n","import { useMemo } from \"react\"\n\nimport { IGroupedOptions, IconPngEthereum } from \"@nfid-frontend/ui\"\nimport { truncateString } from \"@nfid-frontend/utils\"\nimport { E8S } from \"@nfid/integration/token/icp\"\n\nimport { useEthAddress } from \"frontend/features/fungable-token/eth/hooks/use-eth-address\"\nimport { useEthBalance } from \"frontend/features/fungable-token/eth/hooks/use-eth-balances\"\n\nimport { ChooseAccount } from \"../ui/choose-account/choose-account\"\n\ninterface IEmbedChooseAccount {\n  applicationLogo?: string\n  applicationName?: string\n  applicationURL?: string\n  onConnectionDetails: () => void\n  onConnect: (hostname: string, accountId: string) => void\n}\n\nexport const EmbedChooseAccount = ({\n  applicationLogo,\n  applicationName,\n  applicationURL,\n  onConnectionDetails,\n  onConnect,\n}: IEmbedChooseAccount) => {\n  const { address } = useEthAddress()\n  const { balance } = useEthBalance()\n\n  const accountsOptions: IGroupedOptions[] = useMemo(() => {\n    if (!address) return []\n\n    return [\n      {\n        label: \"Public\",\n        options: [\n          {\n            title: \"NFID Account 1\",\n            value: address,\n            subTitle: truncateString(address, 6, 4),\n            innerTitle: balance?.tokenBalance\n              ? `${Number(balance.tokenBalance) / E8S} ETH`\n              : \"\",\n            innerSubtitle: balance?.usdBalance,\n            icon: IconPngEthereum,\n          },\n        ],\n      },\n    ]\n  }, [address, balance?.tokenBalance, balance?.usdBalance])\n\n  return (\n    <ChooseAccount\n      accounts={accountsOptions}\n      onConnectionDetails={onConnectionDetails}\n      onConnect={() => onConnect(\"nfid.one\", \"0\")}\n      appMeta={{\n        logo: applicationLogo,\n        name: applicationName,\n        url: applicationURL,\n      }}\n    />\n  )\n}\n","import useSWR from \"swr\"\n\nimport { getEthBalance } from \"../get-eth-balance\"\n\nexport const useEthBalance = () => {\n  const { data: balance, ...rest } = useSWR(\"ethBalance\", getEthBalance)\n\n  return { balance, ...rest }\n}\n","import { IconCmpArrow } from \"@nfid-frontend/ui\"\n\nexport interface IConnectionDetail {\n  label: string\n  value?: string\n}\n\ninterface IConnectionDetails {\n  onBack: () => void\n  details: IConnectionDetail[]\n}\nexport const ConnectionDetails = ({ onBack, details }: IConnectionDetails) => {\n  return (\n    <div>\n      <div className=\"flex items-center\">\n        <IconCmpArrow className=\"cursor-pointer\" onClick={onBack} />\n        <p className=\"text-xl font-bold ml-2.5\">Connection details</p>\n      </div>\n      <div className=\"mt-5 space-y-3 text-gray-400\">\n        {details.map((item) => {\n          return (\n            <div key={`detail_${item.label}_${item.value}`}>\n              <p className=\"mb-1 text-xs\">{item.label}</p>\n              <div className=\"h-10 text-sm bg-gray-100 pl-2.5 rounded-md leading-10\">\n                {item.value}\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n","import { useMemo } from \"react\"\n\nimport { RPCMessage } from \"frontend/features/embed/services/rpc-receiver\"\nimport { AuthSession } from \"frontend/state/authentication\"\n\nimport { ConnectionDetails } from \"../ui/connection-details\"\n\ninterface IMappedConnectionDetails {\n  rpcMessage?: RPCMessage\n\n  authSession?: AuthSession\n  onCancel: () => void\n}\n\nexport const MappedConnectionDetails = ({\n  rpcMessage,\n  authSession,\n  onCancel,\n}: IMappedConnectionDetails) => {\n  const details = useMemo(() => {\n    return [\n      { label: \"Anchor\", value: String(authSession?.anchor) },\n      {\n        label: \"RPC ID\",\n        value: rpcMessage?.id,\n      },\n      {\n        label: \"Method\",\n        value: rpcMessage?.method,\n      },\n      {\n        label: \"jsonrpc\",\n        value: rpcMessage?.jsonrpc,\n      },\n    ]\n  }, [\n    authSession?.anchor,\n    rpcMessage?.id,\n    rpcMessage?.jsonrpc,\n    rpcMessage?.method,\n  ])\n\n  return <ConnectionDetails onBack={onCancel} details={details} />\n}\n","import { ActorRefFrom, assign, createMachine } from \"xstate\"\n\nimport { Account } from \"@nfid/integration\"\n\nimport { RPCMessage } from \"frontend/features/embed/services/rpc-receiver\"\nimport { fetchAccountsService } from \"frontend/integration/identity-manager/services\"\nimport {\n  AuthorizationRequest,\n  AuthorizingAppMeta,\n} from \"frontend/state/authorization\"\n\nexport type EmbedConnectAccountMachineContext = {\n  appMeta?: AuthorizingAppMeta\n  authRequest: AuthorizationRequest\n  accounts?: Account[]\n  accountsLimit?: number\n  rpcMessage?: RPCMessage\n}\n\ntype Events =\n  | { type: \"CREATE_ACCOUNT\" }\n  | { type: \"SELECT_ACCOUNT\"; data: { accountId: Account[\"accountId\"] } }\n  | { type: \"PRESENT_ACCOUNTS\" }\n  | { type: \"CONNECTION_DETAILS\" }\n  | {\n      type: \"CONNECT_WITH_ACCOUNT\"\n      data: { hostname: string; accountId: string }\n    }\n  | { type: \"CONNECT_ANONYMOUSLY\" }\n  | { type: \"BACK\" }\n\ntype Services = {\n  fetchAccountsService: {\n    data: Account[]\n  }\n}\n\nexport const EmbedConnectAccountMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QDkBiBJAIgUQLYCNIBZAQwGMALASwDswA6AJTBIgE8BiAYQHlllsXACoB9AIJdeAVWRCA2gAYAuolAAHAPawqAFyoaaqkAA9EAZgCsZ+hYUAOAJwA2AOxOnAJgsO7TiwBoQNkQnR3ofABYoiwBGFxczJwcLAF8UwLQsPEIIUkpaBmZWTl5+QVEJaVk5GJUkEE1tPQMjUwQnMwd6MwUIuxjnSwcHDxdA4IQzMLs7COTZnzcXCLSMjBwCYnJqOiYWdg4AZWxkTBEhRjFkQ4khdD5FOvUtXX1DeraHFwtwrz7bMweJxxBzjRAxMwuegRCwuL52BQOKYKBReVYgTIbHJ5HaFfacY6nc6Xa63e7IGpPBovZrvUBtGIouz0YFIpHuHoDUFBRAAWmB9BifWGcQsrk6MScK3SGPW2S2+V2YgArjoKGAaHoyCRaTiChwIAYGLQAG4aADWDBIqvVmqo2p0YEeRkarxaH0QChZflmMVsdjMEQ8nWBYIQvKm3UlCkBo0csQs0rWWU2uW2BXoXAMdDIOjEZDIGmVmoNRvopotDCzNBzeYLRc1hzAACcTfancoXTS3q1zIz6EDIWZhz4gZEwx4fNDLMCPI4PDEZnZ0Zj5WnFQwmzQIEJmyQaLByLTS7sK5b6Fud3uD0e3k3W+3nfVXbTewg7F56AonL12TF--EYYWJO3SJBELgInOrIeCucqpnquyXru+6HrmbwcC2zYaM29BqAANjqABm2G4BeGpXiht4GPebZkB2VIvj2HoIDEC4xN0XxzIiET2BEkphskUIjMOwYeBEfgDKk6I0BoEBwEYq7wemdBdk0TH0nyEJON08QQiMXGeDEYYRsGNhmBCfocsGbhScmWIKriezFKpbp0iY5h2FCMKsREw5WKxfrGdYiSTh4vQiZ5MJ+LBKbYspDDYM2WHNi5r7MdGHjdP0oQ-jxH4KEZPLvuxYmhBCYkWBYviBjF9nro5KpqhqWo6m8CFgKl6nueGMw6S4eliQ434LmYxnBtpMYQuBlVDfptVru1mbZmAub5oWxY6J17oaeG3yClpqJJJVw5jEVUrWJEUUuECYXifNSkbmR27ITeaHbdSanvW0lg-LlgLfCMH76QJoz0BB-yzG4CjxGYaRpEAA */\n  createMachine(\n    {\n      tsTypes: {} as import(\"./index.typegen\").Typegen0,\n      schema: {\n        events: {} as Events,\n        context: {} as EmbedConnectAccountMachineContext,\n        services: {} as Services,\n      },\n      id: \"EmbedConnectAccountMachine\",\n      initial: \"Start\",\n      states: {\n        Start: {\n          type: \"parallel\",\n          states: {\n            FetchAccounts: {\n              invoke: {\n                src: \"fetchAccountsService\",\n                id: \"fetchAccountsService\",\n                onDone: [\n                  {\n                    actions: [\"assignAccounts\"],\n                  },\n                ],\n              },\n            },\n          },\n          on: {\n            CONNECTION_DETAILS: \"ConnectionDetails\",\n          },\n        },\n\n        Error: {},\n\n        ConnectionDetails: {\n          on: {\n            BACK: \"Start\",\n          },\n        },\n\n        End: {\n          type: \"final\",\n          data: (context, event: { data: EmbedConnectAccountMachineContext }) =>\n            event.data,\n        },\n      },\n    },\n    {\n      services: {\n        fetchAccountsService,\n      },\n      actions: {\n        assignAccounts: assign({\n          accounts: (context, event) => event.data,\n        }),\n      },\n    },\n  )\n\nexport type NFIDConnectAccountActor = ActorRefFrom<\n  typeof EmbedConnectAccountMachine\n>\n\nexport default EmbedConnectAccountMachine\n","import { useMachine } from \"@xstate/react\"\n\nimport { BlurredLoader } from \"@nfid-frontend/ui\"\n\nimport { AuthSession } from \"frontend/state/authentication\"\nimport {\n  AuthorizationRequest,\n  AuthorizingAppMeta,\n} from \"frontend/state/authorization\"\n\nimport { RPCMessage } from \"../embed/services/rpc-receiver\"\nimport { EmbedChooseAccount } from \"./components\"\nimport { MappedConnectionDetails } from \"./components/connection-details\"\nimport EmbedConnectAccountMachine from \"./machines\"\n\ntype NFIDConnectAccountCoordinatorProps = {\n  appMeta: AuthorizingAppMeta\n  onConnect: (hostname: string, accountId: string) => void\n  rpcMessage?: RPCMessage\n  authRequest?: AuthorizationRequest\n  authSession?: AuthSession\n}\n\nexport const NFIDConnectAccountCoordinator: React.FC<\n  NFIDConnectAccountCoordinatorProps\n> = ({ appMeta, onConnect, rpcMessage, authRequest, authSession }) => {\n  const [state, send] = useMachine(EmbedConnectAccountMachine)\n\n  switch (true) {\n    case state.matches(\"Start\"):\n      return (\n        <EmbedChooseAccount\n          onConnectionDetails={() => send({ type: \"CONNECTION_DETAILS\" })}\n          onConnect={onConnect}\n          applicationName={appMeta.name}\n          applicationLogo={appMeta.logo}\n          applicationURL={appMeta.url}\n        />\n      )\n    case state.matches(\"ConnectionDetails\"):\n      return (\n        <MappedConnectionDetails\n          onCancel={() => send(\"BACK\")}\n          rpcMessage={rpcMessage}\n          authSession={authSession}\n        />\n      )\n    default:\n      return <BlurredLoader className=\"w-full h-full\" isLoading={true} />\n  }\n}\n","import { IconCmpNFTPreview, Skeleton } from \"@nfid-frontend/ui\"\n\nexport const Loader = () => {\n  return (\n    <div>\n      <div className=\"flex items-center\">\n        <Skeleton className=\"w-10 h-10 rounded-lg\" />\n        <Skeleton className=\"h-5 ml-2 w-28\" />\n      </div>\n      <div className=\"flex items-center mt-7\">\n        <Skeleton className=\"w-32 h-3 mr-1 \" />\n        <Skeleton className=\"w-5 h-3 \" />\n      </div>\n      <div className=\"border border-gray-100 -md mt-1.5 flex items-center rounded-md\">\n        <IconCmpNFTPreview className=\"w-[102px] h-[102px] text-gray-100\" />\n\n        <div className=\"ml-2.5\">\n          <div className=\"flex items-center\">\n            <Skeleton className=\"w-20 h-3 mr-1.5 \" />\n            <Skeleton className=\"w-[120px] h-3 mr-1.5 \" />\n          </div>\n          <div className=\"flex items-center mt-2\">\n            <Skeleton className=\"w-7 h-3 mr-1.5 \" />\n            <Skeleton className=\"w-20 h-3 mr-1.5 \" />\n          </div>\n        </div>\n      </div>\n      <div className=\"space-y-4 mt-7\">\n        <div className=\"flex items-center justify-between\">\n          <Skeleton className=\"w-32 h-3\" />\n          <div className=\"flex\">\n            <Skeleton className=\"w-14 h-3 mr-[5px]\"></Skeleton>\n            <Skeleton className=\"w-5 h-3 \"></Skeleton>\n          </div>\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <Skeleton className=\"h-3 w-28\" />\n          <div className=\"flex\">\n            <Skeleton className=\"w-12 h-3 mr-[5px]\"></Skeleton>\n            <Skeleton className=\"w-5 h-3 \"></Skeleton>\n          </div>\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <Skeleton className=\"h-3 w-36\" />\n          <div className=\"flex\">\n            <Skeleton className=\"w-16 h-3 mr-[5px]\"></Skeleton>\n            <Skeleton className=\"w-5 h-3 \"></Skeleton>\n          </div>\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <Skeleton className=\"w-24 h-3 \" />\n          <div className=\"flex\">\n            <Skeleton className=\"w-11 h-3 mr-[5px]\"></Skeleton>\n            <Skeleton className=\"w-5 h-3 \"></Skeleton>\n          </div>\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <Skeleton className=\"h-3 w-[120px]\" />\n          <div className=\"flex\">\n            <Skeleton className=\"w-[60px] h-3 mr-[5px]\"></Skeleton>\n            <Skeleton className=\"w-5 h-3\"></Skeleton>\n          </div>\n        </div>\n      </div>\n      <Skeleton className=\"h-3 mt-6 w-44\" />\n      <Skeleton className=\"flex items-center justify-center w-full h-12 rounded-md mt-14\">\n        <Skeleton className=\"h-3 w-[120px] !bg-white\" />\n      </Skeleton>\n    </div>\n  )\n}\n","import { TransactionRequest } from \"@ethersproject/abstract-provider\"\n\nimport {\n  DelegationWalletAdapter,\n  ProviderError,\n  loadProfileFromLocalStorage,\n} from \"@nfid/integration\"\n\nimport { getWalletDelegation } from \"frontend/integration/facade/wallet\"\nimport { fetchProfile } from \"frontend/integration/identity-manager\"\n\nimport { RPCMessage } from \"../services/rpc-receiver\"\n\nexport async function populateTransactionData(\n  rpcMessage: RPCMessage,\n): Promise<[TransactionRequest, ProviderError | undefined]> {\n  const adapter = new DelegationWalletAdapter(rpcMessage.options.rpcUrl)\n  const data = removeEmptyKeys(rpcMessage?.params[0])\n  const hostname = \"nfid.one\"\n  const accountId = \"0\"\n  const profile = loadProfileFromLocalStorage() ?? (await fetchProfile())\n  const delegation = await getWalletDelegation(\n    profile?.anchor,\n    hostname,\n    accountId,\n  )\n  return adapter.populateTransaction(data, delegation)\n}\n\nfunction removeEmptyKeys(data: { [key: string]: unknown }) {\n  return Object.keys(data).reduce(\n    (acc, key) => ({\n      ...acc,\n      ...(data[key] ? { [key]: data[key] } : {}),\n    }),\n    {},\n  )\n}\n","import { TransactionRequest } from \"@ethersproject/abstract-provider\"\nimport React from \"react\"\nimport useSWR from \"swr\"\n\nimport { ProviderError } from \"@nfid/integration\"\nimport { FunctionCall, Method } from \"@nfid/integration-ethereum\"\n\nimport { NFIDConnectAccountCoordinator } from \"frontend/features/embed-connect-account/coordinator\"\nimport { AuthSession } from \"frontend/state/authentication\"\nimport { AuthorizingAppMeta } from \"frontend/state/authorization\"\n\nimport MappedFallback from \"./components/fallback\"\nimport { RPCMessage } from \"./services/rpc-receiver\"\nimport { Loader } from \"./ui/loader\"\nimport { populateTransactionData } from \"./util/populateTxService\"\n\ntype ApproverCmpProps = {\n  appMeta: AuthorizingAppMeta\n  rpcMessage: RPCMessage\n  rpcMessageDecoded?: FunctionCall\n  populatedTransaction?: [TransactionRequest, ProviderError | undefined]\n  onConfirm: (data?: {\n    populatedTransaction: [TransactionRequest, ProviderError | undefined]\n  }) => void\n  onReject: (reason?: any) => void\n}\n\ntype ComponentMap = {\n  [method in Method]: React.ComponentType<ApproverCmpProps>\n}\n\nconst componentMap: ComponentMap = {\n  directPurchase: React.lazy(() => import(\"./components/buy\")),\n  createToken: React.lazy(() => import(\"./components/deploy-collection\")),\n  mintAndTransfer: React.lazy(() => import(\"./components/mint\")),\n  SellOrder: React.lazy(() => import(\"./components/sell\")),\n  BidOrder: React.lazy(() => import(\"./components/fallback\")),\n  bulkPurchase: React.lazy(() => import(\"./components/batch-buy\")),\n  burn: React.lazy(() => import(\"./components/fallback\")),\n  cancel: React.lazy(() => import(\"./components/fallback\")),\n\n  directAcceptBid: React.lazy(() => import(\"./components/fallback\")),\n  safeTransferFrom: React.lazy(() => import(\"./components/fallback\")),\n\n  Mint721: React.lazy(() => import(\"./components/lazy-mint\")),\n  Mint1155: React.lazy(() => import(\"./components/lazy-mint\")),\n\n  sell: React.lazy(() => import(\"./components/sell\")),\n  personalSign: React.lazy(() => import(\"./components/sign-message\")),\n  setApprovalForAll: React.lazy(() => import(\"./components/fallback\")),\n  approve: React.lazy(() => import(\"./components/fallback\")),\n}\n\nconst hasMapped = (messageInterface: string = \"\") =>\n  !!componentMap[messageInterface as Method]\n\ninterface ProcedureApprovalCoordinatorProps extends ApproverCmpProps {\n  disableConfirmButton?: boolean\n  authSession: AuthSession\n}\nexport const ProcedureApprovalCoordinator: React.FC<\n  ProcedureApprovalCoordinatorProps\n> = ({\n  appMeta,\n  rpcMessage,\n  rpcMessageDecoded,\n  onConfirm,\n  onReject,\n  authSession,\n}) => {\n  console.debug(\"ProcedureApprovalCoordinator\", { rpcMessage })\n\n  const {\n    data: populatedTransaction,\n    isLoading: isLoadingPopulateTransaction,\n  } = useSWR(\n    rpcMessage.method === \"eth_sendTransaction\"\n      ? [rpcMessage, \"populateTransactionData\"]\n      : null,\n    async ([rpcMessage]) => {\n      return await populateTransactionData(rpcMessage)\n    },\n    { refreshInterval: 3 * 1000 },\n  )\n\n  const handleOnConfirmSignature = React.useCallback(() => {\n    return populatedTransaction\n      ? onConfirm({ populatedTransaction })\n      : onConfirm()\n  }, [onConfirm, populatedTransaction])\n\n  switch (true) {\n    case hasMapped(rpcMessageDecoded?.method):\n      const ApproverCmp = componentMap[rpcMessageDecoded?.method as Method]\n      return (\n        <React.Suspense fallback={<Loader />}>\n          <ApproverCmp\n            {...{\n              rpcMessage,\n              appMeta,\n              rpcMessageDecoded,\n              populatedTransaction,\n              disableConfirmButton: isLoadingPopulateTransaction,\n              onConfirm: handleOnConfirmSignature,\n              onReject,\n            }}\n          />\n        </React.Suspense>\n      )\n\n    case rpcMessage.method === \"eth_accounts\":\n      return (\n        <NFIDConnectAccountCoordinator\n          onConnect={() => onConfirm()}\n          {...{\n            rpcMessage,\n            appMeta,\n            authSession,\n          }}\n        />\n      )\n    default:\n      return (\n        <MappedFallback\n          {...{\n            rpcMessage,\n            appMeta,\n            disableConfirmButton: isLoadingPopulateTransaction,\n            rpcMessageDecoded,\n            populatedTransaction,\n            onConfirm: handleOnConfirmSignature,\n            onReject,\n          }}\n        />\n      )\n  }\n}\n","import { Button, IconCmpError, Page } from \"@nfid-frontend/ui\"\n\ntype PageErrorCmpProps = {\n  error?: Error\n  onRetry: () => void\n  onCancel: () => void\n}\n\nexport const PageError: React.FC<PageErrorCmpProps> = ({\n  error,\n  onRetry,\n  onCancel,\n}) => {\n  return (\n    <Page>\n      <Page.Header>\n        <div className=\"flex gap-2\">\n          <IconCmpError className=\"text-red-500\" />\n          <div className=\"font-bold\">Error</div>\n        </div>\n      </Page.Header>\n      <Page.Body>\n        <div className=\"font-bold\">An unexpected error has occurred.</div>\n        <div className=\"overflow-scroll\">\n          {error?.message || \"An unexpected error has occurred.\"}\n        </div>\n      </Page.Body>\n      <Page.Footer>\n        <div className=\"flex w-full gap-2\">\n          <Button\n            type=\"stroke\"\n            onClick={onCancel}\n            className=\"flex items-center justify-center flex-1\"\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"secondary\"\n            onClick={onRetry}\n            className=\"flex items-center justify-center flex-1\"\n          >\n            Try again\n          </Button>\n        </div>\n      </Page.Footer>\n    </Page>\n  )\n}\n","import { useMachine } from \"@xstate/react\"\nimport React from \"react\"\n\nimport { BlurredLoader } from \"@nfid-frontend/ui\"\n\nimport { AuthenticationCoordinator } from \"frontend/coordination/authentication\"\nimport { TrustDeviceCoordinator } from \"frontend/coordination/trust-device\"\nimport { AuthenticationActor } from \"frontend/state/machines/authentication/authentication\"\nimport { TrustDeviceActor } from \"frontend/state/machines/authentication/trust-device\"\n\nimport { NFIDEmbedMachineV2 } from \"./machine-v2\"\nimport { ProcedureApprovalCoordinator } from \"./procedure-approval-coordinator\"\nimport { PageError } from \"./ui/error\"\n\nexport default function NFIDEmbedCoordinator() {\n  const [state, send] = useMachine(NFIDEmbedMachineV2)\n  console.debug(\"NFIDEmbedCoordinator\")\n\n  React.useEffect(\n    () =>\n      console.log(\"NFIDEmbedCoordinator\", {\n        context: state.context,\n        state: state.value,\n      }),\n    [state.value, state.context],\n  )\n\n  switch (true) {\n    case state.matches(\"AUTH.Authenticate\"):\n      return (\n        <AuthenticationCoordinator\n          actor={\n            state.children[\n              \"NFIDEmbedMachineV2.AUTH.Authenticate:invocation[0]\"\n            ] as AuthenticationActor\n          }\n        />\n      )\n    case state.matches(\"AUTH.TrustDevice\"):\n      return (\n        <TrustDeviceCoordinator\n          actor={\n            state.children[\n              \"NFIDEmbedMachineV2.AUTH.TrustDevice:invocation[0]\"\n            ] as TrustDeviceActor\n          }\n        />\n      )\n    case state.matches(\"HANDLE_PROCEDURE.AWAIT_PROCEDURE_APPROVAL\"):\n      if (!state.context.rpcMessage) throw new Error(\"missing rpcMessage\")\n      if (!state.context.authSession) throw new Error(\"missing authSession\")\n\n      return (\n        <ProcedureApprovalCoordinator\n          appMeta={state.context.appMeta}\n          authSession={state.context.authSession}\n          rpcMessage={state.context.rpcMessage}\n          rpcMessageDecoded={state.context.rpcMessageDecoded}\n          onConfirm={(data) => {\n            console.debug(\"onConfirm\", { data })\n            send({ type: \"APPROVE\", data })\n          }}\n          onReject={() => send({ type: \"CANCEL\" })}\n        />\n      )\n    case state.matches(\"HANDLE_PROCEDURE.ERROR\"):\n      return (\n        <PageError\n          error={state.context.error}\n          onCancel={() => send({ type: \"CANCEL_ERROR\" })}\n          onRetry={() => send({ type: \"RETRY\" })}\n        />\n      )\n    case state.matches(\"HANDLE_PROCEDURE.EXECUTE_PROCEDURE\"):\n    default:\n      return <BlurredLoader isLoading />\n  }\n}\n","import clsx from \"clsx\"\nimport React, { useState } from \"react\"\n\nimport {\n  IconCmpArrow,\n  IconCmpArrowRight,\n  IconSvgNFTPreview,\n} from \"@nfid-frontend/ui\"\nimport { truncateString } from \"@nfid-frontend/utils\"\n\nimport { IAsset } from \".\"\n\ninterface IBatchAssetPreview {\n  assets: IAsset[]\n}\n\nexport const BatchAssetPreview: React.FC<IBatchAssetPreview> = ({ assets }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false)\n\n  return (\n    <div>\n      {isModalOpen && (\n        <div className=\"absolute top-0 left-0 z-30 w-full h-full p-[22px] bg-white\">\n          <div className=\"flex items-center mb-5\">\n            <div\n              className=\"cursor-pointer\"\n              onClick={() => setIsModalOpen(false)}\n            >\n              <IconCmpArrow />\n            </div>\n            <p className=\"ml-2 text-xl font-bold\">\n              {assets.length} collectibles\n            </p>\n          </div>\n          <div className=\"space-y-1.5\">\n            {assets.map((item) => {\n              return (\n                <div className=\"flex items-center justify-between border-b border-gray-200 pb-1.5\">\n                  <div className=\"flex items-center\">\n                    <img\n                      className=\"object-cover w-12 h-12 rounded-md mr-2.5\"\n                      src={item?.icon}\n                      alt=\"\"\n                    />\n                    <div>\n                      <p className=\"text-sm\">{item?.title}</p>\n                      <p className=\"text-xs text-gray-400\">{item?.subtitle}</p>\n                    </div>\n                  </div>\n                  <div className=\"text-end\">\n                    <p className=\"text-sm\">{item.innerTitle}</p>\n                    <p className=\"text-xs text-gray-400\">\n                      {item.innerSubtitle}\n                    </p>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      )}\n      <div\n        className={clsx(\n          \"overflow-hidden border border-gray-200 rounded-md cursor-pointer h-20\",\n          \"flex items-center\",\n        )}\n        onClick={() => setIsModalOpen(true)}\n      >\n        <div className=\"relative h-full text-gray-100 w-[98px]\">\n          {assets.slice(0, 3).map((item, index) => {\n            return (\n              <img\n                key={`preview_${index}`}\n                alt={`preview_${index}`}\n                src={item?.icon ?? IconSvgNFTPreview}\n                className={clsx(\n                  \"border-x border-gray-200 border-opacity-50 rounded-[5px]\",\n                  \"w-20 h-20 absolute top-0\",\n                )}\n                style={{\n                  left: `${index * 6}px`,\n                }}\n              />\n            )\n          })}\n        </div>\n        <div className=\"ml-2.5\">\n          <p className=\"font-bold\">{assets.length} collectibles</p>\n          <p className=\"w-64 overflow-hidden text-sm text-gray-400\">\n            {truncateString(\n              assets.map((item) => item.title ?? \"Unknown name\").join(\", \"),\n              63,\n            )}\n          </p>\n        </div>\n        <IconCmpArrowRight className=\"ml-auto mr-4\" />\n      </div>\n    </div>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\nimport { Image } from \"@nfid-frontend/ui\"\n\ninterface IAsset {\n  icon?: string\n  title?: string\n  subtitle?: string\n}\n\nexport const SingleAssetPreview: React.FC<IAsset> = ({\n  icon,\n  title,\n  subtitle,\n}: IAsset) => {\n  return (\n    <div\n      className={clsx(\n        \"flex items-center justify-between overflow-hidden\",\n        \"border rounded-md shrink-0\",\n      )}\n    >\n      <div className=\"flex items-center w-full\">\n        <Image\n          className={clsx(\n            \"object-cover w-20 h-20 rounded-[5px]\",\n            !icon && \"hidden\",\n          )}\n          src={icon}\n          alt={title}\n        />\n        <div\n          className={clsx(\"ml-2.5\", !icon && \"text-center !ml-0 w-full py-2.5\")}\n        >\n          <p className=\"font-bold tracking-[0.01em] text-base\">{title}</p>\n          <p className=\"text-sm text-gray-400\">{subtitle}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { BatchAssetPreview } from \"./batch\"\nimport { SingleAssetPreview } from \"./single\"\n\nexport interface IAsset {\n  icon?: string\n  title?: string\n  subtitle?: string\n  innerTitle?: string\n  innerSubtitle?: string\n}\ninterface IAssetPreview {\n  assets?: IAsset[]\n}\n\nexport const AssetPreview = ({ assets }: IAssetPreview) => {\n  if (\n    !assets ||\n    (assets.length === 1 &&\n      !assets[0]?.icon &&\n      !assets[0]?.subtitle &&\n      !assets[0]?.title)\n  )\n    return null\n  if (assets.length === 1) return <SingleAssetPreview {...assets[0]} />\n  if (assets.length > 1) return <BatchAssetPreview assets={assets} />\n\n  return null\n}\n","import clsx from \"clsx\"\n\nimport {\n  Button,\n  IWarningAccordionOption,\n  IconCmpOut,\n  IconCmpSettings,\n  InfoListItem,\n  SDKApplicationMeta,\n  WarningAccordion,\n} from \"@nfid-frontend/ui\"\n\nimport { RPCApplicationMetaSubtitle } from \"frontend/features/embed-controller/ui/app-meta/subtitle\"\nimport { AuthorizingAppMeta } from \"frontend/state/authorization\"\nimport { CenterEllipsis } from \"frontend/ui/atoms/center-ellipsis\"\n\nimport { AssetPreview, IAsset } from \"./asset-preview\"\n\ninterface ISendTransaction {\n  title?: string\n  applicationMeta: AuthorizingAppMeta\n  fromAddress?: string\n  toAddress?: string\n  network: string\n  networkFee?: string\n  totalUSD: string\n  totalToken: string\n  price?: string\n  currency: string\n  warnings?: IWarningAccordionOption[]\n  isInsufficientBalance?: boolean\n  assets?: IAsset[]\n  disableApproveButton?: boolean\n  onAdjustNetworkFee?: () => void\n  onShowTransactionDetails?: () => void\n  onApprove: () => void\n  onCancel: () => void\n}\n\nexport const SendTransaction = ({\n  title = \"Review\",\n  applicationMeta,\n  fromAddress,\n  toAddress,\n  network,\n  networkFee,\n  totalUSD,\n  totalToken,\n  price,\n  currency,\n  warnings,\n  isInsufficientBalance,\n  disableApproveButton,\n  assets,\n  onAdjustNetworkFee,\n  onShowTransactionDetails,\n  onApprove,\n  onCancel,\n}: ISendTransaction) => {\n  return (\n    <div className=\"flex flex-col justify-between flex-1\">\n      <div>\n        <SDKApplicationMeta\n          title={title}\n          applicationLogo={applicationMeta?.logo}\n          subTitle={\n            <RPCApplicationMetaSubtitle applicationURL={applicationMeta?.url} />\n          }\n        />\n        <AssetPreview assets={assets} />\n\n        <div className=\"mt-5 space-y-3\">\n          {fromAddress && (\n            <InfoListItem\n              title=\"From\"\n              icon={\n                <IconCmpOut\n                  className=\"w-[18px] cursor-pointer\"\n                  onClick={(e) =>\n                    window.open(\n                      // PASHUNYA TODO: use network\n                      `https://goerli.etherscan.io/address/${fromAddress}`,\n                    )\n                  }\n                />\n              }\n            >\n              <CenterEllipsis\n                value={fromAddress}\n                leadingChars={6}\n                trailingChars={4}\n              />\n            </InfoListItem>\n          )}\n          {toAddress && (\n            <InfoListItem\n              title=\"To\"\n              icon={\n                <IconCmpOut\n                  className=\"w-[18px] cursor-pointer\"\n                  onClick={(e) =>\n                    window.open(\n                      // PASHUNYA TODO: use network\n                      `https://goerli.etherscan.io/address/${toAddress}`,\n                    )\n                  }\n                />\n              }\n            >\n              <CenterEllipsis\n                value={toAddress}\n                leadingChars={6}\n                trailingChars={4}\n              />\n            </InfoListItem>\n          )}\n          <InfoListItem title=\"Network\">{network}</InfoListItem>\n          {networkFee && (\n            <InfoListItem\n              title=\"Network fee\"\n              tooltip=\"Applies to all transactions. Not paid to NFID Wallet.\"\n              icon={\n                onAdjustNetworkFee && (\n                  <IconCmpSettings\n                    className=\"ml-1.5 cursor-pointer text-black\"\n                    onClick={onAdjustNetworkFee}\n                  />\n                )\n              }\n            >\n              {`${networkFee} ${currency}`}\n            </InfoListItem>\n          )}\n          {price && (\n            <InfoListItem\n              title={\n                assets && assets?.length > 1\n                  ? \"Collectibles cost\"\n                  : \"Collectible cost\"\n              }\n            >\n              {`${price} ${currency}`}\n            </InfoListItem>\n          )}\n          {totalToken && (\n            <InfoListItem title=\"Total\" isBold>\n              <div className=\"relative\">\n                <p>\n                  {totalToken} {currency}\n                </p>\n\n                <div\n                  className={clsx(\n                    \"text-xs leading-4 text-gray-400 font-normal\",\n                    \"absolute right-0 top-full\",\n                  )}\n                >\n                  ~${totalUSD}\n                </div>\n              </div>\n            </InfoListItem>\n          )}\n        </div>\n        <p\n          className=\"mt-10 text-sm cursor-pointer text-blue\"\n          onClick={onShowTransactionDetails}\n        >\n          Transaction details\n        </p>\n        {isInsufficientBalance && (\n          <p className=\"my-3 text-xs text-red\">\n            Insufficient balance in you account to pay for this transaction.{\" \"}\n            <span className=\"font-semibold text-blue\">Buy ETH</span> or deposit\n            from another account.\n          </p>\n        )}\n      </div>\n      <div>\n        <WarningAccordion warnings={warnings} />\n        <div className=\"flex items-center w-full space-x-2.5\">\n          <Button type=\"stroke\" className=\"w-full\" onClick={onCancel}>\n            Cancel\n          </Button>\n          <Button\n            type=\"primary\"\n            className={clsx(\"w-full\", isInsufficientBalance && \"!bg-gray-300\")}\n            onClick={onApprove}\n            disabled={isInsufficientBalance || disableApproveButton}\n          >\n            Confirm\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { TransactionRequest } from \"@ethersproject/abstract-provider\"\nimport { ethers } from \"ethers\"\nimport { BigNumber } from \"ethers/lib/ethers\"\n\nimport { ProviderError } from \"@nfid/integration\"\n\nimport { IRate } from \"frontend/features/fungable-token/eth/hooks/use-eth-exchange-rate\"\n\nexport function calcPrice(\n  rates: IRate,\n  populatedTransaction?: [TransactionRequest, ProviderError | undefined],\n) {\n  if (!rates[\"ETH\"] || !populatedTransaction || !populatedTransaction[0])\n    return {\n      fee: \"0\",\n      feeUsd: \"0\",\n      maxFee: \"0\",\n      maxFeeUsd: \"0\",\n      total: \"0\",\n      totalUsd: \"0\",\n      maxTotal: \"0\",\n      maxTotalUsd: \"0\",\n      price: \"0\",\n      isInsufficientFundsError: false,\n      isNetworkIsBusyWarning: false,\n    }\n\n  const [transaction, err] = populatedTransaction\n\n  const gasPriceRaw = transaction.gasPrice\n  delete transaction[\"gasPrice\"]\n\n  const gasLimit = BigNumber.from(transaction?.gasLimit)\n  const gasPrice = BigNumber.from(gasPriceRaw ?? transaction?.maxFeePerGas)\n  const maxFeePerGas = BigNumber.from(transaction?.maxFeePerGas ?? gasPriceRaw)\n  const price = BigNumber.from(transaction?.value ?? \"0x0\")\n\n  const fee = gasLimit.mul(gasPrice).div(125).mul(100)\n  const feeUsd = parseFloat(ethers.utils.formatEther(fee)) * rates[\"ETH\"]\n  const maxFee = gasLimit.mul(maxFeePerGas)\n  const maxFeeUsd = parseFloat(ethers.utils.formatEther(maxFee)) * rates[\"ETH\"]\n  const total = price.add(fee)\n  const totalUsd = parseFloat(ethers.utils.formatEther(total)) * rates[\"ETH\"]\n  const maxTotal = price.add(maxFee)\n  const maxTotalUsd =\n    parseFloat(ethers.utils.formatEther(maxTotal)) * rates[\"ETH\"]\n\n  return {\n    fee: ethers.utils.formatEther(fee),\n    feeUsd: feeUsd.toFixed(2),\n    maxFee: ethers.utils.formatEther(maxFee),\n    maxFeeUsd: maxFeeUsd.toFixed(2),\n    total: ethers.utils.formatEther(total),\n    totalUsd: totalUsd.toFixed(2),\n    maxTotal: ethers.utils.formatEther(maxTotal),\n    maxTotalUsd: maxTotalUsd.toFixed(2),\n    price: ethers.utils.formatEther(price),\n    isInsufficientFundsError: ProviderError.INSUFICIENT_FUNDS === err,\n    isNetworkIsBusyWarning: ProviderError.NETWORK_BUSY === err,\n  }\n}\n","import { ChainBalance } from \"packages/integration/src/lib/asset/types\"\nimport {\n  AccountBalance,\n  AppBalance,\n  TokenBalanceSheet,\n} from \"packages/integration/src/lib/asset/types\"\n\nimport { IconPngEthereum } from \"@nfid-frontend/ui\"\nimport { ethereumAsset, loadProfileFromLocalStorage } from \"@nfid/integration\"\nimport { E8S } from \"@nfid/integration/token/icp\"\nimport { TokenStandards } from \"@nfid/integration/token/types\"\n\nimport { getWalletDelegation } from \"frontend/integration/facade/wallet\"\nimport { fetchProfile } from \"frontend/integration/identity-manager\"\n\nexport const getEthBalance = async (): Promise<TokenBalanceSheet> => {\n  const hostname = \"nfid.one\"\n  const accountId = \"0\"\n  const profile = loadProfileFromLocalStorage() ?? (await fetchProfile())\n  const delegation = await getWalletDelegation(\n    profile?.anchor,\n    hostname,\n    accountId,\n  )\n  const balance = await ethereumAsset.getBalance(undefined, delegation)\n  const address = await ethereumAsset.getAddress(delegation)\n  const principal = (await getWalletDelegation(profile.anchor))\n    .getPrincipal()\n    .toText()\n\n  return computeSheetForRootAccount(balance, address, principal)\n}\n\n//sc-6513\nexport const computeSheetForRootAccount = async (\n  balance: ChainBalance,\n  address: string | undefined,\n  principalId: string,\n): Promise<TokenBalanceSheet> => {\n  const tokenBalance = BigInt(Number(balance.balance?.toFixed(8) ?? 0) * E8S)\n  const usdBalance = \"$\" + (balance.balanceinUsd?.toFixed(2) ?? \"0.00\")\n  const rootAccountBalance: AccountBalance = {\n    accountName: \"account 1\",\n    address: address ?? \"\",\n    principalId,\n    tokenBalance,\n    usdBalance,\n  }\n\n  const appBalance: AppBalance = {\n    accounts: [rootAccountBalance],\n    appName: \"NFID\",\n    tokenBalance,\n  }\n\n  return {\n    applications: {\n      NFID: appBalance,\n    },\n    icon: IconPngEthereum,\n    label: \"Ethereum\",\n    token: TokenStandards.ETH,\n    tokenBalance,\n    usdBalance,\n    blockchain: \"Ethereum\",\n  }\n}\n","export const STORAGE_KEY = \"nfid_address_cache\"\n","import { getScope } from \"@nfid/integration\"\n\nimport { STORAGE_KEY } from \"./constants\"\nimport { CachedAddresses, NetworkKey } from \"./types\"\n\nconst loadAddressCache = (): CachedAddresses => {\n  const cache = localStorage.getItem(STORAGE_KEY)\n  const parsedCache = cache ? JSON.parse(cache) : {}\n  return parsedCache\n}\n\ntype KeyArgs = {\n  anchor: bigint\n  accountId: string\n  hostname: string\n}\n\ntype NetworkArgs = {\n  network: NetworkKey\n}\n\ntype ReadAddressArg = KeyArgs & NetworkArgs\n\ntype CreateAddressArg = KeyArgs &\n  NetworkArgs & {\n    address: string\n  }\n\nexport const getKey = ({ hostname, accountId, anchor }: KeyArgs) => {\n  const scope = getScope(hostname, accountId)\n  const key = `${anchor}:${scope}`\n  return key\n}\n\nconst getEntity = (key: string): { [key: string]: string } => {\n  const cache = loadAddressCache()\n  return typeof cache[key] === \"object\" ? cache[key] : {}\n}\n\nexport const storeAddressInLocalCache = ({\n  hostname,\n  anchor,\n  accountId,\n  address,\n  network,\n}: CreateAddressArg) => {\n  const cache = loadAddressCache()\n  const key = getKey({ hostname, anchor, accountId })\n  const existing = getEntity(key)\n  localStorage.setItem(\n    STORAGE_KEY,\n    JSON.stringify({ ...cache, [key]: { ...existing, [network]: address } }),\n  )\n}\n\nexport const readAddressFromLocalCache = ({\n  accountId,\n  anchor,\n  hostname,\n  network,\n}: ReadAddressArg): string | undefined => {\n  const key = getKey({ hostname, accountId, anchor })\n  const entity = getEntity(key)\n  return entity[network]\n}\n","import {\n  storeAddressInLocalCache,\n  readAddressFromLocalCache,\n} from \"@nfid/client-db\"\nimport {\n  replaceActorIdentity,\n  ecdsaSigner,\n  ethereumAsset,\n} from \"@nfid/integration\"\n\nimport { getWalletDelegation } from \"frontend/integration/facade/wallet\"\n\nexport const getEthAddress = async (anchor: number) => {\n  const hostname = \"nfid.one\"\n  const accountId = \"0\"\n\n  const cachedAddress = readAddressFromLocalCache({\n    accountId: accountId,\n    hostname: hostname,\n    anchor: BigInt(anchor),\n    network: \"ETH\",\n  })\n\n  if (cachedAddress) return cachedAddress\n\n  const identity = await getWalletDelegation(anchor, hostname, accountId)\n  replaceActorIdentity(ecdsaSigner, identity)\n\n  const address = await ethereumAsset.getAddress(identity)\n\n  !cachedAddress &&\n    storeAddressInLocalCache({\n      address,\n      accountId,\n      hostname,\n      anchor: BigInt(anchor),\n      network: \"ETH\",\n    })\n\n  return address\n}\n","import useSWR from \"swr\"\n\nimport { useProfile } from \"frontend/integration/identity-manager/queries\"\n\nimport { getEthAddress } from \"../get-eth-address\"\n\nexport const useEthAddress = () => {\n  const { profile } = useProfile()\n  const { data: address, ...rest } = useSWR(\n    profile?.anchor ? [profile.anchor] : null,\n    ([anchor]) => getEthAddress(anchor),\n  )\n\n  return { address, ...rest }\n}\n","import { useMemo } from \"react\"\nimport useSWR from \"swr\"\n\nconst COINBASE_RATES_URL = `https://api.coinbase.com/v2/exchange-rates`\nconst NOT_AVAILABLE = \"\"\nconst DEFAULT_EXCHANGE_RATES = [\"ICP\", \"ETH\", \"BTC\"]\nexport interface IRate {\n  [currency: string]: number\n}\n\nexport const useExchangeRates = (tokens = DEFAULT_EXCHANGE_RATES) => {\n  const { data: prices, ...rest } = useSWR(\"exchangeRates\", () =>\n    fetch(COINBASE_RATES_URL).then((res) => res.json()),\n  )\n\n  const rates: IRate = useMemo(() => {\n    if (!prices?.data || !tokens) return {}\n\n    return tokens.reduce((acc, token, index) => {\n      const priceInToken = prices?.data?.rates[token]\n      const priceInUsd = priceInToken\n        ? (1 / priceInToken).toFixed(2)\n        : NOT_AVAILABLE\n\n      acc[token] = Number(parseFloat(priceInUsd).toFixed(2))\n      return acc\n    }, {} as IRate)\n  }, [prices, tokens])\n\n  return { rates, prices, ...rest }\n}\n","import React from \"react\"\nimport useSWR from \"swr\"\n\nimport { Application } from \"@nfid/integration\"\n\nimport { mapApplicationAccounts } from \"frontend/apps/identity-manager/profile/applications/utils\"\n\nimport { fetchAccounts, fetchApplications, fetchProfile } from \".\"\n\nexport function useAccounts() {\n  const {\n    data: accounts,\n    isValidating: isLoading,\n    error,\n  } = useSWR(`accounts`, fetchAccounts)\n  return { accounts, isLoading, error }\n}\n\nexport function useProfile() {\n  const {\n    data,\n    error,\n    mutate: refreshProfile,\n  } = useSWR(\"account/fetch\", fetchProfile, {\n    dedupingInterval: 60_000,\n    focusThrottleInterval: 60_000,\n  })\n  return {\n    isLoading: !data && !error,\n    refreshProfile,\n    profile: data,\n  }\n}\n\nexport function useApplicationsMeta(\n  predicate?: (application: Application) => boolean,\n) {\n  const {\n    data,\n    error,\n    mutate: refreshApplicationMeta,\n  } = useSWR(\n    [\"applications/meta\", predicate],\n    ([, predicate]) => fetchApplications(predicate),\n    {\n      dedupingInterval: 5 * 60_000,\n      focusThrottleInterval: 5 * 60_000,\n    },\n  )\n\n  return {\n    isLoading: !data && !error,\n    refreshApplicationMeta,\n    applicationsMeta: data,\n  }\n}\n\nexport const useApplicationAccounts = () => {\n  const { isLoading: isLoadingAppMeta, applicationsMeta } =\n    useApplicationsMeta()\n  const { isLoading: isLoadingProfile, profile } = useProfile()\n\n  const applicationAccounts = React.useMemo(\n    () =>\n      mapApplicationAccounts(profile?.accounts || [], applicationsMeta || []),\n    [profile?.accounts, applicationsMeta],\n  )\n\n  return {\n    isLoading: isLoadingAppMeta || isLoadingProfile,\n    applicationAccounts,\n  }\n}\n","import { Account, Application } from \"@nfid/integration\"\n\nimport { rmProto } from \"frontend/integration/identity-manager\"\nimport { getUrl } from \"frontend/ui/utils\"\n\nexport interface ApplicationAccount {\n  applicationName: string\n  accountsCount: number\n  derivationOrigin: string\n  aliasDomains: string[]\n  icon?: string\n}\n\nexport const mapApplicationAccounts = (\n  accounts: Account[],\n  applicationsMeta: Application[],\n): ApplicationAccount[] => {\n  const personasByHostname = accounts.reduce<{\n    [applicationName: string]: Array<\n      Account & { applicationName: string; icon?: string }\n    >\n  }>((acc, account) => {\n    const applicationMeta = applicationsMeta?.find(({ domain }) => {\n      return rmProto(domain) === rmProto(account.domain)\n    })\n\n    const applicationDomain = applicationMeta?.domain\n      ? getUrl(applicationMeta.domain).host\n      : getUrl(account.domain).host\n\n    const accounts = acc[applicationDomain] || []\n\n    acc[applicationDomain] = [\n      ...accounts,\n      {\n        ...account,\n        applicationName: applicationMeta?.name || applicationDomain,\n        alias: applicationMeta?.alias,\n        icon: applicationMeta?.icon,\n      },\n    ]\n\n    return acc\n  }, {})\n\n  const personaByHostnameArray = Object.entries(personasByHostname)\n    .map(([_, accounts]) => {\n      return {\n        applicationName: accounts[0].applicationName,\n        accountsCount: accounts.length,\n        derivationOrigin: accounts[0].domain,\n        icon: accounts[0].icon,\n        aliasDomains: (accounts[0].alias || []).map((a) => getUrl(a).host),\n      }\n    })\n    .sort(\n      (\n        { applicationName: applicationNameA },\n        { applicationName: applicationNameB },\n      ) => (applicationNameA < applicationNameB ? 1 : -1),\n    )\n\n  return personaByHostnameArray\n}\n","import { ActorRefFrom, createMachine } from \"xstate\"\n\nimport { getIframeWebauthn } from \"frontend/features/iframe/iframe-trust-device/services\"\nimport { fetchWebAuthnPlatformCapability } from \"frontend/integration/device\"\nimport {\n  registerDeviceWithSecurityKey,\n  registerDeviceWithWebAuthn,\n} from \"frontend/integration/device/services\"\nimport { hasSecurityKeyService } from \"frontend/integration/identity\"\nimport { isDeviceRegistered } from \"frontend/integration/identity-manager/services\"\n\nexport interface Context {\n  isIframe: boolean\n}\n\nexport type Events =\n  | { type: \"TRUST\" }\n  | { type: \"END\" }\n  | { type: \"DONT_TRUST\" }\n  | { type: \"done.invoke.isDeviceRegistered\"; data: boolean }\n  | { type: \"done.invoke.fetchWebAuthnPlatformCapability\"; data: boolean }\n  | { type: \"done.invoke.hasSecurityKey\"; data: boolean }\n  | { type: \"done.invoke.checkIframeSelect\"; data: boolean }\n\nexport const TrustDeviceMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QBUBOBXWAXAImAbgJYDGYAsgIbEAWhAdmAHQDC1YxA1sxQA4UBGhADaEsAT0ZpMWSAGIIAewaN6+BRyaFYeIqQBKYKFpmpIiUDwWxRhJeZAAPRAFYAjADZGATi-uvABgAWV2CAdgBmACZXABoQMUQvAA5I7yD3Z3dw51Ckr2cAXwK4qWwdEnIqWmVWdi5eAWFRCQB1MH4AQXQsajp5JU06NQ1GADMwLBo2zu7e7j5BEXF7S2ssWzp7BIQ8wMYojNdw-2ckwIz3OKcEQPDQ71CfJPSk0MLikFLcAgrKGnomLVOPNGksJABldjoVDNADSYDE-WUqnUTGoFFgkOI0LhCJWVhsdiQjhcHm8vgCwTCUVi8UQrlczlSjzOgTZp38-i8oSKJQwZR+pD+1SYkKE7CwsmQegAquDkPi1ht7NdXKE9gFwq5IklnPkcpFTnFtpFQq5GGz-O5GR4QmyPLzPvzvrpKv9lGKJbIcAB5AByyAA+tK5QriatCZtiar1WktTq9c4DUa6QgAuS7oEku51ZFTeEvI6vuUhVUAYxPcRJQBRP04RWRlWIAC0+X2kSCOVcyTZOdCxsQoQijA7SVc-htAUZRedJbdIsYBiM2DAqCRg2GTHGk2o0y6PToIMWzQb6yJoGuOec3j1gSZuVN+S8A4Q0X8Fsefi1uTV7z50jnYVyyXYxVznFpRF3dp916dcVCGVFGFMZcTHAyC91mKMLAJM8sJJG5MnJPwghCNUaUuVNGRyRhXDyKjaOccJshnADBXnYDDFA1A0J6DCD1kVdUAUVBGB4IQKCwUZhIAWyQziV24tiIN46DMNPZVo0QYJUmSTlx2SLIdVpbYPH8cJGGcO8GTzDxTj-J1WNdIDlBAhSeOoLEcXEeFEUUZEEJGZC1lXZSPKhGFvLxcMcI0i8tLcIjKVIiJogo7Z3DvRhXn8U1gmOO9XiKD46AUCA4HsYs2OcwE2GBBpj3ESRnTMaKlXPfCUhfcdwiSEcvGiZ4zROJJwncFiBScssalq+oFiaRq+N6dT2uuTrU12dtDmOU5zkycaXV+KaarqI95ohcLcW2bC2rw1VogtPVRtCTlQkibIUxM2jUkNB8nnVXN9sAo6WBm06wUYas6AgZbbsQPNUkCdJ+rcBlLJCF8UmvJjcvcTkpwZQGquBoFZtBE9WsbTSEA+wdGP2KJXpSNUsmSQnJvdUUwHFKsYabG5IhfH6Rwyq1RoZIdnjGj5KvZhdXJMXmqdNa9fENLMMvHLIIkF01vFuV7TgLbGIjZw6OcXeTUKU9DVIPRW4up-tKLccy-DzKIkzHSI71N0tzflsDrZ6TyIrEHz7fwpkX1x1I7nCQJImtJlcZG332OUSHoYp3C+Yl7xaKHDLuR8DKuo7e51TOSzkiYgskjT6qI+uZsGS8dtOzNHtziHLrep8TMImcTkcqCIqCiAA */\n  createMachine(\n    {\n      tsTypes: {} as import(\"./trust-device.typegen\").Typegen0,\n      schema: { events: {} as Events, context: {} as Context },\n      id: \"TrustDeviceMachine\",\n      initial: \"CheckCapability\",\n      states: {\n        CheckCapability: {\n          initial: \"Trusted\",\n          states: {\n            Trusted: {\n              invoke: {\n                src: \"isDeviceRegistered\",\n                id: \"isDeviceRegistered\",\n                onDone: [\n                  {\n                    cond: \"bool\",\n                    target: \"#TrustDeviceMachine.End\",\n                  },\n                  {\n                    target: \"WebAuthnPlatformCapability\",\n                  },\n                ],\n              },\n            },\n            WebAuthnPlatformCapability: {\n              invoke: {\n                src: \"fetchWebAuthnPlatformCapability\",\n                id: \"fetchWebAuthnPlatformCapability\",\n                onDone: [\n                  {\n                    cond: \"bool\",\n                    target: \"#TrustDeviceMachine.Select\",\n                  },\n                  {\n                    target: \"SecurityKey\",\n                  },\n                ],\n              },\n            },\n            SecurityKey: {\n              invoke: {\n                src: \"hasSecurityKey\",\n                id: \"hasSecurityKey\",\n                onDone: [\n                  {\n                    cond: \"bool\",\n                    target: \"#TrustDeviceMachine.End\",\n                  },\n                  {\n                    target: \"#TrustDeviceMachine.Select\",\n                  },\n                ],\n              },\n            },\n            End: {\n              type: \"final\",\n            },\n          },\n        },\n        Select: {\n          on: {\n            TRUST: {\n              target: \"CheckIframeSelect\",\n            },\n            DONT_TRUST: {\n              target: \"End\",\n            },\n            END: {\n              target: \"End\",\n            },\n          },\n        },\n        CheckIframeSelect: {\n          invoke: {\n            src: \"checkIframeSelect\",\n            id: \"checkIframeSelect\",\n            onDone: [\n              {\n                cond: \"bool\",\n                target: \"IframeSelect\",\n              },\n              {\n                target: \"Register\",\n              },\n            ],\n          },\n        },\n        IframeSelect: {\n          invoke: {\n            src: \"getIframeWebauthn\",\n            id: \"getIframeWebauthn\",\n            onDone: \"End\",\n          },\n        },\n        Register: {\n          invoke: {\n            src: \"fetchWebAuthnPlatformCapability\",\n            id: \"fetchWebAuthnPlatformCapability\",\n            onDone: [\n              {\n                cond: \"bool\",\n                target: \"RegisterDeviceWithWebAuthn\",\n              },\n              {\n                target: \"RegisterDeviceWithSecurityKey\",\n              },\n            ],\n          },\n        },\n        RegisterDeviceWithWebAuthn: {\n          invoke: {\n            src: \"registerDeviceWithWebAuthn\",\n            id: \"registerDeviceWithWebAuthn\",\n            onDone: [\n              {\n                target: \"End\",\n              },\n            ],\n            onError: [\n              {\n                target: \"RegisterDeviceWithWebAuthn\",\n                internal: false,\n              },\n            ],\n          },\n        },\n        RegisterDeviceWithSecurityKey: {\n          invoke: {\n            src: \"registerDeviceWithSecurityKey\",\n            id: \"regsiterWithSecurityKey\",\n            onDone: [\n              {\n                target: \"End\",\n              },\n            ],\n          },\n        },\n        End: {\n          type: \"final\",\n        },\n      },\n    },\n    {\n      services: {\n        isDeviceRegistered: async () => isDeviceRegistered(),\n        fetchWebAuthnPlatformCapability,\n        registerDeviceWithWebAuthn,\n        registerDeviceWithSecurityKey,\n        hasSecurityKey: hasSecurityKeyService,\n        checkIframeSelect: async (context) => context?.isIframe ?? false,\n        getIframeWebauthn,\n      },\n      guards: {\n        bool: (_, event) => event.data,\n      },\n    },\n  )\n\nexport type TrustDeviceActor = ActorRefFrom<typeof TrustDeviceMachine>\n\nexport default TrustDeviceMachine\n","import { WebAuthnIdentity } from \"@dfinity/identity\"\n\nimport { setProfile } from \"@nfid/integration\"\n\nimport { addDeviceToIIandIM } from \"frontend/integration/device/services\"\nimport { ERROR_DEVICE_IN_EXCLUDED_CREDENTIAL_LIST } from \"frontend/integration/identity\"\nimport { fetchProfile } from \"frontend/integration/identity-manager\"\nimport { fetchAuthenticatorDevices } from \"frontend/integration/internet-identity\"\n\nconst handleTrustDevice = async (JSONIdentity: string, isWebAuthN: boolean) => {\n  const profile = await fetchProfile()\n  const identity = WebAuthnIdentity.fromJSON(JSONIdentity)\n\n  try {\n    await addDeviceToIIandIM(identity, BigInt(profile.anchor), !isWebAuthN)\n  } catch (e: any) {\n    console.error(\"registerDeviceWithSecurityKey\", { message: e.message })\n    if (!ERROR_DEVICE_IN_EXCLUDED_CREDENTIAL_LIST.includes(e.message)) {\n      throw e\n    }\n    console.debug(\"registerDeviceWithSecurityKey\", \"device already registered\")\n  }\n}\n\nexport const getIframeWebauthn = async () => {\n  const profile = await fetchProfile()\n  const usersAuthenticatorDevices = await fetchAuthenticatorDevices(\n    BigInt(profile.anchor),\n  )\n\n  const w = window.open(\n    `${NFID_PROVIDER_URL}/iframe/trust-device`,\n    \"iframeTrust\",\n    `toolbar=0,location=0,menubar=0,width=390,height=500,\n    left=${(window.screen.width - 390) / 2},\n    top=${(window.screen.height - 490) / 2}`,\n  )\n\n  if (!w) return\n\n  return new Promise((resolve) => {\n    w?.addEventListener(\"message\", async (e) => {\n      if (!e?.data) return\n      if (\"ready\" in e.data)\n        return w?.postMessage({ devices: usersAuthenticatorDevices })\n\n      if (!(\"isDeviceTrusted\" in e?.data)) return\n\n      if (\"identity\" in e?.data && \"isWebAuthN\" in e?.data) {\n        await handleTrustDevice(e.data.identity, e?.data?.isWebAuthN)\n      }\n\n      if (e.data.isDeviceTrusted) setProfile(profile)\n\n      resolve(false)\n    })\n  })\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface CenterEllipsisProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  value: string\n  trailingChars: number\n  leadingChars: number\n  id?: string\n}\n\nexport const CenterEllipsis = React.forwardRef<\n  HTMLDivElement,\n  CenterEllipsisProps\n>(({ value, leadingChars, trailingChars, ...divProps }, ref) => {\n  const splitAt = value.length - trailingChars\n  return (\n    <div ref={ref} className=\"flex min-w-0\" {...divProps}>\n      <div\n        id={\"first_part\"}\n        className={clsx(\"overflow-hidden whitespace-nowrap\")}\n      >\n        {value.slice(0, leadingChars)}\n      </div>\n      <div>...</div>\n      <div id={\"second_part\"} className=\"flex-shrink-0\">\n        {value.slice(splitAt)}\n      </div>\n    </div>\n  )\n})\n","import clsx from \"clsx\"\nimport React from \"react\"\n\nimport { SDKApplicationMeta } from \"@nfid-frontend/ui\"\n\nimport { ElementProps } from \"frontend/types/react\"\nimport { BlurredLoader } from \"frontend/ui/molecules/blurred-loader\"\n\ninterface AuthorizeRegisterDeciderProps extends ElementProps<HTMLDivElement> {\n  onLogin: () => Promise<void> | void\n  onRegisterPlatformDevice: () => Promise<void>\n  onRegisterSecurityDevice: () => Promise<void>\n  deviceName: string\n  platformAuthenticatorName: string\n  isLoading: boolean\n  isPlatformAuthenticatorAvailable: boolean\n  loadingMessage?: string\n}\n\nexport const AuthorizeRegisterDeciderScreen: React.FC<\n  AuthorizeRegisterDeciderProps\n> = ({\n  isLoading,\n  deviceName,\n  platformAuthenticatorName,\n  isPlatformAuthenticatorAvailable,\n  loadingMessage,\n  onLogin,\n  onRegisterPlatformDevice,\n  onRegisterSecurityDevice,\n}) => {\n  return (\n    <BlurredLoader isLoading={isLoading} loadingMessage={loadingMessage}>\n      <SDKApplicationMeta\n        title=\"Sign in faster on this device\"\n        subTitle={\n          isPlatformAuthenticatorAvailable\n            ? `Trust this ${deviceName}? You can quickly and securely sign in next time using this device's ${platformAuthenticatorName}.`\n            : \"You can quickly and securely sign in next time with a security key if you register one now.\"\n        }\n      />\n      <div className=\"flex flex-col w-full space-y-1 mt-7\">\n        {isPlatformAuthenticatorAvailable ? (\n          <>\n            <DeviceRaw\n              id=\"trust-this-device\"\n              title={\"Trust this device\"}\n              subtitle={`Use ${platformAuthenticatorName} to continue`}\n              handler={onRegisterPlatformDevice}\n            />\n            <DeviceRaw\n              // FIXME: in e2e headless mode, we're not correctly detecting isWebAuthNAvailable\n              // that's why we need to handle this button similar for now\n              id=\"just-log-me-in\"\n              title={\"Don’t trust this device\"}\n              subtitle={\"This device is public or someone else’s\"}\n              handler={onLogin}\n            />\n          </>\n        ) : (\n          <>\n            <DeviceRaw\n              id=\"register-my-security-key\"\n              title={\"Register my security key\"}\n              subtitle={\"Sign in faster with your security key\"}\n              handler={onRegisterSecurityDevice}\n            />\n            <DeviceRaw\n              id=\"just-log-me-in\"\n              title={\"Just log me in\"}\n              subtitle={\"I don’t want to register a security key now\"}\n              handler={onLogin}\n            />\n          </>\n        )}\n      </div>\n    </BlurredLoader>\n  )\n}\n\ninterface DeviceRawProps {\n  id: string\n  title: string\n  subtitle: string\n  handler: () => Promise<void> | void\n}\n\nexport const DeviceRaw: React.FC<DeviceRawProps> = ({\n  title,\n  subtitle,\n  handler,\n  id,\n}) => {\n  return (\n    <div\n      id={id}\n      className={clsx(\n        \"w-full py-[10px] px-4 border border-primaryButtonColor/30 rounded-md\",\n        \"hover:bg-primaryButtonColor/10 hover:border-primaryButtonColor/50 cursor-pointer transition-all\",\n      )}\n      onClick={handler}\n    >\n      <p className=\"text-sm\">{title}</p>\n      <p className=\"mt-0.5 text-xs text-secondary\">{subtitle}</p>\n    </div>\n  )\n}\n","import bowser from \"bowser\"\n\n// TODO: refactor to bowser plugin\nexport const getBrowser = () => {\n  const agent = window.navigator.userAgent.toLowerCase()\n  switch (true) {\n    case agent.indexOf(\"edge\") > -1:\n      return \"Edge\"\n    case agent.indexOf(\"opr\") > -1 && !!(window as any).opr:\n      return \"Opera\"\n    case agent.indexOf(\"chrome\") > -1 && !!(window as any).chrome:\n      return \"Chrome\"\n    case agent.indexOf(\"trident\") > -1:\n      return \"IE\"\n    case agent.indexOf(\"firefox\") > -1:\n      return \"Firefox\"\n    case agent.indexOf(\"safari\") > -1:\n      return \"Safari\"\n    default:\n      return \"Other\"\n  }\n}\n\nexport const getBrowserVersion = () => {\n  const browser = bowser.getParser(window.navigator.userAgent)\n\n  return browser.getBrowser().version\n}\n\nexport const getBrowserName = () => {\n  const browser = bowser.getParser(window.navigator.userAgent)\n\n  return browser.getBrowser().name\n}\n\nexport const isOdd = (num: number) => num % 2 === 1\n\nexport const getUrl = (url: string) => {\n  if (!/^(http|https):\\/\\//.test(url)) {\n    url = `${window.location.protocol}//${url}`\n  }\n\n  return new URL(url)\n}\n\n/**\n * Turn Hello World! into hello-world\n *\n * @export\n * @param {string} str\n */\nexport function slugify(str: string) {\n  return str\n    .toLowerCase()\n    .trim()\n    .replace(/[^\\w\\s-]/g, \"\")\n    .replace(/[\\s_-]+/g, \"-\")\n    .replace(/^-+|-+$/g, \"\")\n}\n","export enum TokenStandards {\n  \"ICP\" = \"ICP\",\n  \"DIP20\" = \"DIP20\",\n  \"ETH\" = \"ETH\",\n  \"MATIC\" = \"MATIC\",\n  \"BTC\" = \"BTC\",\n  \"ERC20_ETHEREUM\" = \"ERC20_ETHEREUM\",\n  \"ERC20_POLYGON\" = \"ERC20_POLYGON\",\n}\n","export const truncateString = (\n  str: string,\n  leadingChars: number,\n  trailingChars?: number,\n): string => {\n  if (str.length < leadingChars) return str\n  if (trailingChars) {\n    const splitAt = str.length - trailingChars\n    return `${str.slice(0, leadingChars)}...${str.slice(splitAt)}`\n  }\n\n  return `${str.slice(0, leadingChars)}...`\n}\n\nexport const copyToClipboard = (\n  e: { stopPropagation: () => void },\n  value?: string,\n  callback?: () => void,\n) => {\n  e.stopPropagation()\n  navigator.clipboard.writeText(value ?? \"\")\n  callback && callback()\n}\n","export const version = \"ethers/5.7.2\";\n","\"use strict\";\n\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\n\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\n\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\n\nimport * as constants from \"@ethersproject/constants\";\n\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\n\nimport { Wordlist, wordlists} from \"@ethersproject/wordlists\";\n\nimport * as utils from \"./utils\";\n\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n\n////////////////////////\n// Types\n\nimport type { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike, Signature } from \"@ethersproject/bytes\";\nimport { Transaction, UnsignedTransaction } from \"@ethersproject/transactions\";\n\n\n////////////////////////\n// Compile-Time Constants\n\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\n////////////////////////\n// Types\n\nimport {\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface\n} from \"@ethersproject/contracts\";\n\n\n////////////////////////\n// Exports\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n};\n\n"],"names":["TrustDeviceCoordinator","actor","state","send","useActor","hasPlatformAuthenticator","platform","useDeviceInfo","React","console","debug","context","value","onLogin","onRegisterPlatformDevice","async","onRegisterSecurityDevice","isLoading","matches","loadingMessage","undefined","isPlatformAuthenticatorAvailable","deviceName","device","platformAuthenticatorName","authenticator","RPCApplicationMetaSubtitle","applicationURL","className","href","target","rel","tip","appMeta","rpcMessage","rpcMessageDecoded","populatedTransaction","disableConfirmButton","onConfirm","onReject","rates","useExchangeRates","price","useMemo","calcPrice","warnings","data","meta","content","url","name","collectionData","push","title","subtitle","isNetworkIsBusyWarning","method","applicationMeta","fromAddress","params","from","toAddress","to","network","networkFee","fee","totalUSD","totalUsd","totalToken","total","currency","onApprove","disableApproveButton","isInsufficientBalance","isInsufficientFundsError","onCancel","assets","icon","makeAsset","isArrayLike","x","length","iterator","Symbol","innerFrom","input","Observable","isFunction","isInteropObservable","obj","subscriber","obs","subscribe","TypeError","array","i","closed","next","complete","then","promise","err","error","reportUnhandledError","asyncIterator","isAsyncIterable","fromAsyncIterable","isIterable","iterable","getReader","isReadableStreamLike","readableStream","reader","read","releaseLock","readableStreamLikeToAsyncGenerator","createInvalidObservableTypeError","asyncIterable","process","catch","mergeMap","project","resultSelector","concurrent","a","b","ii","source","onBeforeNext","expand","innerSubScheduler","additionalFinalizer","buffer","active","index","isComplete","checkComplete","outerNext","doInnerSub","innerComplete","innerValue","bufferedValue","shift","parentSubscription","scheduler","work","delay","repeat","scheduleSubscription","schedule","add","this","unsubscribe","executeSchedule","mergeInternals","isArray","Array","mapOneOrManyArgs","fn","args","callOrApply","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","toCommonHandlerRegistry","eventName","methodName","handler","assetAbi","contract","tokenId","ethereum","EthersEthereum","ethers","AssetType","assetDecoderService","constructor","map","abi","result","decodeParameter","root","collectionId","mapLazy","nft","substring","erc721AssetDecoder","getAbi","getMethod","ERC721","erc721AssetLazyAbi","components","type","erc721AssetLazyDecoder","AssetDecoderService","ERC721_LAZY","erc1155AssetDecoder","ERC1155","erc1155AssetLazyAbi","erc1155TokenLazyDecoder","ERC1155_LAZY","dependencyService","group","decoders","key","reduce","item","functionCallService","decode","fragment","inputs","Interface","decodeFunctionData","FunctionFragment","names","includes","c","types","join","approveAbi","internalType","outputs","stateMutability","approveMethodDecoder","spender","amount","Promise","resolve","interface","BigNumber","toString","bulkPurchaseAbi","bulkPurchaseMethodDecoder","itemsData","feeRecipientFirst","feeRecipientSecond","allowFail","itemPromises","marketId","fees","itemData","decodedItem","functionCallDecoder","items","all","parseInt","burnAbi","burnMethodDecoder","cancelAbi","cancelMethodDecoder","maker","makeAssets","taker","_","takeAssetPrice","salt","start","end","assetClass","assetId","decodeTokenByAssetClass","CreateTokenMethodDecoder","Error","symbol","baseURI","contractURI","isPrivate","createTokenPrivateAbi","createTokenPrivateMethodDecoder","createTokenPublicAbi","createTokenPublicMethodDecoder","directAcceptBidAbi","directAcceptBidMethodDecoder","bidMaker","bidNftAmount","nftAssetClass","nftData","bidPaymentAmount","paymentToken","bidSalt","bidStart","bidEnd","bidDataType","bidData","bidSignature","sellOrderPaymentAmount","sellOrderNftAmount","sellOrderData","directPurchaseAbi","directPurchaseMethodDecoder","mintAndTransferAbi","mintAndTransferMethodDecoder","tokenURI","creators","royalties","signatures","mappedCreators","creator","safeTransferFromAbi","safeTransferFromMethodDecoder","id","setApprovalForAllAbi","setApprovalForAllMethodDecoder","operator","approved","parseHex","Number","ethSendTransactionRpcMessageDecoder","parameter","maxFeePerGas","maxPriorityFeePerGas","personalSignRpcMessageDecoder","message","Buffer","slice","Order","json","assetType","takeAsset","asset","Object","values","decodeByAssetClass","Mint721","uri","Mint1155","supply","account","signTypedDataV4RpcMessageDecoder","JSON","parse","primaryType","decoder","sdk","createRaribleSdk","methodDecoders","assetDecoders","rpcMessageDecoders","eth_sendTransaction","eth_signTypedData_v4","personal_sign","methodDecoder","decodedData","assetDecoder","collection","apis","getItemById","itemId","getCollectionById","rpcMessageDecoder","RPC_BASE","jsonrpc","windowMessages","fromEvent","options","pipe","addEventListener","removeEventListener","isEventTarget","addListener","removeListener","isNodeStyleEventEmitter","on","off","isJQueryStyleEventEmitter","remove","subTarget","window","rpcMessages","predicate","event","call","thisArg","decodeMessage","decodeRpcMessage","warn","NFIDEmbedMachineV2","createMachine","preserveActionOrder","tsTypes","schema","events","services","messageQueue","authRequest","hostname","states","RPC_RECEIVER","invoke","src","RPC_MESSAGE","actions","cond","AUTH","initial","CheckAppMeta","onDone","CheckAuthentication","onError","Authenticate","TrustDevice","Authenticated","entry","delegationIdentity","authState","expiresIn","getExpirationDelay","timeoutIn","now","Date","expiresAt","timeoutAt","timeout","setTimeout","clearTimeout","SESSION_EXPIRED","HANDLE_PROCEDURE","READY","always","AWAIT_PROCEDURE_APPROVAL","APPROVE","CANCEL","EXECUTE_PROCEDURE","ERROR","RETRY","CANCEL_ERROR","assignAppMeta","assign","logo","location","origin","URL","pathname","domain","host","assignProcedure","requestOrigin","updateProcedure","assignAuthSession","authSession","queueRequest","assignError","nfid_authenticated","parent","postMessage","ancestorOrigins","nfid_unauthenticated","sendRPCResponse","sendRPCCancelResponse","code","guards","hasProcedure","isReady","__","CheckApplicationMeta","application","fetchApplication","e","accountLimit","alias","isIFrameAllowed","isNftStorage","log","ExecuteProcedureService","rpcBase","delegation","getWalletDelegation","anchor","rpcUrl","adapter","DelegationWalletAdapter","address","getAddress","response","typedData","signTypedData","wait","sendTransaction","hash","signMessage","AuthenticationMachine","TrustDeviceMachine","RPCReceiver","subsciption","rpcMessageDecodedTypedData","rpcMessagePersonalSign","CheckAuthState","loadProfileFromLocalStorage","fetchProfile","sessionSource","EmbedChooseAccount","applicationLogo","applicationName","onConnectionDetails","onConnect","useEthAddress","balance","rest","useSWR","getEthBalance","useEthBalance","accountsOptions","label","subTitle","truncateString","innerTitle","tokenBalance","E8S","innerSubtitle","usdBalance","IconPngEthereum","accounts","ConnectionDetails","onBack","details","onClick","MappedConnectionDetails","String","Start","FetchAccounts","CONNECTION_DETAILS","BACK","End","fetchAccountsService","assignAccounts","NFIDConnectAccountCoordinator","useMachine","EmbedConnectAccountMachine","Loader","populateTransactionData","keys","acc","removeEmptyKeys","profile","populateTransaction","componentMap","directPurchase","createToken","mintAndTransfer","SellOrder","BidOrder","bulkPurchase","burn","cancel","directAcceptBid","safeTransferFrom","sell","personalSign","setApprovalForAll","approve","ProcedureApprovalCoordinator","isLoadingPopulateTransaction","refreshInterval","handleOnConfirmSignature","hasMapped","ApproverCmp","fallback","PageError","onRetry","NFIDEmbedCoordinator","children","BatchAssetPreview","isModalOpen","setIsModalOpen","useState","alt","clsx","IconSvgNFTPreview","style","left","SingleAssetPreview","AssetPreview","SendTransaction","onAdjustNetworkFee","onShowTransactionDetails","open","leadingChars","trailingChars","tooltip","isBold","disabled","feeUsd","maxFee","maxFeeUsd","maxTotal","maxTotalUsd","transaction","gasPriceRaw","gasPrice","gasLimit","mul","div","parseFloat","toFixed","ProviderError","ethereumAsset","principal","getPrincipal","toText","computeSheetForRootAccount","principalId","BigInt","balanceinUsd","applications","NFID","accountName","appName","token","TokenStandards","blockchain","STORAGE_KEY","loadAddressCache","cache","localStorage","getItem","getKey","accountId","getScope","getEntity","getEthAddress","cachedAddress","readAddressFromLocalCache","identity","replaceActorIdentity","ecdsaSigner","existing","setItem","stringify","storeAddressInLocalCache","useProfile","COINBASE_RATES_URL","DEFAULT_EXCHANGE_RATES","tokens","prices","fetch","res","priceInToken","priceInUsd","useAccounts","isValidating","fetchAccounts","mutate","refreshProfile","dedupingInterval","focusThrottleInterval","useApplicationsMeta","refreshApplicationMeta","fetchApplications","applicationsMeta","useApplicationAccounts","isLoadingAppMeta","isLoadingProfile","applicationAccounts","personasByHostname","find","rmProto","applicationDomain","getUrl","personaByHostnameArray","entries","accountsCount","derivationOrigin","aliasDomains","sort","applicationNameA","applicationNameB","mapApplicationAccounts","CheckCapability","Trusted","WebAuthnPlatformCapability","SecurityKey","Select","TRUST","DONT_TRUST","END","CheckIframeSelect","IframeSelect","Register","RegisterDeviceWithWebAuthn","internal","RegisterDeviceWithSecurityKey","isDeviceRegistered","fetchWebAuthnPlatformCapability","registerDeviceWithWebAuthn","registerDeviceWithSecurityKey","hasSecurityKey","hasSecurityKeyService","checkIframeSelect","isIframe","getIframeWebauthn","usersAuthenticatorDevices","fetchAuthenticatorDevices","w","NFID_PROVIDER_URL","screen","width","height","devices","JSONIdentity","isWebAuthN","WebAuthnIdentity","addDeviceToIIandIM","ERROR_DEVICE_IN_EXCLUDED_CREDENTIAL_LIST","handleTrustDevice","isDeviceTrusted","setProfile","bool","CenterEllipsis","ref","divProps","splitAt","AuthorizeRegisterDeciderScreen","B","DeviceRaw","getBrowserName","bowser","navigator","userAgent","getBrowser","test","protocol","str","version","BaseContract","Contract","ContractFactory","FixedNumber","Signer","VoidSigner","Wallet","constants","providers","get","getDefaultProvider","Wordlist","wordlists","utils","logger","Logger"],"sourceRoot":""}