{"version":3,"file":"static/js/567.a62c9452.chunk.js","mappings":"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","sources":["ui/atoms/icons/plus.tsx","ui/atoms/icons/recovery.tsx","ui/atoms/icons/usb.tsx","ui/molecules/modal/closeIcon.tsx","ui/molecules/modal/advanced/index.tsx","ui/atoms/icons/cancle.tsx","ui/atoms/icons/check-mark.tsx","ui/atoms/icons/info.tsx","ui/atoms/icons/pencil.tsx","ui/atoms/icons/trash.tsx","ui/atoms/icons/desktop.tsx","ui/atoms/icons/document.tsx","ui/atoms/icons/google.tsx","ui/atoms/icons/ii.tsx","ui/atoms/icons/laptop.tsx","ui/atoms/icons/tablet.tsx","ui/atoms/icons/unknown.tsx","ui/organisms/device-list/device-icon-decider.tsx","ui/organisms/device-list/device-list-button-group.tsx","ui/organisms/device-list/device-list-item.tsx","ui/organisms/recovery-list/add-phrase/index.tsx","ui/organisms/recovery-list/method-raw-item.tsx","ui/atoms/icons/warning.tsx","ui/organisms/recovery-list/delete-phrase/phrase-delete-modal.tsx","ui/organisms/recovery-list/protect-phrase/phrase-protect-modal.tsx","ui/organisms/recovery-list/recovery-list-item.tsx","ui/pages/new-profile/security/index.tsx","apps/identity-manager/profile/security.tsx","ui/atoms/icons/copy.tsx","ui/atoms/icons/mobile.tsx","ui/templates/profile-container/Container.tsx"],"sourcesContent":["import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface PlusIconProps extends React.HTMLAttributes<HTMLDivElement> {\n  onClick?: () => void\n}\n\nexport const PlusIcon: React.FC<PlusIconProps> = ({ className, onClick }) => {\n  return (\n    <svg\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      className={clsx(\"cursor-pointer\", className)}\n      onClick={onClick}\n    >\n      <path\n        d=\"M9 3.75V14.25\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M3.75 9H14.25\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n","import React from \"react\"\n\nexport const IconRecovery = () => {\n  return (\n    <svg width=\"24\" height=\"24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M4 20V4a2 2 0 0 1 2-2h8l6 6v12\"\n        stroke=\"#0E62FF\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M14 2v6h6M16 13H8M16 17H8M10 9H8\"\n        stroke=\"#0E62FF\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface USBIconProps extends React.SVGProps<SVGSVGElement> {}\n\nexport const USBIcon: React.FC<USBIconProps> = ({ className, onClick }) => {\n  return (\n    <svg\n      viewBox=\"0 0 17 24\"\n      fill=\"none\"\n      className={clsx(\"w-6 h-6\", className)}\n      onClick={onClick}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M6.21218 5.51102C6.01785 5.51102 5.89783 5.29903 5.9978 5.1324L9.00107 0.126953L12.0043 5.1324C12.1043 5.29903 11.9843 5.51102 11.79 5.51102H10V13.8821L13.4104 12.3473C13.7692 12.1858 14 11.8289 14 11.4354V11.0002H13.25C13.1119 11.0002 13 10.8883 13 10.7502V7.25024C13 7.11217 13.1119 7.00024 13.25 7.00024H16.75C16.8881 7.00024 17 7.11217 17 7.25024V10.7502C17 10.8883 16.8881 11.0002 16.75 11.0002H16V11.4354C16 12.6159 15.3077 13.6866 14.2312 14.1711L10 16.0753V17.5716V18.6368C11.0379 19.0389 11.7738 20.0469 11.7738 21.2268C11.7738 22.7603 10.5307 24.0034 8.9972 24.0034C7.46371 24.0034 6.22058 22.7603 6.22058 21.2268C6.22058 20.0448 6.95917 19.0353 8 18.6346V18.2182L3.76881 16.3139C2.69231 15.8295 2 14.7587 2 13.5782V12.6639C1.1674 12.3024 0.585083 11.4728 0.585083 10.5073C0.585083 9.20938 1.63724 8.15723 2.93514 8.15723C4.23304 8.15723 5.2852 9.20938 5.2852 10.5073C5.2852 11.4219 4.76274 12.2144 4 12.6028V13.5782C4 13.9717 4.23077 14.3286 4.5896 14.4901L8 16.025V15.4287V5.51102H6.21218Z\"\n        fill=\"#0E62FF\"\n      />\n    </svg>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface ModalCloseIconProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const ModalCloseIcon: React.FC<ModalCloseIconProps> = ({\n  className,\n}) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"21\"\n      height=\"21\"\n      fill=\"currentColor\"\n      viewBox=\"0 0 21 21\"\n      className={clsx(\"hover:cursor-pointer\", className)}\n    >\n      <path\n        stroke=\"#000\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M3.162 3.167L17.83 17.833M17.828 3.167L3.161 17.833\"\n      ></path>\n    </svg>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\nimport { Button } from \"../../../atoms/button\"\nimport { H5 } from \"../../../atoms/typography\"\nimport { ModalCloseIcon } from \"../closeIcon\"\n\nexport interface ModalButtonProps {\n  text: string\n  onClick: () => void\n  type: \"primary\" | \"secondary\" | \"error\"\n  block?: boolean\n}\n\nexport interface ModalAdvancedProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  title: string\n  subTitle?: string | JSX.Element\n  onClose?: () => void\n  primaryButton?: ModalButtonProps\n  secondaryButton?: ModalButtonProps\n  large?: boolean\n  backgroundClassnames?: string\n  buttonsClassNames?: string\n}\n\nexport const ModalAdvanced: React.FC<ModalAdvancedProps> = ({\n  children,\n  className,\n  title,\n  subTitle,\n  onClose,\n  primaryButton,\n  secondaryButton,\n  large,\n  backgroundClassnames = \"opacity-5\",\n  buttonsClassNames,\n}) => {\n  return (\n    <>\n      <div className=\"fixed inset-0 z-50 flex items-center justify-center mx-4 overflow-x-hidden overflow-y-auto outline-none focus:outline-none\">\n        <div\n          className={clsx(\n            \"relative w-full mx-auto my-6\",\n            large ? \"max-w-sm md:max-w-lg\" : \"max-w-sm\",\n          )}\n        >\n          <div className=\"relative flex flex-col w-full bg-white border-0 rounded-lg shadow-lg outline-none focus:outline-none\">\n            <div className=\"relative flex-auto px-6 \">\n              <H5 className=\"mt-4\">{title}</H5>\n              <p className=\"my-4 text-sm\">{subTitle}</p>\n              <div className={clsx(\"\", className)}>{children}</div>\n            </div>\n\n            <div\n              className={clsx(\"grid grid-cols-2 p-6 gap-4\", buttonsClassNames)}\n            >\n              {secondaryButton && (\n                <Button\n                  stroke\n                  block\n                  className={clsx(\"!py-3 !px-8\")}\n                  onClick={secondaryButton?.onClick}\n                  largeMax\n                >\n                  {secondaryButton?.text}\n                </Button>\n              )}\n\n              {primaryButton && (\n                <Button\n                  primary={primaryButton.type === \"primary\"}\n                  secondary={primaryButton.type === \"secondary\"}\n                  error={primaryButton.type === \"error\"}\n                  className={clsx(\"!py-3 !px-8\")}\n                  onClick={primaryButton.onClick}\n                  largeMax\n                  block\n                >\n                  {primaryButton.text}\n                </Button>\n              )}\n            </div>\n          </div>\n\n          <div className={clsx(\"absolute top-5 right-5\")} onClick={onClose}>\n            <ModalCloseIcon />\n          </div>\n        </div>\n      </div>\n      <div\n        className={clsx(\"fixed inset-0 z-40 bg-black\", backgroundClassnames)}\n      ></div>\n    </>\n  )\n}\n","import React from \"react\"\n\ninterface MapPinIconProps extends React.HTMLAttributes<HTMLOrSVGElement> {\n  strokeColor?: string\n  size?: string | number\n}\n\nexport const IconCancel: React.FC<MapPinIconProps> = ({ onClick }) => {\n  return (\n    <svg width=\"24\" height=\"24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M17.304 6.697 6.697 17.304M6.696 6.697l10.607 10.607\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n","import React from \"react\"\n\ninterface MapPinIconProps extends React.HTMLAttributes<HTMLOrSVGElement> {\n  strokeColor?: string\n  size?: string | number\n}\n\nexport const IconCheckMark: React.FC<MapPinIconProps> = ({ onClick }) => {\n  return (\n    <svg width=\"24\" height=\"24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M18.666 7 9.5 16.167 5.333 12\"\n        stroke=\"#0E62FF\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface InfoIconProps extends React.SVGProps<SVGSVGElement> {}\n\nexport const InfoIcon: React.FC<InfoIconProps> = ({ className, onClick }) => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={clsx(\"cursor-pointer w-6 h-6\", className)}\n      onClick={onClick}\n    >\n      <path\n        d=\"M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\"\n        stroke=\"#9CA3AF\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M12 16.125V11.3125\"\n        stroke=\"#9CA3AF\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M12 7.875H12.0092\"\n        stroke=\"#9CA3AF\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface PencilIconProps extends React.HTMLAttributes<HTMLDivElement> {\n  onClick?: () => void\n}\n\nexport const PencilIcon: React.FC<PencilIconProps> = ({\n  className,\n  onClick,\n}) => {\n  return (\n    <svg\n      height=\"24\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      className={clsx(\n        \"text-secondary hover:text-black cursor-pointer\",\n        className,\n      )}\n      onClick={onClick}\n    >\n      <path\n        stroke=\"currentColor\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeOpacity=\"1\"\n        strokeWidth=\"2\"\n        d=\"M14 5.25L17.75 9 8 18.75H4.25V15L14 5.25z\"\n      ></path>\n    </svg>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface TrashIconProps extends React.HTMLAttributes<HTMLDivElement> {\n  onClick?: () => void\n}\n\nexport const TrashIcon: React.FC<TrashIconProps> = ({ className, onClick }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      className={clsx(\n        \"text-secondary hover:text-red-base cursor-pointer\",\n        className,\n      )}\n      onClick={onClick}\n    >\n      <path\n        fill=\"currentColor\"\n        fillOpacity=\"1\"\n        fillRule=\"evenodd\"\n        d=\"M10.285 6.129A.395.395 0 0110.571 6h2.858c.097 0 .201.04.286.129a.54.54 0 01.142.371V7h-3.714v-.5a.54.54 0 01.142-.371zM8.143 7v-.5c0-.648.244-1.278.694-1.75A2.395 2.395 0 0110.571 4h2.858c.66 0 1.283.276 1.734.75a2.54 2.54 0 01.694 1.75V7H19a1 1 0 110 2h-1v9.5c0 .648-.245 1.278-.694 1.75a2.395 2.395 0 01-1.735.75H8.43c-.66 0-1.283-.276-1.735-.75A2.539 2.539 0 016 18.5V9H5a1 1 0 010-2h3.143zM8 9v9.5c0 .148.056.28.143.371a.395.395 0 00.286.129h7.142c.098 0 .202-.04.286-.129A.539.539 0 0016 18.5V9H8zm2.5 1.5a1 1 0 011 1v5a1 1 0 11-2 0v-5a1 1 0 011-1zm4 1a1 1 0 10-2 0v5a1 1 0 102 0v-5z\"\n        clipRule=\"evenodd\"\n      ></path>\n    </svg>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface DesktopIconProps extends React.SVGProps<SVGSVGElement> {}\n\nexport const IconLaptop: React.FC<DesktopIconProps> = ({\n  className,\n  onClick,\n}) => {\n  return (\n    <svg\n      viewBox=\"0 0 34 34\"\n      fill=\"none\"\n      className={clsx(\"w-6 h-6\", className)}\n      onClick={onClick}\n    >\n      <path\n        d=\"M28.3333 22.666C28.1473 22.6661 27.963 22.6295 27.7911 22.5583C27.6192 22.4871 27.463 22.3827 27.3315 22.2512C27.1999 22.1196 27.0956 21.9634 27.0244 21.7915C26.9532 21.6196 26.9166 21.4354 26.9167 21.2493L26.9167 8.49935L7.08333 8.49935L7.08333 21.2493C7.08333 21.6251 6.93408 21.9854 6.6684 22.2511C6.40272 22.5168 6.04239 22.666 5.66667 22.666C5.29094 22.666 4.93061 22.5168 4.66493 22.2511C4.39926 21.9854 4.25 21.6251 4.25 21.2493L4.25 8.49935C4.25086 7.74817 4.54965 7.02799 5.08081 6.49683C5.61198 5.96566 6.33215 5.66687 7.08333 5.66602L26.9167 5.66602C27.6678 5.66687 28.388 5.96566 28.9192 6.49683C29.4504 7.02799 29.7491 7.74817 29.75 8.49935L29.75 21.2493C29.75 21.4354 29.7134 21.6196 29.6423 21.7915C29.5711 21.9634 29.4667 22.1196 29.3352 22.2512C29.2036 22.3827 29.0474 22.4871 28.8755 22.5583C28.7036 22.6295 28.5194 22.6661 28.3333 22.666Z\"\n        fill=\"#0E62FF\"\n      />\n      <path\n        d=\"M31.167 28.3321L2.83366 28.3321C2.45794 28.3321 2.0976 28.1829 1.83192 27.9172C1.56625 27.6515 1.41699 27.2912 1.41699 26.9154C1.41699 26.5397 1.56625 26.1794 1.83192 25.9137C2.0976 25.648 2.45794 25.4988 2.83366 25.4988L31.167 25.4988C31.5427 25.4988 31.9031 25.648 32.1687 25.9137C32.4344 26.1794 32.5837 26.5397 32.5837 26.9154C32.5837 27.2912 32.4344 27.6515 32.1687 27.9172C31.9031 28.1829 31.5427 28.3321 31.167 28.3321Z\"\n        fill=\"#0E62FF\"\n      />\n    </svg>\n  )\n}\n","import React from \"react\"\n\ninterface LaptopIconProps extends React.SVGProps<SVGSVGElement> {}\n\nexport const DocumentIcon: React.FC<LaptopIconProps> = () => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M4 20V4C4 3.46957 4.21071 2.96086 4.58579 2.58579C4.96086 2.21071 5.46957 2 6 2H14L20 8V20\"\n        stroke=\"#0E62FF\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M14 2V8H20\"\n        stroke=\"#0E62FF\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M16 13H8\"\n        stroke=\"#0E62FF\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M16 17H8\"\n        stroke=\"#0E62FF\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M10 9H9H8\"\n        stroke=\"#0E62FF\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface GoogleIconProps extends React.SVGProps<SVGSVGElement> {}\n\nexport const GoogleIcon: React.FC<GoogleIconProps> = ({\n  className,\n  onClick,\n}) => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={clsx(\"w-6 h-6\", className)}\n      onClick={onClick}\n    >\n      <path\n        d=\"M22 12.2316C22 11.5589 21.9404 10.9204 21.8382 10.2988H12.2172V14.1387H17.7259C17.479 15.3988 16.7552 16.4631 15.6825 17.1868V19.7411H18.9689C20.8932 17.9616 22 15.3392 22 12.2316Z\"\n        fill=\"#4285F4\"\n      />\n      <path\n        d=\"M12.2199 22.2165C14.9785 22.2165 17.2859 21.297 18.9717 19.7389L15.6852 17.1846C14.7657 17.7976 13.5992 18.1723 12.2199 18.1723C9.55498 18.1723 7.29871 16.3758 6.48986 13.9492H3.1012V16.5801C4.7785 19.9177 8.22676 22.2165 12.2199 22.2165Z\"\n        fill=\"#34A853\"\n      />\n      <path\n        d=\"M6.48712 13.9484C6.27426 13.3354 6.16358 12.6798 6.16358 11.9986C6.16358 11.3175 6.28278 10.6619 6.48712 10.0489V7.41797H3.09846C2.40029 8.79727 2.00012 10.3469 2.00012 11.9986C2.00012 13.6504 2.40029 15.2 3.09846 16.5793L6.48712 13.9484Z\"\n        fill=\"#FBBC05\"\n      />\n      <path\n        d=\"M12.2199 5.82746C13.7269 5.82746 15.0722 6.34683 16.1365 7.36002L19.0483 4.44816C17.2859 2.7964 14.9785 1.7832 12.2199 1.7832C8.22676 1.7832 4.7785 4.08205 3.1012 7.41962L6.48986 10.0505C7.29871 7.62396 9.55498 5.82746 12.2199 5.82746Z\"\n        fill=\"#EA4335\"\n      />\n    </svg>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\nimport { Image } from \"@nfid-frontend/ui\"\n\nimport dfinity from \"frontend/assets/dfinity.svg\"\n\ninterface IIIconProps extends React.SVGProps<HTMLImageElement> {}\n\nexport const IIIcon: React.FC<IIIconProps> = ({ className, onClick }) => {\n  return (\n    <Image\n      src={dfinity}\n      alt=\"ii\"\n      className={clsx(\"w-6 h-6\", className)}\n      onClick={onClick}\n    />\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface LaptopIconProps extends React.SVGProps<SVGSVGElement> {}\n\nexport const IconDesktop: React.FC<LaptopIconProps> = ({\n  className,\n  onClick,\n}) => {\n  return (\n    <svg\n      viewBox=\"0 0 34 34\"\n      fill=\"none\"\n      className={clsx(\"w-6 h-6\", className)}\n      onClick={onClick}\n    >\n      <path\n        fill=\"#0E62FF\"\n        d=\"M17 31.168a1.417 1.417 0 01-1.417-1.417v-4.25h-8.5a4.255 4.255 0 01-4.25-4.25V7.084a4.255 4.255 0 014.25-4.25h19.833a4.255 4.255 0 014.25 4.25v14.167a4.255 4.255 0 01-4.25 4.25H15.583a1.416 1.416 0 110-2.833h11.333a1.418 1.418 0 001.417-1.417V7.084a1.418 1.418 0 00-1.417-1.416H7.083a1.418 1.418 0 00-1.417 1.416v14.167a1.418 1.418 0 001.417 1.417H17a1.417 1.417 0 011.416 1.416v5.667A1.417 1.417 0 0117 31.168z\"\n      />\n      <path\n        fill=\"#0E62FF\"\n        d=\"M21.25 31.166h-8.5a1.417 1.417 0 110-2.833h8.5a1.417 1.417 0 010 2.833zM17 21.249a1.404 1.404 0 01-1.417-1.417 1.417 1.417 0 112.833 0A1.404 1.404 0 0117 21.249z\"\n      />\n    </svg>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface TabletIconProps extends React.SVGProps<SVGSVGElement> {}\n\nexport const TabletIcon: React.FC<TabletIconProps> = ({\n  className,\n  onClick,\n}) => {\n  return (\n    <svg\n      viewBox=\"0 0 34 34\"\n      fill=\"none\"\n      className={clsx(\"w-6 h-6\", className)}\n      onClick={onClick}\n    >\n      <path\n        fill=\"#0E62FF\"\n        d=\"M5.667 5.668A2.833 2.833 0 018.5 2.834h17a2.833 2.833 0 012.834 2.834v22.666a2.833 2.833 0 01-2.834 2.834h-17a2.833 2.833 0 01-2.833-2.834V5.668zm19.833 0h-17v22.666h17V5.668z\"\n      ></path>\n      <path\n        fill=\"#0E62FF\"\n        d=\"M12.75 5.666h8.5v.417a1 1 0 01-1 1h-6.5a1 1 0 01-1-1v-.417z\"\n      ></path>\n    </svg>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface UnknownIconProps extends React.SVGProps<SVGSVGElement> {}\n\nexport const UnknownIcon: React.FC<UnknownIconProps> = ({\n  className,\n  onClick,\n}) => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={clsx(\"w-6 h-6\", className)}\n      onClick={onClick}\n    >\n      <path\n        d=\"M9.02393 9.65484C9.038 9.11985 9.16753 8.67214 9.4125 8.31172C9.66029 7.9513 9.98692 7.68099 10.3924 7.50078C10.8007 7.32057 11.2512 7.23047 11.744 7.23047C12.2818 7.23047 12.7548 7.3248 13.1631 7.51345C13.5742 7.70211 13.8938 7.97102 14.1219 8.32017C14.3528 8.66651 14.4682 9.07761 14.4682 9.55348C14.4682 9.87447 14.4161 10.1617 14.3119 10.4151C14.2106 10.6685 14.0656 10.8938 13.8769 11.0909C13.6882 11.288 13.4644 11.464 13.2053 11.6188C12.9773 11.7596 12.79 11.906 12.6436 12.0581C12.5 12.2102 12.393 12.389 12.3226 12.5945C12.255 12.7972 12.2198 13.0478 12.217 13.3463V13.5002\"\n        stroke=\"#9CA3AF\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n      />\n      <path\n        d=\"M12.2065 18.1776C11.9082 18.1776 11.6514 18.0715 11.4359 17.8594C11.2205 17.6473 11.1128 17.3887 11.1128 17.0838C11.1128 16.7855 11.2205 16.5303 11.4359 16.3182C11.6514 16.1061 11.9082 16 12.2065 16C12.5015 16 12.7567 16.1061 12.9722 16.3182C13.1909 16.5303 13.3003 16.7855 13.3003 17.0838C13.3003 17.286 13.2489 17.4699 13.1462 17.6357C13.0467 17.8014 12.9142 17.9339 12.7484 18.0334C12.586 18.1295 12.4054 18.1776 12.2065 18.1776Z\"\n        fill=\"#9CA3AF\"\n      />\n      <path\n        d=\"M5.90214 3.17157C6.4802 2.59351 6.76923 2.30448 7.13677 2.15224C7.50432 2 7.91307 2 8.73057 2H15.326C16.1517 2 16.5646 2 16.9351 2.15505C17.3056 2.31011 17.5954 2.60419 18.175 3.19234L20.849 5.90579C21.4171 6.4822 21.7011 6.7704 21.8505 7.13498C22 7.49956 22 7.90419 22 8.71345V15.3431C22 16.1606 22 16.5694 21.8478 16.9369C21.6955 17.3045 21.4065 17.5935 20.8284 18.1716L18.1716 20.8284C17.5935 21.4065 17.3045 21.6955 16.9369 21.8478C16.5694 22 16.1606 22 15.3431 22H8.71345C7.90419 22 7.49956 22 7.13498 21.8505C6.7704 21.7011 6.4822 21.4171 5.90579 20.849L3.19234 18.175C2.60419 17.5954 2.31011 17.3056 2.15505 16.9351C2 16.5646 2 16.1517 2 15.326V8.73057C2 7.91307 2 7.50432 2.15224 7.13677C2.30448 6.76923 2.59351 6.4802 3.17157 5.90214L5.90214 3.17157Z\"\n        stroke=\"#9CA3AF\"\n        strokeWidth=\"2\"\n      />\n    </svg>\n  )\n}\n","import React from \"react\"\n\nimport { IconMetamask } from \"@nfid-frontend/ui\"\nimport { Icon } from \"@nfid/integration\"\n\nimport { IconLaptop } from \"frontend/ui/atoms/icons/desktop\"\nimport { DocumentIcon } from \"frontend/ui/atoms/icons/document\"\nimport { GoogleIcon } from \"frontend/ui/atoms/icons/google\"\nimport { IIIcon } from \"frontend/ui/atoms/icons/ii\"\nimport { IconDesktop } from \"frontend/ui/atoms/icons/laptop\"\nimport { MobileIcon } from \"frontend/ui/atoms/icons/mobile\"\nimport { TabletIcon } from \"frontend/ui/atoms/icons/tablet\"\nimport { UnknownIcon } from \"frontend/ui/atoms/icons/unknown\"\nimport { USBIcon } from \"frontend/ui/atoms/icons/usb\"\n\ninterface DeviceIconDeciderProps {\n  icon: Icon\n  onClick?: (e: React.SyntheticEvent) => void\n}\n\nexport const DeviceIconDecider: React.FC<DeviceIconDeciderProps> = ({\n  icon,\n  onClick,\n}) => {\n  const props = {\n    className: \"text-xl text-blue\",\n    onClick,\n  }\n\n  switch (icon) {\n    case \"mobile\":\n      return <MobileIcon {...props} />\n    case \"tablet\":\n      return <TabletIcon {...props} />\n    case \"laptop\":\n      return <IconLaptop {...props} />\n    case \"desktop\":\n      return <IconDesktop {...props} />\n    case \"document\":\n      return <DocumentIcon {...props} />\n    case \"usb\":\n      return <USBIcon {...props} />\n    case \"google\":\n      return <GoogleIcon {...props} />\n    case \"unknown\":\n      return <UnknownIcon {...props} />\n    case \"ii\":\n      return <IIIcon />\n    case \"metamask\":\n      return <IconMetamask />\n    default:\n      return null\n  }\n}\n","import React from \"react\"\n\nimport { Icon } from \"@nfid/integration\"\n\nimport { Button } from \"frontend/ui/atoms/button\"\n\nimport { DeviceIconDecider } from \"./device-icon-decider\"\n\ninterface DeviceListButtonGroupProps {\n  onSelect: (icon: Icon) => void\n  selected: Icon\n}\n\nconst ICONS: Icon[] = [\n  \"mobile\",\n  \"tablet\",\n  \"laptop\",\n  \"desktop\",\n  \"document\",\n  \"usb\",\n]\n\nexport const DeviceListButtonGroup: React.FC<DeviceListButtonGroupProps> = ({\n  onSelect,\n  selected,\n}) => {\n  const handleSelect = React.useCallback(\n    (icon: Icon) => () => onSelect(icon),\n    [onSelect],\n  )\n\n  return (\n    <div className=\"flex justify-center space-x-2\">\n      {ICONS.map((icon) => (\n        <Button\n          key={icon}\n          icon\n          onClick={handleSelect(icon)}\n          isActive={selected === icon}\n          className=\"hover:!bg-blue-50\"\n        >\n          <DeviceIconDecider icon={icon} />\n        </Button>\n      ))}\n    </div>\n  )\n}\n","import clsx from \"clsx\"\nimport { format } from \"date-fns\"\nimport produce from \"immer\"\nimport React from \"react\"\n\nimport { Tooltip } from \"@nfid-frontend/ui\"\nimport { Icon } from \"@nfid/integration\"\n\nimport { LegacyDevice } from \"frontend/integration/identity-manager/devices/state\"\nimport { IconCancel } from \"frontend/ui/atoms/icons/cancle\"\nimport { IconCheckMark } from \"frontend/ui/atoms/icons/check-mark\"\nimport { InfoIcon } from \"frontend/ui/atoms/icons/info\"\nimport { PencilIcon } from \"frontend/ui/atoms/icons/pencil\"\nimport { TrashIcon } from \"frontend/ui/atoms/icons/trash\"\nimport { Loader } from \"frontend/ui/atoms/loader\"\nimport { P } from \"frontend/ui/atoms/typography/paragraph\"\nimport { ModalAdvanced } from \"frontend/ui/molecules/modal/advanced\"\n\nimport { DeviceIconDecider } from \"./device-icon-decider\"\nimport { DeviceListButtonGroup } from \"./device-list-button-group\"\n\ninterface DeviceListItemProps {\n  device: LegacyDevice\n  onDeviceUpdate: (device: LegacyDevice) => Promise<void>\n  onDelete: (device: LegacyDevice) => Promise<void>\n}\n\nexport const DeviceListItem: React.FC<DeviceListItemProps> = ({\n  device: initialDevice,\n  onDelete,\n  onDeviceUpdate,\n}) => {\n  const [updatedDevice, setUpdatedDevice] = React.useState<LegacyDevice | null>(\n    null,\n  )\n\n  const device = updatedDevice ?? initialDevice\n\n  const [editIconModal, toggleIconModal] = React.useReducer(\n    (state) => !state,\n    false,\n  )\n  const [deleteDeviceModal, toggleDeleteDeviceModal] = React.useReducer(\n    (state) => !state,\n    false,\n  )\n\n  const [isEditingLabel, toggleEditLabel] = React.useReducer(\n    (state) => !state,\n    false,\n  )\n\n  const [loading, setLoading] = React.useState(false)\n\n  const handleDeleteDevice = React.useCallback(\n    async (device: LegacyDevice) => {\n      setLoading(true)\n\n      await onDelete(device)\n\n      setLoading(false)\n      toggleDeleteDeviceModal()\n    },\n    [onDelete],\n  )\n\n  const handleDeleteDeviceDialog = React.useCallback(\n    (e: React.SyntheticEvent) => {\n      e.stopPropagation()\n      toggleDeleteDeviceModal()\n    },\n    [],\n  )\n\n  const handleSelectIcon = React.useCallback(\n    (icon: Icon) => {\n      setUpdatedDevice(\n        produce(updatedDevice || initialDevice, (draft: LegacyDevice) => ({\n          ...draft,\n          icon,\n        })),\n      )\n    },\n    [initialDevice, updatedDevice],\n  )\n\n  const handleEditDeviceIconDialog = React.useCallback(\n    (e: React.SyntheticEvent) => {\n      e.stopPropagation()\n      toggleIconModal()\n    },\n    [],\n  )\n\n  const handleOnChangeLabel = React.useCallback(\n    ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\n      setUpdatedDevice(\n        produce(updatedDevice || initialDevice, (draft: LegacyDevice) => ({\n          ...draft,\n          label: value,\n        })),\n      )\n    },\n    [initialDevice, updatedDevice],\n  )\n\n  const handleOnDeviceUpdate = React.useCallback(async () => {\n    setLoading(true)\n    if (updatedDevice) {\n      await onDeviceUpdate(updatedDevice)\n    }\n    setLoading(false)\n  }, [onDeviceUpdate, updatedDevice])\n\n  const handleOnIconUpdate = React.useCallback(async () => {\n    await handleOnDeviceUpdate()\n    toggleIconModal()\n  }, [handleOnDeviceUpdate])\n\n  const handleOnLabelUpdate = React.useCallback(async () => {\n    await handleOnDeviceUpdate()\n    toggleEditLabel()\n  }, [handleOnDeviceUpdate])\n\n  return (\n    <>\n      <div\n        className={clsx(\n          \"relative flex flex-row hover:bg-gray-50 hover:rounded transition-colors duration-100 -mx-3\",\n        )}\n      >\n        <div\n          className={clsx(\n            \"flex flex-wrap items-center flex-1 px-3 select-none py-2 min-h-[69px]\",\n          )}\n        >\n          <div className=\"mr-4\">\n            <div\n              className={clsx(\n                \"relative flex items-center justify-center bg-white rounded-full w-9 h-9\",\n                isEditingLabel && \"cursor-pointer\",\n              )}\n            >\n              <DeviceIconDecider\n                icon={device.isAccessPoint ? device.icon : \"unknown\"}\n                onClick={\n                  isEditingLabel ? handleEditDeviceIconDialog : () => null\n                }\n              />\n            </div>\n          </div>\n\n          <div\n            className={clsx(\n              \"relative flex items-center flex-1 py-2 border-b border-gray-200\",\n              \"h-full\",\n              device.isWalletDevice && \"!items-start\",\n            )}\n          >\n            {isEditingLabel ? (\n              <input\n                className=\"flex-1 flex-shrink px-2 py-1 rounded outline-none\"\n                defaultValue={device.label}\n                onChange={handleOnChangeLabel}\n              ></input>\n            ) : (\n              <div className=\"flex-1 flex-shrink\">\n                <div className=\"text-gray-700\">\n                  {device.isAccessPoint ? device.label : device.browser}\n                </div>\n                <div\n                  className={clsx(\n                    \"my-1 text-sm text-secondary\",\n                    !device.isWalletDevice && \"hidden\",\n                  )}\n                >\n                  Address: {device.browser}\n                </div>\n                <div className=\"my-1 text-sm text-secondary\">\n                  {device.isSocialDevice\n                    ? `Last activity: ${\n                        format(device.lastUsed, \"MMM d, yyyy 'on '\") +\n                        device.browser\n                      }`\n                    : null}\n\n                  {device.isWalletDevice\n                    ? `Last activity: ${format(\n                        device.lastUsed,\n                        \"MMM d, yyyy \",\n                      )}`\n                    : null}\n\n                  {device.isAccessPoint &&\n                  !device.isSocialDevice &&\n                  !device.isWalletDevice\n                    ? `Last activity: ${\n                        format(device.lastUsed, \"MMM d, yyyy 'on '\") +\n                          device.browser ?? null\n                      }`\n                    : null}\n\n                  {!device.isAccessPoint ? \"This is not an NFID device\" : null}\n                </div>\n              </div>\n            )}\n\n            <div className=\"flex items-center pl-1 md:pl-4\">\n              <div\n                className={clsx(\n                  \"flex space-x-2 items-center\",\n                  !device.isAccessPoint && \"hidden\",\n                  device.isSocialDevice && \"hidden\",\n                  device.isWalletDevice && \"hidden\",\n                )}\n                style={{ display: (device as any).recovery ? \"none\" : \"\" }}\n              >\n                <div\n                  className={clsx(\"hover:bg-gray-50 text-red-base\")}\n                  onClick={\n                    isEditingLabel ? handleOnLabelUpdate : toggleEditLabel\n                  }\n                >\n                  {isEditingLabel ? <IconCheckMark /> : <PencilIcon />}\n                </div>\n                <div\n                  className=\"hover:bg-gray-50 text-red-base\"\n                  onClick={\n                    isEditingLabel ? toggleEditLabel : handleDeleteDeviceDialog\n                  }\n                >\n                  {isEditingLabel ? <IconCancel /> : <TrashIcon />}\n                </div>\n              </div>\n\n              <Tooltip\n                tip=\"You can sign in to the same identity from this device wherever you registered it (i.e. Internet Identity). It won't work with NFID.\"\n                className=\"w-72\"\n              >\n                <div>\n                  <InfoIcon\n                    className={clsx(device.isAccessPoint && \"hidden\")}\n                  />\n                </div>\n              </Tooltip>\n            </div>\n          </div>\n        </div>\n      </div>\n      {editIconModal && (\n        <ModalAdvanced\n          title=\"Change icon\"\n          onClose={() => {\n            setUpdatedDevice(null)\n            toggleIconModal()\n          }}\n          primaryButton={{\n            text: \"Change\",\n            type: \"primary\",\n            onClick: updatedDevice\n              ? handleOnIconUpdate\n              : () => {\n                  toggleIconModal()\n                  setUpdatedDevice(null)\n                },\n          }}\n          secondaryButton={{\n            text: \"Cancel\",\n            type: \"primary\",\n            onClick: () => {\n              setUpdatedDevice(null)\n              toggleIconModal()\n            },\n          }}\n        >\n          <div>\n            <P>\n              Choose icon for <span className=\"font-bold\">{device.label}</span>\n            </P>\n            <DeviceListButtonGroup\n              onSelect={handleSelectIcon}\n              selected={device.icon}\n            />\n          </div>\n        </ModalAdvanced>\n      )}\n      {deleteDeviceModal && (\n        <ModalAdvanced\n          title=\"Delete access point\"\n          onClose={toggleDeleteDeviceModal}\n          primaryButton={{\n            text: \"Delete\",\n            type: \"error\",\n            onClick: async () => {\n              await handleDeleteDevice(device)\n            },\n          }}\n          secondaryButton={{\n            text: \"Cancel\",\n            type: \"primary\",\n            onClick: toggleDeleteDeviceModal,\n          }}\n        >\n          <P>\n            Do you really want to delete{\" \"}\n            <span className=\"font-bold\">{device.label}</span> access point? This\n            process cannot be undone.\n          </P>\n        </ModalAdvanced>\n      )}\n      <Loader isLoading={loading} />\n    </>\n  )\n}\n","import clsx from \"clsx\"\nimport React, { useState } from \"react\"\nimport { toast } from \"react-toastify\"\n\nimport { Button } from \"frontend/ui/atoms/button\"\nimport { CopyIcon } from \"frontend/ui/atoms/icons/copy\"\nimport { ModalAdvanced } from \"frontend/ui/molecules/modal/advanced\"\n\ninterface IAddRecoveryPhraseModal extends React.HTMLAttributes<HTMLDivElement> {\n  onClose: () => void\n  phrase: string\n}\n\nconst AddRecoveryPhraseModal: React.FC<IAddRecoveryPhraseModal> = ({\n  onClose,\n  phrase,\n}) => {\n  const [copied, setCopied] = useState(false)\n  const [isSaved, setIsSaved] = useState(false)\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(phrase)\n    toast.success(\"Copied to clipboard\")\n    setCopied(true)\n  }\n  return (\n    <ModalAdvanced\n      title=\"Add recovery phrase\"\n      subTitle={\n        <>\n          This recovery phrase restores your NFID in case the devices you\n          registered are lost. Keep this phrase secret, safe, offline, and only\n          use it on <b>https://nfid.one.</b>\n        </>\n      }\n      onClose={onClose}\n      buttonsClassNames=\"py-3\"\n    >\n      <div>\n        <div\n          className={clsx(\n            \"border-2 border-black rounded-t-md\",\n            \"focus:outline-none resize-none focus:ring-0\",\n            \"w-full font-mono leading-[26px] p-2\",\n          )}\n        >\n          {phrase}{\" \"}\n        </div>\n        <Button\n          block\n          className=\"flex justify-center space-x-2 border-2 border-t-0 rounded-t-none border-black\"\n          onClick={copyToClipboard}\n          id=\"copy-button\"\n        >\n          <CopyIcon className=\"text-black stroke-black\" />\n          <span>{copied ? \"Copied\" : \"Copy\"}</span>\n        </Button>\n\n        <div className=\"mt-5\">\n          <input\n            type=\"checkbox\"\n            id=\"saved-checkbox\"\n            className=\"w-5 h-5 border-2 rounded cursor-pointer border-black\"\n            onChange={() => setIsSaved(!isSaved)}\n            checked={isSaved}\n          />\n          <label\n            htmlFor=\"saved-checkbox\"\n            className=\"ml-2 text-sm cursor-pointer\"\n          >\n            I’ve saved this phrase in a safe place\n          </label>\n        </div>\n\n        <Button\n          id=\"recovery-save-button\"\n          block\n          primary\n          disabled={!copied || !isSaved}\n          className=\"mt-5\"\n          onClick={onClose}\n        >\n          Done\n        </Button>\n      </div>\n    </ModalAdvanced>\n  )\n}\n\nexport default AddRecoveryPhraseModal\n","import clsx from \"clsx\"\nimport { ReactElement } from \"react\"\n\nimport { ElementProps } from \"frontend/types/react\"\n\ninterface MethodRawProps extends ElementProps<HTMLElement> {\n  img: ReactElement\n  title: string\n  subtitle: string\n  onClick: React.MouseEventHandler\n  id?: string\n}\n\nexport const MethodRaw: React.FC<MethodRawProps> = ({\n  img,\n  title,\n  subtitle,\n  onClick,\n  id,\n  className,\n}) => (\n  <div\n    id={id}\n    onClick={onClick}\n    className={clsx(\n      \"flex items-center w-full px-3 py-2 border border-gray-200 rounded-md\",\n      \"hover:border-blue-light transition-all cursor-pointer hover:bg-[#F4FAFF]\",\n      className,\n    )}\n  >\n    <div className=\"w-[28px] mr-[9px]\">{img}</div>\n    <div>\n      <p className=\"text-sm\">{title}</p>\n      <p className=\"text-[11px] text-secondary\">{subtitle}</p>\n    </div>\n  </div>\n)\n","import React from \"react\"\n\nexport const IconWarning = () => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g clipPath=\"url(#clip0_20160_35653)\">\n        <path\n          d=\"M10.527 4.85092L3.23087 17.3485C3.08044 17.6158 3.00085 17.9188 3.00001 18.2275C2.99916 18.5361 3.0771 18.8396 3.22607 19.1078C3.37504 19.3759 3.58984 19.5994 3.84911 19.7559C4.10838 19.9125 4.40308 19.9966 4.70388 20H19.2961C19.5969 19.9966 19.8916 19.9125 20.1509 19.7559C20.4102 19.5994 20.625 19.3759 20.7739 19.1078C20.9229 18.8396 21.0008 18.5361 21 18.2275C20.9992 17.9188 20.9196 17.6158 20.7691 17.3485L13.473 4.85092C13.3194 4.59116 13.1032 4.3764 12.8452 4.22735C12.5872 4.0783 12.2961 4 12 4C11.7039 4 11.4128 4.0783 11.1548 4.22735C10.8968 4.3764 10.6806 4.59116 10.527 4.85092Z\"\n          stroke=\"#FB923C\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M12 16.583H12.01\"\n          stroke=\"#FB923C\"\n          strokeWidth=\"2.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M12 9.25V12.9167\"\n          stroke=\"#FB923C\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_20160_35653\">\n          <rect width=\"24\" height=\"24\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  )\n}\n","import clsx from \"clsx\"\nimport React, { useState } from \"react\"\nimport { toast } from \"react-toastify\"\n\nimport { Button } from \"frontend/ui/atoms/button\"\nimport { Loader } from \"frontend/ui/atoms/loader\"\nimport { ModalAdvanced } from \"frontend/ui/molecules/modal/advanced\"\n\ninterface IRecoveryPhraseDeleteModal\n  extends React.HTMLAttributes<HTMLDivElement> {\n  onClose: () => void\n  onDelete: (a: string) => Promise<void>\n}\n\nconst RecoveryPhraseDeleteModal: React.FC<IRecoveryPhraseDeleteModal> = ({\n  onClose,\n  onDelete,\n}) => {\n  const [phrase, setPhrase] = useState(\"\")\n  const [isLoading, setIsLoading] = useState(false)\n  const handleDelete = React.useCallback(async () => {\n    setIsLoading(true)\n    try {\n      await onDelete(phrase)\n      onClose()\n    } catch {\n      toast.error(\"Incorrect seed phrase\")\n    } finally {\n      setIsLoading(false)\n    }\n  }, [onClose, onDelete, phrase])\n\n  return (\n    <ModalAdvanced\n      title=\"Remove recovery phrase\"\n      subTitle=\"Enter your recovery phrase to confirm removal.\"\n      onClose={onClose}\n      buttonsClassNames=\"py-3\"\n    >\n      <Loader isLoading={isLoading} />\n      <div>\n        <textarea\n          name=\"recoveryPhrase\"\n          className={clsx(\n            \"border border-black rounded-t-md border-b-0\",\n            \"focus:outline-none resize-none focus:ring-0\",\n            \"w-full -mb-2 font-mono leading-[26px]\",\n          )}\n          rows={6}\n          placeholder=\"10000 cute good fence purity play despair worth year layer install drastic vote skirt noble sadness miss gadget kitten ladder traffic risk phone bamboo \"\n          onChange={(e) => setPhrase(e.target.value)}\n        />\n        <Button\n          id=\"delete-recovery-button\"\n          error\n          block\n          className=\"rounded-t-none\"\n          onClick={handleDelete}\n          disabled={phrase.split(\" \").length < 11}\n        >\n          Remove recovery phrase\n        </Button>\n      </div>\n    </ModalAdvanced>\n  )\n}\n\nexport default RecoveryPhraseDeleteModal\n","import clsx from \"clsx\"\nimport React, { useState } from \"react\"\n\nimport { Button } from \"frontend/ui/atoms/button\"\nimport { ModalAdvanced } from \"frontend/ui/molecules/modal/advanced\"\n\ninterface IRecoveryPhraseProtectModal\n  extends React.HTMLAttributes<HTMLDivElement> {\n  onClose: () => void\n  onProtect: (a: string) => Promise<void>\n}\n\nconst RecoveryPhraseProtectModal: React.FC<IRecoveryPhraseProtectModal> = ({\n  onClose,\n  onProtect,\n}) => {\n  const [phrase, setPhrase] = useState(\"\")\n\n  const handleProtect = React.useCallback(async () => {\n    await onProtect(phrase)\n    onClose()\n  }, [onClose, onProtect, phrase])\n\n  return (\n    <ModalAdvanced\n      title=\"Protect recovery phrase\"\n      subTitle=\"Once protected, a recovery phrase can only be removed by inputting it again.\"\n      onClose={onClose}\n      buttonsClassNames=\"py-3\"\n    >\n      <div id=\"protect-modal\">\n        <textarea\n          name=\"recoveryPhrase\"\n          className={clsx(\n            \"border border-black rounded-t-md\",\n            \"focus:outline-none resize-none focus:ring-0\",\n            \"w-full -mb-2 font-mono leading-[26px]\",\n          )}\n          rows={6}\n          placeholder=\"10000 cute good fence purity play despair worth year layer install drastic vote skirt noble sadness miss gadget kitten ladder traffic risk phone bamboo\"\n          onChange={(e) => setPhrase(e.target.value)}\n        />\n        <Button\n          primary\n          block\n          className=\"rounded-t-none\"\n          onClick={handleProtect}\n          id=\"protect-submit\"\n        >\n          Protect recovery phrase\n        </Button>\n      </div>\n    </ModalAdvanced>\n  )\n}\n\nexport default RecoveryPhraseProtectModal\n","import clsx from \"clsx\"\nimport { format } from \"date-fns\"\nimport produce from \"immer\"\nimport React from \"react\"\n\nimport { Tooltip } from \"@nfid-frontend/ui\"\nimport { Icon } from \"@nfid/integration\"\n\nimport { RecoveryDevice } from \"frontend/integration/identity-manager/devices/state\"\nimport { IconCancel } from \"frontend/ui/atoms/icons/cancle\"\nimport { IconCheckMark } from \"frontend/ui/atoms/icons/check-mark\"\nimport { PencilIcon } from \"frontend/ui/atoms/icons/pencil\"\nimport { TrashIcon } from \"frontend/ui/atoms/icons/trash\"\nimport { IconWarning } from \"frontend/ui/atoms/icons/warning\"\nimport { Loader } from \"frontend/ui/atoms/loader\"\nimport { P } from \"frontend/ui/atoms/typography/paragraph\"\nimport { ModalAdvanced } from \"frontend/ui/molecules/modal/advanced\"\n\nimport { DeviceIconDecider } from \"../device-list/device-icon-decider\"\nimport { DeviceListButtonGroup } from \"../device-list/device-list-button-group\"\nimport RecoveryPhraseDeleteModal from \"./delete-phrase/phrase-delete-modal\"\nimport RecoveryPhraseProtectModal from \"./protect-phrase/phrase-protect-modal\"\n\ninterface recoveryMethodListItemProps {\n  recoveryMethod: RecoveryDevice\n  onRecoveryUpdate: (recoveryMethod: RecoveryDevice) => Promise<void>\n  onRecoveryProtect?: (phrase: string) => Promise<void>\n  onRecoveryDelete: (recoveryMethod: RecoveryDevice) => Promise<void>\n  onDeleteRecoveryPhrase: (phrase: string) => Promise<void>\n}\n\nexport const RecoveryMethodListItem: React.FC<recoveryMethodListItemProps> = ({\n  recoveryMethod: initialRecovery,\n  onRecoveryUpdate,\n  onRecoveryProtect,\n  onRecoveryDelete,\n  onDeleteRecoveryPhrase,\n}) => {\n  const [updatedRecovery, setUpdatedRecovery] =\n    React.useState<RecoveryDevice | null>(null)\n\n  const recoveryMethod = updatedRecovery ?? initialRecovery\n\n  const [editIconModal, toggleIconModal] = React.useReducer(\n    (state) => !state,\n    false,\n  )\n\n  const [isProtectVisible, toggleProtectVisible] = React.useReducer(\n    (state) => !state,\n    false,\n  )\n\n  const [deleteRecoveryModal, toggleDeleteRecoveryModal] = React.useReducer(\n    (state) => !state,\n    false,\n  )\n\n  const [isEditingLabel, toggleEditLabel] = React.useReducer(\n    (state) => !state,\n    false,\n  )\n\n  const [loading, setLoading] = React.useState(false)\n\n  const handleDeleteRecovery = React.useCallback(\n    async (method: RecoveryDevice) => {\n      setLoading(true)\n\n      await onRecoveryDelete(method)\n\n      setLoading(false)\n      toggleDeleteRecoveryModal()\n    },\n    [onRecoveryDelete],\n  )\n\n  const handleProtectRecovery = React.useCallback(\n    async (phrase: string) => {\n      setLoading(true)\n      onRecoveryProtect && (await onRecoveryProtect(phrase))\n      setLoading(false)\n    },\n    [onRecoveryProtect],\n  )\n\n  const handleDeleteRecoveryDialog = React.useCallback(\n    (e: React.SyntheticEvent) => {\n      e.stopPropagation()\n      toggleDeleteRecoveryModal()\n    },\n    [],\n  )\n\n  const handleSelectIcon = React.useCallback(\n    (icon: Icon) => {\n      setUpdatedRecovery(\n        produce(\n          updatedRecovery || initialRecovery,\n          (draft: RecoveryDevice) => ({\n            ...draft,\n            icon,\n          }),\n        ),\n      )\n    },\n    [initialRecovery, updatedRecovery],\n  )\n\n  const handleEditRecoveryIconDialog = React.useCallback(\n    (e: React.SyntheticEvent) => {\n      e.stopPropagation()\n      toggleIconModal()\n    },\n    [],\n  )\n\n  const handleOnChangeLabel = React.useCallback(\n    ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\n      setUpdatedRecovery(\n        produce(\n          updatedRecovery || initialRecovery,\n          (draft: RecoveryDevice) => ({\n            ...draft,\n            label: value,\n          }),\n        ),\n      )\n    },\n    [initialRecovery, updatedRecovery],\n  )\n\n  const handleOnRecoveryUpdate = React.useCallback(async () => {\n    setLoading(true)\n    if (updatedRecovery) {\n      await onRecoveryUpdate(updatedRecovery)\n    }\n    setLoading(false)\n  }, [onRecoveryUpdate, updatedRecovery])\n\n  const handleOnIconUpdate = React.useCallback(async () => {\n    await handleOnRecoveryUpdate()\n    toggleIconModal()\n  }, [handleOnRecoveryUpdate])\n\n  const handleOnLabelUpdate = React.useCallback(async () => {\n    await handleOnRecoveryUpdate()\n    toggleEditLabel()\n  }, [handleOnRecoveryUpdate])\n\n  return (\n    <div\n      className={clsx(\n        \"relative flex flex-row hover:bg-gray-50 hover:rounded transition-colors duration-100 -mx-3\",\n      )}\n    >\n      <div className=\"flex flex-wrap items-center flex-1 px-3 py-0 cursor-pointer select-none peer\">\n        <div className=\"mr-4\">\n          <div className=\"relative flex items-center justify-center bg-white rounded-full w-9 h-9\">\n            <DeviceIconDecider\n              icon={\n                recoveryMethod.isRecoveryPhrase\n                  ? \"document\"\n                  : recoveryMethod.icon\n              }\n              onClick={\n                isEditingLabel ? () => null : handleEditRecoveryIconDialog\n              }\n            />\n          </div>\n        </div>\n\n        <div className=\"relative flex items-center flex-1 py-2 border-b border-gray-200\">\n          <div className=\"flex-1 flex-shrink\">\n            {isEditingLabel ? (\n              <input\n                className=\"flex-1 flex-shrink px-2 py-1 rounded\"\n                defaultValue={recoveryMethod.label}\n                onChange={handleOnChangeLabel}\n              ></input>\n            ) : (\n              <div className=\"flex-1 flex-shrink\">\n                <div className=\"text-gray-700\">\n                  {recoveryMethod.isRecoveryPhrase\n                    ? \"Recovery phrase\"\n                    : recoveryMethod.label}\n                </div>\n                {recoveryMethod.lastUsed ? (\n                  <div className=\"my-1 text-sm text-secondary\">\n                    Last activity:{\" \"}\n                    {format(recoveryMethod.lastUsed, \"MMM d, yyyy\")}\n                  </div>\n                ) : null}\n              </div>\n            )}\n          </div>\n          <div className=\"pl-1 md:pl-4\">\n            <div className=\"flex space-x-2\">\n              {recoveryMethod.isRecoveryPhrase &&\n                !recoveryMethod.isProtected && (\n                  <Tooltip\n                    tip={\n                      <div>\n                        Recovery phrase can be removed without proving you know\n                        what it is.\n                        <br /> Click to protect this recovery phrase\n                      </div>\n                    }\n                  >\n                    <div\n                      id=\"protect-recovery\"\n                      onClick={toggleProtectVisible}\n                      className={\"hover:opacity-70 transition-opacity\"}\n                    >\n                      <IconWarning />\n                    </div>\n                  </Tooltip>\n                )}\n              <div\n                className=\"hover:bg-gray-50 text-red-base\"\n                onClick={isEditingLabel ? handleOnLabelUpdate : toggleEditLabel}\n                style={{ display: !recoveryMethod.isSecurityKey ? \"none\" : \"\" }}\n              >\n                {isEditingLabel ? <IconCheckMark /> : <PencilIcon />}\n              </div>\n              <div\n                id={\n                  recoveryMethod.isRecoveryPhrase\n                    ? \"delete-recovery-phrase\"\n                    : \"\"\n                }\n                className=\"hover:bg-gray-50 text-red-base\"\n                onClick={\n                  isEditingLabel ? toggleEditLabel : handleDeleteRecoveryDialog\n                }\n              >\n                {isEditingLabel ? <IconCancel /> : <TrashIcon />}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {editIconModal && (\n        <ModalAdvanced\n          title=\"Change icon\"\n          onClose={toggleIconModal}\n          primaryButton={{\n            text: \"Change\",\n            type: \"primary\",\n            onClick: updatedRecovery ? handleOnIconUpdate : toggleIconModal,\n          }}\n          secondaryButton={{\n            text: \"Cancel\",\n            type: \"primary\",\n            onClick: () => {\n              setUpdatedRecovery(null)\n              toggleIconModal()\n            },\n          }}\n        >\n          <div>\n            <P>\n              Choose icon for{\" \"}\n              <span className=\"font-bold\">{recoveryMethod.label}</span>\n            </P>\n            <DeviceListButtonGroup\n              onSelect={handleSelectIcon}\n              selected={recoveryMethod.icon}\n            />\n          </div>\n        </ModalAdvanced>\n      )}\n      {deleteRecoveryModal && recoveryMethod.isProtected && (\n        <RecoveryPhraseDeleteModal\n          onClose={toggleDeleteRecoveryModal}\n          onDelete={onDeleteRecoveryPhrase}\n        />\n      )}\n      {deleteRecoveryModal && !recoveryMethod.isProtected && (\n        <ModalAdvanced\n          title=\"Delete access point\"\n          onClose={toggleDeleteRecoveryModal}\n          primaryButton={{\n            text: \"Delete\",\n            type: \"error\",\n            onClick: async () => {\n              await handleDeleteRecovery(recoveryMethod)\n            },\n          }}\n          secondaryButton={{\n            text: \"Cancel\",\n            type: \"primary\",\n            onClick: toggleDeleteRecoveryModal,\n          }}\n        >\n          <P>\n            Do you really want to delete{\" \"}\n            <span className=\"font-bold\">{recoveryMethod.label}</span> access\n            point? This process cannot be undone.\n          </P>\n        </ModalAdvanced>\n      )}\n      {isProtectVisible ? (\n        <RecoveryPhraseProtectModal\n          onClose={toggleProtectVisible}\n          onProtect={(phrase) => handleProtectRecovery(phrase)}\n        />\n      ) : null}\n      <Loader isLoading={loading} />\n    </div>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\nimport {\n  LegacyDevice,\n  RecoveryDevice,\n} from \"frontend/integration/identity-manager/devices/state\"\nimport { PlusIcon } from \"frontend/ui/atoms/icons/plus\"\nimport { IconRecovery } from \"frontend/ui/atoms/icons/recovery\"\nimport { USBIcon } from \"frontend/ui/atoms/icons/usb\"\nimport { Loader } from \"frontend/ui/atoms/loader\"\nimport { ModalAdvanced } from \"frontend/ui/molecules/modal/advanced\"\nimport { DeviceListItem } from \"frontend/ui/organisms/device-list/device-list-item\"\nimport AddRecoveryPhraseModal from \"frontend/ui/organisms/recovery-list/add-phrase\"\nimport { MethodRaw } from \"frontend/ui/organisms/recovery-list/method-raw-item\"\nimport { RecoveryMethodListItem } from \"frontend/ui/organisms/recovery-list/recovery-list-item\"\nimport ProfileContainer from \"frontend/ui/templates/profile-container/Container\"\nimport ProfileTemplate from \"frontend/ui/templates/profile-template/Template\"\n\ninterface IProfileSecurityPage extends React.HTMLAttributes<HTMLDivElement> {\n  onDeviceDelete: (device: LegacyDevice) => Promise<void>\n  onDeviceUpdate: (device: LegacyDevice) => Promise<void>\n  onRecoveryDelete: (method: RecoveryDevice) => Promise<void>\n  onRecoveryUpdate: (method: RecoveryDevice) => Promise<void>\n  onRecoveryProtect: (phrase: string) => Promise<void>\n  onCreateRecoveryPhrase: (protect?: boolean) => Promise<string>\n  onDeleteRecoveryPhrase: (phrase: string) => Promise<void>\n  onRegisterRecoveryKey: () => Promise<void>\n  devices: LegacyDevice[]\n  recoveryMethods: RecoveryDevice[]\n  socialDevices?: LegacyDevice[]\n  walletDevices?: LegacyDevice[]\n}\n\nconst ProfileSecurityPage: React.FC<IProfileSecurityPage> = ({\n  onDeviceDelete,\n  onDeviceUpdate,\n  devices,\n  onRecoveryDelete,\n  onRecoveryUpdate,\n  onRecoveryProtect,\n  onCreateRecoveryPhrase,\n  onDeleteRecoveryPhrase,\n  onRegisterRecoveryKey,\n  recoveryMethods,\n  socialDevices,\n  walletDevices,\n}) => {\n  console.log({ devices, socialDevices })\n  const [isModalVisible, setIsModalVisible] = React.useState(false)\n  const [isLoading, setIsLoading] = React.useState(false)\n  const [phrase, setPhrase] = React.useState(\"\")\n\n  const hasRecoveryPhrase = React.useMemo(\n    () => recoveryMethods.filter((rm) => rm.isRecoveryPhrase).length > 0,\n    [recoveryMethods],\n  )\n\n  const hasSecurityKey = React.useMemo(\n    () => recoveryMethods.filter((rm) => rm.isSecurityKey).length > 0,\n    [recoveryMethods],\n  )\n\n  const canAddRecoveryMethod = React.useMemo(\n    () => !(hasRecoveryPhrase && hasSecurityKey),\n    [hasRecoveryPhrase, hasSecurityKey],\n  )\n\n  const handleWithLoading =\n    (cb: () => Promise<void | string>, callback?: (res: any) => void) =>\n    async () => {\n      try {\n        setIsLoading(true)\n        const res = await cb()\n        callback && callback(res)\n      } catch (e) {\n        console.error(e)\n      } finally {\n        setIsLoading(false)\n        setIsModalVisible(false)\n      }\n    }\n\n  return (\n    <ProfileTemplate pageTitle=\"Security\">\n      <ProfileContainer\n        title=\"Authorized devices\"\n        subTitle=\"Where you can sign in from\"\n      >\n        {devices.map((device) => (\n          <DeviceListItem\n            key={`${device.label}-${device.browser}-${device.lastUsed}`}\n            device={device}\n            onDeviceUpdate={onDeviceUpdate}\n            onDelete={onDeviceDelete}\n          />\n        ))}\n      </ProfileContainer>\n      <ProfileContainer\n        className=\"mt-[30px] relative mb-12 sm:mb-0\"\n        title=\"Account recovery methods\"\n        id=\"recovery-phrase\"\n        subTitle={\n          recoveryMethods.length\n            ? \"Ways NFID can verify it’s you\"\n            : \"Ways NFID can verify it’s you. Protect your account by adding an account recovery method in case your authorized devices are all lost.\"\n        }\n      >\n        {canAddRecoveryMethod && (\n          <div\n            id=\"add-recovery\"\n            className=\"\"\n            onClick={() => setIsModalVisible(true)}\n          >\n            <PlusIcon\n              className={clsx(\n                \"absolute w-6 h-6 text-gray-500\",\n                \"top-4 right-5 sm:top-[30px] sm:right-[30px]\",\n              )}\n            />\n          </div>\n        )}\n        {recoveryMethods?.map((method) => (\n          <RecoveryMethodListItem\n            key={`${method.label}-${method.lastUsed}`}\n            recoveryMethod={method}\n            onRecoveryUpdate={onRecoveryUpdate}\n            onRecoveryDelete={onRecoveryDelete}\n            onRecoveryProtect={onRecoveryProtect}\n            onDeleteRecoveryPhrase={onDeleteRecoveryPhrase}\n          />\n        ))}\n      </ProfileContainer>\n      {socialDevices?.length ? (\n        <ProfileContainer\n          title=\"Social logins\"\n          subTitle=\"Social accounts you can sign in from\"\n          className=\"mt-[30px] relative mb-12 sm:mb-0\"\n        >\n          {socialDevices.map((device) => (\n            <DeviceListItem\n              key={`${device.label}-${device.browser}-${device.lastUsed}`}\n              device={device}\n              onDeviceUpdate={onDeviceUpdate}\n              onDelete={onDeviceDelete}\n            />\n          ))}\n        </ProfileContainer>\n      ) : null}\n      {walletDevices?.length ? (\n        <ProfileContainer\n          title=\"Web3 wallets\"\n          subTitle=\"Web3 wallets you can sign in from\"\n          className=\"mt-[30px] relative mb-12 sm:mb-0\"\n        >\n          {walletDevices.map((device) => (\n            <DeviceListItem\n              key={`${device.label}-${device.browser}-${device.lastUsed}`}\n              device={device}\n              onDeviceUpdate={onDeviceUpdate}\n              onDelete={onDeviceDelete}\n            />\n          ))}\n        </ProfileContainer>\n      ) : null}\n      {isModalVisible && (\n        <ModalAdvanced\n          onClose={() => setIsModalVisible(false)}\n          title={\"Account recovery\"}\n          backgroundClassnames=\"opacity-40\"\n        >\n          <p className=\"text-sm\">\n            Create a secret phrase or add a security key as a backup plan in\n            case you lose your other devices.\n          </p>\n          <div className=\"mt-3 space-y-2\">\n            {!hasRecoveryPhrase && (\n              <MethodRaw\n                onClick={handleWithLoading(onCreateRecoveryPhrase, (value) =>\n                  setPhrase(value),\n                )}\n                title=\"Secret recovery phrase\"\n                id=\"recovery-key\"\n                subtitle=\"A “master password” to keep offline\"\n                img={<IconRecovery />}\n              />\n            )}\n            {!hasRecoveryPhrase && (\n              <MethodRaw\n                onClick={handleWithLoading(\n                  () => onCreateRecoveryPhrase(false),\n                  (value) => setPhrase(value),\n                )}\n                title=\"Unprotected recovery phrase\"\n                subtitle=\"A “master password” to keep offline\"\n                img={<IconRecovery />}\n                id=\"create-unprotected-phrase\"\n                className=\"absolute w-0 h-0 opacity-0\"\n              />\n            )}\n            {!hasSecurityKey && (\n              <MethodRaw\n                onClick={handleWithLoading(onRegisterRecoveryKey)}\n                title=\"Security key\"\n                id=\"security-key\"\n                subtitle=\"A USB stick to store a passkey on\"\n                img={<USBIcon />}\n              />\n            )}\n          </div>\n        </ModalAdvanced>\n      )}\n      {phrase.length ? (\n        <AddRecoveryPhraseModal onClose={() => setPhrase(\"\")} phrase={phrase} />\n      ) : null}\n      <Loader isLoading={isLoading} />\n    </ProfileTemplate>\n  )\n}\n\nexport default ProfileSecurityPage\n","import React from \"react\"\nimport { toast } from \"react-toastify\"\n\nimport { removeRecoveryDeviceFacade } from \"frontend/integration/facade\"\nimport { useDevices } from \"frontend/integration/identity-manager/devices/hooks\"\nimport {\n  LegacyDevice,\n  RecoveryDevice,\n} from \"frontend/integration/identity-manager/devices/state\"\nimport { useProfile } from \"frontend/integration/identity-manager/queries\"\nimport { protectRecoveryPhrase } from \"frontend/integration/internet-identity\"\nimport ProfileSecurityPage from \"frontend/ui/pages/new-profile/security\"\n\nconst ProfileSecurity = () => {\n  const { profile } = useProfile()\n\n  const {\n    devices,\n    socialDevices,\n    walletDevices,\n    recoveryDevices,\n    deleteDevice,\n    getDevices,\n    updateDevice,\n    getRecoveryDevices,\n    createRecoveryPhrase,\n    createSecurityDevice,\n  } = useDevices()\n\n  const handleDeleteDevice = React.useCallback(\n    async (device: LegacyDevice) => {\n      await deleteDevice(device.pubkey)\n    },\n    [deleteDevice],\n  )\n\n  const handleDeviceUpdate = React.useCallback(\n    async (device: LegacyDevice) => {\n      await updateDevice(device)\n      await getDevices()\n    },\n    [getDevices, updateDevice],\n  )\n\n  const handleRecoveryDelete = React.useCallback(\n    async (method: RecoveryDevice) => {\n      await deleteDevice(method.pubkey)\n    },\n    [deleteDevice],\n  )\n\n  const handleRecoveryUpdate = React.useCallback(\n    async (device: RecoveryDevice) => {\n      await updateDevice({ ...device, browser: \"\" })\n    },\n    [updateDevice],\n  )\n\n  const handleCreateRecoveryPhrase = React.useCallback(\n    async (protect = true) => {\n      // NOTE: NEVER LOG RECOVERY PHRASE\n      return await createRecoveryPhrase(protect)\n    },\n    [createRecoveryPhrase],\n  )\n\n  const handleDeleteRecoveryPhrase = React.useCallback(\n    async (seedPhrase: string) => {\n      if (!profile?.anchor) return\n\n      let phrase = seedPhrase.split(\" \")\n      const possibleUserNumber = parseInt(phrase[0])\n\n      if (\n        !isNaN(possibleUserNumber) &&\n        Number(profile.anchor) !== possibleUserNumber\n      ) {\n        toast.error(\"Incorrect seed phrase\")\n        return\n      }\n\n      if (!isNaN(possibleUserNumber)) phrase.shift()\n\n      await removeRecoveryDeviceFacade(\n        BigInt(profile?.anchor),\n        phrase.join(\" \"),\n      )\n      await getRecoveryDevices()\n    },\n    [getRecoveryDevices, profile?.anchor],\n  )\n\n  const handleProtectRecovery = React.useCallback(\n    async (seedPhrase: string) => {\n      if (!profile?.anchor) return\n\n      let phrase = seedPhrase.split(\" \")\n      const possibleUserNumber = parseInt(phrase[0])\n\n      if (\n        !isNaN(possibleUserNumber) &&\n        Number(profile.anchor) !== possibleUserNumber\n      ) {\n        toast.error(\"Incorrect seed phrase\")\n        return\n      }\n\n      if (!isNaN(possibleUserNumber)) phrase.shift()\n\n      try {\n        return await protectRecoveryPhrase(\n          BigInt(profile?.anchor ?? 0),\n          phrase.join(\" \"),\n        )\n      } catch {\n        toast.error(\"Incorrect seed phrase\")\n        return\n      } finally {\n        getRecoveryDevices()\n      }\n    },\n    [getRecoveryDevices, profile?.anchor],\n  )\n\n  const handleRegisterRecoveryKey = React.useCallback(async () => {\n    await createSecurityDevice()\n  }, [createSecurityDevice])\n\n  return (\n    <ProfileSecurityPage\n      onDeviceDelete={handleDeleteDevice}\n      onDeviceUpdate={handleDeviceUpdate}\n      devices={devices}\n      socialDevices={socialDevices}\n      walletDevices={walletDevices}\n      onRecoveryDelete={handleRecoveryDelete}\n      onRecoveryUpdate={handleRecoveryUpdate}\n      onRecoveryProtect={handleProtectRecovery}\n      onRegisterRecoveryKey={handleRegisterRecoveryKey}\n      onCreateRecoveryPhrase={handleCreateRecoveryPhrase}\n      onDeleteRecoveryPhrase={handleDeleteRecoveryPhrase}\n      recoveryMethods={recoveryDevices}\n    />\n  )\n}\n\nexport default ProfileSecurity\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface CopyIconProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const CopyIcon: React.FC<CopyIconProps> = ({ className }) => {\n  return (\n    <svg\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={clsx(className)}\n    >\n      <path\n        d=\"M15 6.75H8.25C7.42157 6.75 6.75 7.42157 6.75 8.25V15C6.75 15.8284 7.42157 16.5 8.25 16.5H15C15.8284 16.5 16.5 15.8284 16.5 15V8.25C16.5 7.42157 15.8284 6.75 15 6.75Z\"\n        stroke=\"inherit\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M3.75 11.25H3C2.60218 11.25 2.22064 11.092 1.93934 10.8107C1.65804 10.5294 1.5 10.1478 1.5 9.75V3C1.5 2.60218 1.65804 2.22064 1.93934 1.93934C2.22064 1.65804 2.60218 1.5 3 1.5H9.75C10.1478 1.5 10.5294 1.65804 10.8107 1.93934C11.092 2.22064 11.25 2.60218 11.25 3V3.75\"\n        stroke=\"inherit\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface MobileIconProps extends React.SVGProps<SVGSVGElement> {}\n\nexport const MobileIcon: React.FC<MobileIconProps> = ({\n  className,\n  onClick,\n}) => {\n  return (\n    <svg\n      viewBox=\"0 0 34 34\"\n      fill=\"none\"\n      className={clsx(\"w-6 h-6\", className)}\n      onClick={onClick}\n    >\n      <path\n        d=\"M8.49902 7.08333C8.49902 5.51853 9.76755 4.25 11.3324 4.25H22.6657C24.2305 4.25 25.499 5.51853 25.499 7.08333V26.9167C25.499 28.4815 24.2305 29.75 22.6657 29.75H11.3324C9.76755 29.75 8.49902 28.4815 8.49902 26.9167V7.08333ZM22.6657 7.08333H11.3324V26.9167H22.6657V7.08333Z\"\n        fill=\"#0E62FF\"\n      />\n      <path\n        d=\"M14.167 7.08325H19.8337V7.08325C19.8337 7.86566 19.1994 8.49992 18.417 8.49992H15.5837C14.8013 8.49992 14.167 7.86566 14.167 7.08325V7.08325Z\"\n        fill=\"#0E62FF\"\n      />\n    </svg>\n  )\n}\n","import clsx from \"clsx\"\nimport React from \"react\"\n\ninterface IProfileContainer {\n  title?: string | React.ReactNode\n  subTitle?: string | React.ReactNode\n  children?: React.ReactNode\n  className?: string\n  showChildrenPadding?: boolean\n  id?: string\n}\n\nconst ProfileContainer: React.FC<IProfileContainer> = ({\n  title,\n  subTitle,\n  children,\n  className,\n  showChildrenPadding = true,\n  id,\n}) => {\n  return (\n    <div\n      id={id}\n      className={clsx(\n        \"block border border-gray-200 rounded-xl\",\n        \"py-4 sm:py-[26px]\",\n        className,\n      )}\n    >\n      <div className=\"px-5\">\n        {title && (\n          <div className=\"flex items-center justify-between mb-3 text-xl\">\n            {title}\n          </div>\n        )}\n        {subTitle && (\n          <div className=\"flex items-center justify-between mb-4 text-sm leading-5 text-secondary\">\n            {subTitle}\n          </div>\n        )}\n      </div>\n\n      <div className={clsx(showChildrenPadding && \"px-5 sm:px-[30px]\")}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileContainer\n"],"names":["PlusIcon","className","onClick","viewBox","fill","clsx","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","IconRecovery","width","height","xmlns","USBIcon","fillRule","clipRule","ModalCloseIcon","ModalAdvanced","children","title","subTitle","onClose","primaryButton","secondaryButton","large","backgroundClassnames","buttonsClassNames","H5","block","largeMax","text","primary","type","secondary","error","IconCancel","IconCheckMark","InfoIcon","PencilIcon","strokeOpacity","TrashIcon","fillOpacity","IconLaptop","DocumentIcon","GoogleIcon","IIIcon","src","dfinity","alt","IconDesktop","TabletIcon","UnknownIcon","DeviceIconDecider","icon","props","ICONS","DeviceListButtonGroup","onSelect","selected","handleSelect","React","map","isActive","DeviceListItem","device","initialDevice","onDelete","onDeviceUpdate","updatedDevice","setUpdatedDevice","editIconModal","toggleIconModal","state","deleteDeviceModal","toggleDeleteDeviceModal","isEditingLabel","toggleEditLabel","loading","setLoading","handleDeleteDevice","async","handleDeleteDeviceDialog","e","stopPropagation","handleSelectIcon","produce","draft","handleEditDeviceIconDialog","handleOnChangeLabel","target","value","label","handleOnDeviceUpdate","handleOnIconUpdate","handleOnLabelUpdate","isAccessPoint","isWalletDevice","defaultValue","onChange","browser","isSocialDevice","format","lastUsed","style","display","recovery","tip","P","isLoading","phrase","copied","setCopied","useState","isSaved","setIsSaved","navigator","clipboard","writeText","toast","id","checked","htmlFor","disabled","MethodRaw","img","subtitle","IconWarning","clipPath","setPhrase","setIsLoading","handleDelete","name","rows","placeholder","split","length","onProtect","handleProtect","RecoveryMethodListItem","recoveryMethod","initialRecovery","onRecoveryUpdate","onRecoveryProtect","onRecoveryDelete","onDeleteRecoveryPhrase","updatedRecovery","setUpdatedRecovery","isProtectVisible","toggleProtectVisible","deleteRecoveryModal","toggleDeleteRecoveryModal","handleDeleteRecovery","method","handleProtectRecovery","handleDeleteRecoveryDialog","handleEditRecoveryIconDialog","handleOnRecoveryUpdate","isRecoveryPhrase","isProtected","isSecurityKey","onDeviceDelete","devices","onCreateRecoveryPhrase","onRegisterRecoveryKey","recoveryMethods","socialDevices","walletDevices","console","log","isModalVisible","setIsModalVisible","hasRecoveryPhrase","filter","rm","hasSecurityKey","canAddRecoveryMethod","handleWithLoading","cb","callback","res","pageTitle","profile","useProfile","recoveryDevices","deleteDevice","getDevices","updateDevice","getRecoveryDevices","createRecoveryPhrase","createSecurityDevice","useDevices","pubkey","handleDeviceUpdate","handleRecoveryDelete","handleRecoveryUpdate","handleCreateRecoveryPhrase","protect","handleDeleteRecoveryPhrase","anchor","seedPhrase","possibleUserNumber","parseInt","isNaN","Number","shift","removeRecoveryDeviceFacade","BigInt","join","protectRecoveryPhrase","handleRegisterRecoveryKey","CopyIcon","MobileIcon","showChildrenPadding"],"sourceRoot":""}